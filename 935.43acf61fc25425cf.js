"use strict";(self.webpackChunkjn_website_frontend=self.webpackChunkjn_website_frontend||[]).push([[935],{8149:(jr,bi,at)=>{at.d(bi,{y:()=>si});var F=at(719),Se=at(8256);let si=(()=>{class Et{constructor(xt){this.injector=xt,Et.injector=xt}}return Et.\u0275fac=function(xt){return new(xt||Et)(Se.LFG(Se.zs3))},Et.\u0275mod=Se.oAB({type:Et}),Et.\u0275inj=Se.cJS({imports:[F.HLk,F.HLk]}),Et})()},9203:(jr,bi,at)=>{at.d(bi,{y:()=>Di});var F=at(719),Se=at(8256),si=at(6682);const Et=["*"];let Di=(()=>{class xt extends F.pN9{constructor(_t,kt){super(_t),this.engineService=kt,this.onInit=new Se.vpe}ngOnInit(){if(super.ngOnInit(),this.scene&&(this.scene.objRef=this.objRef),this.thOnInitDOM(),this.thOnInitScene(this.objRef),this.parent&&this.parent instanceof F.lFy){if(this.parent.contentScene=this,!this.camera){let _t=this.objRef.children.find(kt=>kt instanceof si.V1s);_t&&(this.camera=new F.Pts(this),this.camera.objRef=_t)}this.parent.contentCamera=this.camera}}ngAfterViewInit(){}thOnInitDOM(){}thOnInitScene(_t){this.onInit.emit({engine:this.engineService,scene:_t})}}return xt.\u0275fac=function(_t){return new(_t||xt)(Se.Y36(F.EZf),Se.Y36(F.D9c))},xt.\u0275cmp=Se.Xpm({type:xt,selectors:[["jn-th-scene"]],viewQuery:function(_t,kt){if(1&_t&&(Se.Gf(F.pN9,7),Se.Gf(F.Pts,7)),2&_t){let Gt;Se.iGM(Gt=Se.CRH())&&(kt.scene=Gt.first),Se.iGM(Gt=Se.CRH())&&(kt.camera=Gt.first)}},outputs:{onInit:"onInit"},features:[Se.qOj],ngContentSelectors:Et,decls:1,vars:0,template:function(_t,kt){1&_t&&(Se.F$t(),Se.Hsn(0))},encapsulation:2}),xt})()},6063:(jr,bi,at)=>{at.d(bi,{l:()=>F});const F={now:()=>(F.delegate||Date).now(),delegate:void 0}},719:(jr,bi,at)=>{at.d(bi,{XBg:()=>Fo,HLk:()=>hr,I1v:()=>fn,ITp:()=>ki,sI:()=>Xr,Pts:()=>Li,lFy:()=>di,D9c:()=>xi,UG5:()=>Gs,JO:()=>qr,YRQ:()=>Os,WB3:()=>gc,EZf:()=>Je,RjQ:()=>yn,TfJ:()=>yc,XHp:()=>bc,pN9:()=>As,DOm:()=>Tc});var F=at(8256),Se=at(6682),si=at(7579),Et=at(6063);class Di extends si.x{constructor(p=1/0,r=1/0,y=Et.l){super(),this._bufferSize=p,this._windowTime=r,this._timestampProvider=y,this._buffer=[],this._infiniteTimeWindow=!0,this._infiniteTimeWindow=r===1/0,this._bufferSize=Math.max(1,p),this._windowTime=Math.max(1,r)}next(p){const{isStopped:r,_buffer:y,_infiniteTimeWindow:N,_timestampProvider:pe,_windowTime:Pe}=this;r||(y.push(p),!N&&y.push(pe.now()+Pe)),this._trimBuffer(),super.next(p)}_subscribe(p){this._throwIfClosed(),this._trimBuffer();const r=this._innerSubscribe(p),{_infiniteTimeWindow:y,_buffer:N}=this,pe=N.slice();for(let Pe=0;Pe<pe.length&&!p.closed;Pe+=y?1:2)p.next(pe[Pe]);return this._checkFinalizedStatuses(p),r}_trimBuffer(){const{_bufferSize:p,_timestampProvider:r,_buffer:y,_infiniteTimeWindow:N}=this,pe=(N?1:2)*p;if(p<1/0&&pe<y.length&&y.splice(0,y.length-pe),!N){const Pe=r.now();let lt=0;for(let bt=1;bt<y.length&&y[bt]<=Pe;bt+=2)lt=bt;lt&&y.splice(0,lt+1)}}}var xt=at(4482),ui=at(5403),_t=at(8421),kt=at(5032);function Gt(b){return(0,xt.e)((p,r)=>{(0,_t.Xf)(b).subscribe((0,ui.x)(r,()=>r.complete(),kt.Z)),!r.closed&&p.subscribe(r)})}var Xt=function(){var b=0,p=document.createElement("div");function r(tt){return p.appendChild(tt.dom),tt}function y(tt){for(var Rt=0;Rt<p.children.length;Rt++)p.children[Rt].style.display=Rt===tt?"block":"none";b=tt}p.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",p.addEventListener("click",function(tt){tt.preventDefault(),y(++b%p.children.length)},!1);var N=(performance||Date).now(),pe=N,Pe=0,lt=r(new Xt.Panel("FPS","#0ff","#002")),bt=r(new Xt.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var gi=r(new Xt.Panel("MB","#f08","#201"));return y(0),{REVISION:16,dom:p,addPanel:r,showPanel:y,begin:function(){N=(performance||Date).now()},end:function(){Pe++;var tt=(performance||Date).now();if(bt.update(tt-N,200),tt>=pe+1e3&&(lt.update(1e3*Pe/(tt-pe),100),pe=tt,Pe=0,gi)){var Rt=performance.memory;gi.update(Rt.usedJSHeapSize/1048576,Rt.jsHeapSizeLimit/1048576)}return tt},update:function(){N=this.end()},domElement:p,setMode:y}};Xt.Panel=function(b,p,r){var y=1/0,N=0,pe=Math.round,Pe=pe(window.devicePixelRatio||1),lt=80*Pe,bt=48*Pe,gi=3*Pe,tt=2*Pe,Rt=3*Pe,ii=15*Pe,Si=74*Pe,wi=30*Pe,st=document.createElement("canvas");st.width=lt,st.height=bt,st.style.cssText="width:80px;height:48px";var qe=st.getContext("2d");return qe.font="bold "+9*Pe+"px Helvetica,Arial,sans-serif",qe.textBaseline="top",qe.fillStyle=r,qe.fillRect(0,0,lt,bt),qe.fillStyle=p,qe.fillText(b,gi,tt),qe.fillRect(Rt,ii,Si,wi),qe.fillStyle=r,qe.globalAlpha=.9,qe.fillRect(Rt,ii,Si,wi),{dom:st,update:function(Vt,Ln){y=Math.min(y,Vt),N=Math.max(N,Vt),qe.fillStyle=r,qe.globalAlpha=1,qe.fillRect(0,0,lt,ii),qe.fillStyle=p,qe.fillText(pe(Vt)+" "+b+" ("+pe(y)+"-"+pe(N)+")",gi,tt),qe.drawImage(st,Rt+Pe,ii,Si-Pe,wi,Rt,ii,Si-Pe,wi),qe.fillRect(Rt+Si-Pe,ii,Pe,wi),qe.fillStyle=r,qe.globalAlpha=.9,qe.fillRect(Rt+Si-Pe,ii,Pe,pe((1-Vt/Ln)*wi))}}};const zi=Xt;var fi=at(6895);const qt=["rendererCanvas"],Yn=["outerRef"],Zn=["innerRef"];function Ti(b,p){1&b&&F.GkF(0)}function en(b,p){if(1&b){const r=F.EpF();F.TgZ(0,"div",3,4),F.NdJ("onResize",function(){F.CHM(r);const N=F.oxw();return F.KtG(N.onResize())}),F.TgZ(2,"div",5,6)(4,"div",7),F.YNc(5,Ti,1,0,"ng-container",8),F.qZA()()()}if(2&b){const r=F.oxw(),y=F.MAs(4);F.Q6J("ngStyle",r.styles),F.xp6(2),F.Q6J("ngStyle",r.transformInnerStyles),F.xp6(2),F.Akn(r.style),F.Q6J("className",r.className),F.xp6(1),F.Q6J("ngTemplateOutlet",y)}}function Br(b,p){1&b&&F.GkF(0)}function Ds(b,p){if(1&b&&(F.TgZ(0,"div",9,4),F.YNc(2,Br,1,0,"ng-container",8),F.qZA()),2&b){const r=F.oxw(),y=F.MAs(4);F.Q6J("ngStyle",r.styles)("className",r.className),F.xp6(2),F.Q6J("ngTemplateOutlet",y)}}function Ls(b,p){1&b&&F.Hsn(0)}const Ya=["*"];var Dt=(()=>{return(b=Dt||(Dt={})).mouseEnter="mouseEnter",b.mouseExit="mouseExit",b.click="click",b.pointerDown="pointerDown",b.pointerUp="pointerUp",Dt;var b})();const $n=new F.OlP("A reference to the raycaster object",{factory:()=>new Se.iMs});let Jn=(()=>{class b{constructor(){this.raycaster=(0,F.f3M)($n),this.selected=null,this.enabled=!0,this.groups=[],this.paused=!1,this.maxClickDistance=23,this.nid=b.instanceCnt++,this.onPointerMove=this.onPointerMove.bind(this),this.onPointerDown=this.onPointerDown.bind(this),this.onPointerUp=this.onPointerUp.bind(this)}ngOnDestroy(){this.disable(),this.unsubscribe()}subscribe(){if(!this.canvas)throw new Error("missing canvas");this.canvas.addEventListener("pointermove",this.onPointerMove),this.canvas.addEventListener("pointerdown",this.onPointerDown),this.canvas.addEventListener("pointerup",this.onPointerUp)}unsubscribe(){if(!this.canvas)throw new Error("missing canvas");this.canvas.removeEventListener("pointermove",this.onPointerMove),this.canvas.removeEventListener("pointerdown",this.onPointerDown),this.canvas.removeEventListener("pointerup",this.onPointerUp)}enable(){this.enabled=!0}disable(){this.enabled=!1}pause(){this.paused=!0}resume(){this.paused=!1}get isEnabled(){return this.enabled}init(r,y){this.camera=r,this.canvas=y,this.subscribe()}addEventTarget(r){this.groups.push(r)}removeEventTarget(r){const y=this.groups.indexOf(r);y>=0&&this.groups.splice(y,1)}onPointerMove(r){if(!this.isReady())return;const y=this.getFirstIntersectedGroup(r.layerX,r.layerY,Dt.mouseEnter);if((!this.selected||this.selected!==y?.target)&&(this.selected&&(this.selected.host.objRef?.dispatchEvent({type:Dt.mouseExit,component:this.selected.host}),this.selected.emitOnMouseExit(),this.selected=null),y&&y.target)){this.selected=y.target;const N={type:Dt.mouseEnter,component:y.target.host,...y};this.selected.host.objRef?.dispatchEvent(N),this.selected.emitOnMouseEnter(N)}}onPointerDown(r){if(this.maxClickDistance=r.width,this.pointerDownEvent=r,!this.isReady())return;const y=this.getFirstIntersectedGroup(r.layerX,r.layerY,Dt.pointerDown);if(y&&y.target&&y.target.host.objRef){const N={type:Dt.pointerDown,component:y.target.host,...y};y.target.host.objRef.dispatchEvent(N),y.target.emitOnPointerDown(N)}}onPointerUp(r){const y=this.pointerDownEvent;if(this.pointerDownEvent=void 0,!this.isReady())return;let N=this.getFirstIntersectedGroup(r.layerX,r.layerY,Dt.pointerUp);if(N&&N.target&&N.target.host.objRef){const pe={type:Dt.pointerUp,component:N.target.host,...N};N.target.host.objRef.dispatchEvent(pe),N.target.emitOnPointerUp(pe)}if(!(this.calcPointerDownUpDinstance(r,y)>this.maxClickDistance)&&(N=this.getFirstIntersectedGroup(r.layerX,r.layerY,Dt.click),N&&N.target&&N.target.host.objRef)){const pe={type:Dt.click,component:N.target.host,...N};N.target.host.objRef.dispatchEvent(pe),N.target.emitOnClick(pe)}}isReady(r){return!!(this.enabled&&(r||!this.paused)&&this.camera&&this.camera.objRef&&this.groups&&this.groups.length>0)}calcPointerDownUpDinstance(r,y){if(!y)return Number.MAX_VALUE;const N=r.layerX-y.layerX,pe=r.layerY-y.layerY;return Math.sqrt(N*N+pe*pe)}getFirstIntersectedGroup(r,y,N){if(!this.camera||!this.canvas||!this.camera.objRef)return;const pe=new Se.FM8(r=r/this.canvas.clientWidth*2-1,y=-y/this.canvas.clientHeight*2+1);let Pe,lt;this.raycaster.setFromCamera(pe,this.camera.objRef);for(const bt of this.groups){const gi=bt.host.objRef;if(!bt[N]||!gi)continue;const tt=this.raycaster.intersectObject(gi,!0);tt.length>0&&(!Pe||Pe.distance>tt[0].distance)&&(Pe=tt[0],lt=bt)}return lt&&Pe?{target:lt,...Pe}:void 0}}return b.instanceCnt=0,b.\u0275fac=function(r){return new(r||b)},b.\u0275prov=F.Yz7({token:b,factory:b.\u0275fac}),b})();function dt(b,p){return function Ir(b){return!(!b||!b.set)}(b)?void 0===p?b:Array.isArray(p)?(b.set(...p),b):b.copy&&p?(b.copy(p),b):void 0!==p?(b.set(p),b):b:p}function Gr(b){return!0===b.__isProxy&&void 0===b.objRef}let Or=(()=>{class b{set objRef(r){this.applyObjRef(r)}get objRef(){return this._objRef}constructor(){this.autoAddToParent=!0,this.autoDispose=!0}addToParent(){}removeFromParent(){}set threeEvents(r){this.removeEvents(),this.eventListeners=r,this.applyEvents()}get threeEvents(){return this.eventListeners}get onUpdate(){return this.updateEmitter||(this.updateEmitter=new F.vpe),this.updateEmitter}get objRef$(){return this._objRef$||(this._objRef$=new Di(1)),this._objRef$}ngOnInit(){this.objRef||(this.objRef=this.createThreeInstance(this.args))}getType(){throw new Error("derive me")}createThreeInstance(r){return Array.isArray(r)?new(this.getType())(...r):new(this.getType())(r)}ngOnChanges(r){if(!this.objRef||Gr(this.objRef)){r.objRef?.currentValue?this.objRef=r.objRef?.currentValue:this.objRef||(this.objRef=this.createThreeInstance(r.args?.currentValue));for(const y in r)this[y]=r[y].currentValue;this.emitPropertyChanges(r)}else this.emitPropertyChanges(r)}disposeObjRef(){(function Za(b){return!(!b||"function"!=typeof b.dispose)})(this.objRef)&&this.objRef.dispose()}ngOnDestroy(){this.removeEvents(),this.removeFromParent(),this.autoDispose&&this.disposeObjRef()}applyObjRef(r){this._objRef!==r&&(this.removeFromParent(),this._objRef=r,this.autoAddToParent&&this.addToParent()),this.emitObjRefChange()}emitObjRefChange(){this._objRef&&!Gr(this._objRef)&&(this._objRef.dispatchEvent?.({type:"loaded",object:this._objRef}),this._objRef$&&this._objRef$.next(this._objRef))}emitPropertyChanges(r){this._objRef&&this._objRef.dispatchEvent?.({type:"changes",changes:r}),this.updateEmitter&&this.updateEmitter.next(r)}removeEvents(){if(this.eventListeners&&this._objRef){for(const r of Object.entries(this.eventListeners))this._objRef.removeEventListener(r[0],r[1]);this.eventListeners=void 0}}applyEvents(){if(this.eventListeners&&this._objRef)for(const r of Object.entries(this.eventListeners))this._objRef.addEventListener(r[0],r[1])}}return b.\u0275fac=function(r){return new(r||b)},b.\u0275cmp=F.Xpm({type:b,selectors:[["th-abs-wrapper"]],inputs:{autoAddToParent:"autoAddToParent",autoDispose:"autoDispose",objRef:"objRef",args:"args",threeEvents:"threeEvents"},outputs:{onUpdate:"onUpdate",objRef$:"objRef$"},features:[F.TTD],decls:0,vars:0,template:function(r,y){},encapsulation:2}),b})(),Qa=(()=>{class b extends Or{constructor(r){super(),this.parent=r}addToParent(){this._objRef&&this.parent.objRef&&(!this._objRef.parent||this._objRef.parent.uuid!==this.parent.objRef.uuid)&&this.parent.objRef.add(this._objRef)}removeFromParent(){this._objRef?.parent?.remove(this._objRef)}applyObjRef(r){(this._objRef!==r||this._objRef?.parent?.uuid!==this.parent.objRef.uuid)&&(this.removeFromParent(),this._objRef=r,this.autoAddToParent&&this.addToParent()),this.emitObjRefChange()}attachToParent(r,y){!this.parent.objRef||r===y&&y?.parent?.uuid===this.parent.objRef.uuid||(y&&y.parent&&y.parent.remove(y),r&&(!r.parent||r.parent&&r.parent.uuid!==this.parent.objRef.uuid)&&this.parent.objRef.add(r))}set lookAt(r){Promise.resolve().then(()=>{this.objRef&&(Array.isArray(r)?this.objRef.lookAt(...r):this.objRef.lookAt(r))})}}return b.\u0275fac=function(r){return new(r||b)(F.Y36(b))},b.\u0275cmp=F.Xpm({type:b,selectors:[["th-abs-object"]],inputs:{lookAt:"lookAt"},features:[F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2}),b})(),Je=(()=>{class b extends Qa{getType(){return Se.Tme}set id(r){this._objRef&&(this._objRef.id=r)}set uuid(r){this._objRef&&(this._objRef.uuid=r)}set name(r){this._objRef&&(this._objRef.name=r)}set type(r){this._objRef&&(this._objRef.type=r)}set children(r){this._objRef&&(this._objRef.children=r)}set up(r){this._objRef&&(this._objRef.up=dt(this._objRef.up,r))}set position(r){this._objRef&&dt(this._objRef.position,r)}set rotation(r){this._objRef&&dt(this._objRef.rotation,r)}set quaternion(r){this._objRef&&dt(this._objRef.quaternion,r)}set scale(r){this._objRef&&dt(this._objRef.scale,r)}set modelViewMatrix(r){this._objRef&&dt(this._objRef.modelViewMatrix,r)}set normalMatrix(r){this._objRef&&dt(this._objRef.normalMatrix,r)}set matrix(r){this._objRef&&(this._objRef.matrix=dt(this._objRef.matrix,r))}set matrixWorld(r){this._objRef&&(this._objRef.matrixWorld=dt(this._objRef.matrixWorld,r))}set matrixAutoUpdate(r){this._objRef&&(this._objRef.matrixAutoUpdate=r)}set matrixWorldAutoUpdate(r){this._objRef&&(this._objRef.matrixWorldAutoUpdate=r)}set matrixWorldNeedsUpdate(r){this._objRef&&(this._objRef.matrixWorldNeedsUpdate=r)}set layers(r){this._objRef&&(this._objRef.layers=dt(this._objRef.layers,r))}set visible(r){this._objRef&&(this._objRef.visible=r)}set castShadow(r){this._objRef&&(this._objRef.castShadow=r)}set receiveShadow(r){this._objRef&&(this._objRef.receiveShadow=r)}set frustumCulled(r){this._objRef&&(this._objRef.frustumCulled=r)}set renderOrder(r){this._objRef&&(this._objRef.renderOrder=r)}set animations(r){this._objRef&&(this._objRef.animations=r)}set userData(r){this._objRef&&(this._objRef.userData=r)}set customDepthMaterial(r){this._objRef&&(this._objRef.customDepthMaterial=r)}set customDistanceMaterial(r){this._objRef&&(this._objRef.customDistanceMaterial=r)}set onBeforeRender(r){this._objRef&&(this._objRef.onBeforeRender=r)}set onAfterRender(r){this._objRef&&(this._objRef.onAfterRender=r)}constructor(r){super(r)}}return b.\u0275fac=function(r){return new(r||b)(F.Y36(b,4))},b.\u0275cmp=F.Xpm({type:b,selectors:[["th-object3D"]],inputs:{id:"id",uuid:"uuid",name:"name",type:"type",children:"children",up:"up",position:"position",rotation:"rotation",quaternion:"quaternion",scale:"scale",modelViewMatrix:"modelViewMatrix",normalMatrix:"normalMatrix",matrix:"matrix",matrixWorld:"matrixWorld",matrixAutoUpdate:"matrixAutoUpdate",matrixWorldAutoUpdate:"matrixWorldAutoUpdate",matrixWorldNeedsUpdate:"matrixWorldNeedsUpdate",layers:"layers",visible:"visible",castShadow:"castShadow",receiveShadow:"receiveShadow",frustumCulled:"frustumCulled",renderOrder:"renderOrder",animations:"animations",userData:"userData",customDepthMaterial:"customDepthMaterial",customDistanceMaterial:"customDistanceMaterial",onBeforeRender:"onBeforeRender",onAfterRender:"onAfterRender"},features:[F._Bn([]),F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2,changeDetection:0}),b})(),Li=(()=>{class b extends Je{getType(){return Se.V1s}set matrixWorldInverse(r){this._objRef&&(this._objRef.matrixWorldInverse=dt(this._objRef.matrixWorldInverse,r))}set projectionMatrix(r){this._objRef&&(this._objRef.projectionMatrix=dt(this._objRef.projectionMatrix,r))}set projectionMatrixInverse(r){this._objRef&&(this._objRef.projectionMatrixInverse=dt(this._objRef.projectionMatrixInverse,r))}}return b.\u0275fac=function(){let p;return function(y){return(p||(p=F.n5z(b)))(y||b)}}(),b.\u0275cmp=F.Xpm({type:b,selectors:[["th-camera"]],inputs:{matrixWorldInverse:"matrixWorldInverse",projectionMatrix:"projectionMatrix",projectionMatrixInverse:"projectionMatrixInverse"},features:[F._Bn([{provide:Je,useExisting:(0,F.Gpc)(()=>b)}]),F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2,changeDetection:0}),b})(),As=(()=>{class b extends Je{getType(){return Se.xsS}set type(r){this._objRef&&(this._objRef.type=r)}set fog(r){this._objRef&&(this._objRef.fog=r)}set backgroundBlurriness(r){this._objRef&&(this._objRef.backgroundBlurriness=r)}set backgroundIntensity(r){this._objRef&&(this._objRef.backgroundIntensity=r)}set overrideMaterial(r){this._objRef&&(this._objRef.overrideMaterial=r)}set background(r){this._objRef&&(this._objRef.background=dt(this._objRef.background,r))}set environment(r){this._objRef&&(this._objRef.environment=r)}}return b.\u0275fac=function(){let p;return function(y){return(p||(p=F.n5z(b)))(y||b)}}(),b.\u0275cmp=F.Xpm({type:b,selectors:[["th-scene"]],inputs:{type:"type",fog:"fog",backgroundBlurriness:"backgroundBlurriness",backgroundIntensity:"backgroundIntensity",overrideMaterial:"overrideMaterial",background:"background",environment:"environment"},features:[F._Bn([{provide:Je,useExisting:(0,F.Gpc)(()=>b)}]),F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2,changeDetection:0}),b})();const Es={alpha:!0,antialias:!0,preserveDrawingBuffer:!0};let xi=(()=>{class b{get canvas(){return this.rendererParameters?.domElement}constructor(r){this.ngZone=r,this.clock=new Se.SUY,this.destroyed$=new si.x,this.resizeEmitter=new F.vpe,this.beforeRenderEmitter=new F.vpe,this.views=[],this.beforeRender$=this.beforeRenderEmitter.pipe(Gt(this.destroyed$)),this.resize$=this.resizeEmitter.pipe(Gt(this.destroyed$))}get renderer(){return this._renderer}ngOnDestroy(){this.resizeObserver&&this.canvas&&this.resizeObserver.unobserve(this.canvas)}initResizeObserver(){this.ngZone.runOutsideAngular(()=>{if(!this.canvas)throw new Error("missing canvas element");this.resize(),this.resizeObserver||(this.resizeObserver=new ResizeObserver(()=>{this.resize()})),this.resizeObserver.observe(this.canvas)})}initRenderer(){this._renderer||(this._renderer=new Se.CP7({canvas:this.rendererParameters?.domElement,...Es}),Object.assign(this._renderer,{...Es,...this.rendererParameters}),this.resize())}setRenderer(r){this.rendererParameters=r,this.initRenderer(),this.initResizeObserver()}addView(r){this.views.push(r);const y=this.calcRendererSize();y&&this.adjustViewDimensions(r,y.width,y.height)}render(){this.beforeRenderEmitter.emit({engine:this,delta:this.clock.getDelta()});for(const r of this.views)this.renderView(r)}renderView(r){if(!this._renderer)return;const y=r.camera,N=r.scene;if(!(y&&N&&y.objRef&&N.objRef))return;const pe=this._renderer;(function $a(b){return void 0!==b&&(b.observed||b.observers?.length>0)})(r.onRender)&&this.ngZone.run(()=>r.onRender.emit({renderer:pe,scene:N,camera:y})),this.applyRendererParametersFromView(r),r.effectComposer?r.effectComposer.render():this._renderer.render(N.objRef,y.objRef)}applyRendererParametersFromView(r){this._renderer&&(r.viewPort&&(r.viewPort instanceof Se.Ltg?this._renderer.setViewport(r.viewPort):this._renderer.setViewport(r.viewPort.x,r.viewPort.y,r.viewPort.width,r.viewPort.height)),r.scissor&&(r.scissor instanceof Se.Ltg?this._renderer.setScissor(r.scissor):this._renderer.setScissor(r.scissor.x,r.scissor.y,r.scissor.width,r.scissor.height)),void 0!==r.scissorTest&&this._renderer.setScissorTest(r.scissorTest),r.clearColor&&this._renderer.setClearColor(r.clearColor),void 0!==r.clearAlpha&&this._renderer.setClearAlpha(r.clearAlpha),void 0!==r.shadow&&(this._renderer.shadowMap.enabled=!0))}resize(){if(!this._renderer||!this.canvas)return!1;const{width:r,height:y}=this.calcRendererSize();this._renderer.setSize(r,y,!1);for(const N of this.views)this.adjustViewDimensions(N,r,y);return this.resizeEmitter.emit({width:r,height:y}),!0}calcRendererSize(){if(!this._renderer||!this.canvas)return;const r=window.devicePixelRatio;return{width:(this.canvas.clientWidth??0)*r,height:(this.canvas.clientHeight??0)*r}}adjustViewDimensions(r,y,N){r.viewPort||(r.camera&&r.camera.objRef.aspect&&(r.camera.objRef.aspect=y/N,r.camera.objRef.updateProjectionMatrix()),r.effectComposer?.setSize(y,N))}}return b.\u0275fac=function(r){return new(r||b)(F.LFG(F.R0b))},b.\u0275prov=F.Yz7({token:b,factory:b.\u0275fac}),b})(),Kn=(()=>{class b{constructor(r,y){this.engServ=r,this.raycaster=y,this.onRender=new F.vpe}set contentScene(r){r&&(this.scene=r)}set effectComposer(r){this._effectComposer=r,this.configureEffectComposerRenderTarget()}get effectComposer(){return this._effectComposer}set camera(r){this._camera=r,this.initRaycaster()}get camera(){return this._camera}set contentCamera(r){r&&(this.camera=r)}set viewPort(r){this._viewPort=r,this.configureEffectComposerRenderTarget()}get viewPort(){return this._viewPort}ngOnInit(){this.initRaycaster()}initRaycaster(){this.camera&&this.engServ.canvas&&this.raycaster.init(this.camera,this.engServ.canvas)}add(r){}remove(r){}configureEffectComposerRenderTarget(){if(this.viewPort&&this.effectComposer){let r,y;this.viewPort instanceof Se.Ltg?(r=this.viewPort.z,y=this.viewPort?.width):(r=this.viewPort.width,y=this.viewPort.height),this.effectComposer.setSize(r,y)}}}return b.\u0275fac=function(r){return new(r||b)(F.Y36(xi),F.Y36(Jn))},b.\u0275cmp=F.Xpm({type:b,selectors:[["th-view"]],contentQueries:function(r,y,N){if(1&r&&(F.Suo(N,As,5),F.Suo(N,Li,5)),2&r){let pe;F.iGM(pe=F.CRH())&&(y.contentScene=pe.first),F.iGM(pe=F.CRH())&&(y.contentCamera=pe.first)}},inputs:{scene:"scene",effectComposer:"effectComposer",camera:"camera",shadow:"shadow",viewPort:"viewPort",scissor:"scissor",scissorTest:"scissorTest",clearColor:"clearColor",clearAlpha:"clearAlpha"},outputs:{onRender:"onRender"},features:[F._Bn([{provide:Je,useExisting:(0,F.Gpc)(()=>b)},{provide:$n,useValue:new Se.iMs},Jn])],decls:0,vars:0,template:function(r,y){},encapsulation:2}),b})(),Qn=(()=>{class b{constructor(r,y){this.engineService=r,this.ngZone=y,this.active=!0,this.destroyed$=new si.x,this.beforeRender$=this.engineService.beforeRender$,this.engineService.resize$.pipe(Gt(this.destroyed$)).subscribe(()=>this.requestAnimationFrame())}ngOnDestroy(){this.stop(),this.destroyed$.next(),this.destroyed$.complete()}start(){this.active||(this.active=!0,this.requestAnimationFrame())}stop(){this.active=!1,void 0!==this.frameId&&(cancelAnimationFrame(this.frameId),this.frameId=void 0)}isActive(){return this.active}requestAnimationFrame(){void 0===this.frameId&&this.ngZone.runOutsideAngular(()=>this.frameId=requestAnimationFrame(()=>{this.frameId=void 0,this.engineService.render(),this.active&&this.requestAnimationFrame()}))}}return b.\u0275fac=function(r){return new(r||b)(F.LFG(xi),F.LFG(F.R0b))},b.\u0275prov=F.Yz7({token:b,factory:b.\u0275fac}),b})(),di=(()=>{class b extends Kn{get obj(){return this}set views(r){r.forEach(y=>this.engServ.addView(y))}set rendererCanvas(r){r&&(this._rendererCanvas=r,r.nativeElement.id+=this.nid)}get rendererCanvas(){return this._rendererCanvas}constructor(r,y,N){super(r,N),this.engServ=r,this.animationLoop=y,this.raycaster=N,this.nid=b.instanceCnt++,this.disableDefaultView=!1}ngAfterContentChecked(){this.animationLoop.requestAnimationFrame()}ngAfterViewInit(){this.animationLoop.requestAnimationFrame()}ngOnInit(){this.applyRendererParameters(),super.ngOnInit(),this.disableDefaultView||this.engServ.addView(this)}applyRendererParameters(){if(!this.rendererCanvas)throw new Error("Missing Canvas");this.engServ.setRenderer({...this.rendererParameters,domElement:this.rendererCanvas.nativeElement})}}return b.instanceCnt=0,b.\u0275fac=function(r){return new(r||b)(F.Y36(xi),F.Y36(Qn),F.Y36((0,F.Gpc)(()=>Jn)))},b.\u0275cmp=F.Xpm({type:b,selectors:[["th-canvas"]],contentQueries:function(r,y,N){if(1&r&&F.Suo(N,Kn,4),2&r){let pe;F.iGM(pe=F.CRH())&&(y.views=pe)}},viewQuery:function(r,y){if(1&r&&F.Gf(qt,7),2&r){let N;F.iGM(N=F.CRH())&&(y.rendererCanvas=N.first)}},inputs:{rendererParameters:"rendererParameters",disableDefaultView:"disableDefaultView"},features:[F._Bn([{provide:Je,useExisting:(0,F.Gpc)(()=>b)},xi,Qn,{provide:$n,useValue:new Se.iMs},(0,F.Gpc)(()=>Jn),{provide:Kn,useExisting:(0,F.Gpc)(()=>b)}]),F.qOj],decls:2,vars:0,consts:[["id","rendererCanvas"],["rendererCanvas",""]],template:function(r,y){1&r&&F._UZ(0,"canvas",0,1)},styles:["[_nghost-%COMP%]{display:flex;flex:auto;line-height:0;height:100%}canvas[_ngcontent-%COMP%]{flex:auto;outline:none;width:100%;height:100%}"],changeDetection:0}),b})(),kr=(()=>{class b extends Je{getType(){return Se._kC}set type(r){this._objRef&&(this._objRef.type=r)}set color(r){this._objRef&&(this._objRef.color=dt(this._objRef.color,r))}set intensity(r){this._objRef&&(this._objRef.intensity=r)}set shadow(r){this._objRef&&(this._objRef.shadow=r)}set shadowCameraFov(r){this._objRef&&(this._objRef.shadowCameraFov=r)}set shadowCameraLeft(r){this._objRef&&(this._objRef.shadowCameraLeft=r)}set shadowCameraRight(r){this._objRef&&(this._objRef.shadowCameraRight=r)}set shadowCameraTop(r){this._objRef&&(this._objRef.shadowCameraTop=r)}set shadowCameraBottom(r){this._objRef&&(this._objRef.shadowCameraBottom=r)}set shadowCameraNear(r){this._objRef&&(this._objRef.shadowCameraNear=r)}set shadowCameraFar(r){this._objRef&&(this._objRef.shadowCameraFar=r)}set shadowBias(r){this._objRef&&(this._objRef.shadowBias=r)}set shadowMapWidth(r){this._objRef&&(this._objRef.shadowMapWidth=r)}set shadowMapHeight(r){this._objRef&&(this._objRef.shadowMapHeight=r)}}return b.\u0275fac=function(){let p;return function(y){return(p||(p=F.n5z(b)))(y||b)}}(),b.\u0275cmp=F.Xpm({type:b,selectors:[["th-light"]],inputs:{type:"type",color:"color",intensity:"intensity",shadow:"shadow",shadowCameraFov:"shadowCameraFov",shadowCameraLeft:"shadowCameraLeft",shadowCameraRight:"shadowCameraRight",shadowCameraTop:"shadowCameraTop",shadowCameraBottom:"shadowCameraBottom",shadowCameraNear:"shadowCameraNear",shadowCameraFar:"shadowCameraFar",shadowBias:"shadowBias",shadowMapWidth:"shadowMapWidth",shadowMapHeight:"shadowMapHeight"},features:[F._Bn([{provide:Je,useExisting:(0,F.Gpc)(()=>b)}]),F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2,changeDetection:0}),b})(),ki=(()=>{class b extends kr{getType(){return Se.Mig}set type(r){this._objRef&&(this._objRef.type=r)}}return b.\u0275fac=function(){let p;return function(y){return(p||(p=F.n5z(b)))(y||b)}}(),b.\u0275cmp=F.Xpm({type:b,selectors:[["th-ambientLight"]],inputs:{type:"type"},features:[F._Bn([{provide:Je,useExisting:(0,F.Gpc)(()=>b)}]),F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2,changeDetection:0}),b})(),yn=(()=>{class b extends Li{getType(){return Se.cPb}set type(r){this._objRef&&(this._objRef.type=r)}set zoom(r){this._objRef&&(this._objRef.zoom=r)}set fov(r){this._objRef&&(this._objRef.fov=r)}set aspect(r){this._objRef&&(this._objRef.aspect=r)}set near(r){this._objRef&&(this._objRef.near=r)}set far(r){this._objRef&&(this._objRef.far=r)}set focus(r){this._objRef&&(this._objRef.focus=r)}set view(r){this._objRef&&(this._objRef.view=r)}set filmGauge(r){this._objRef&&(this._objRef.filmGauge=r)}set filmOffset(r){this._objRef&&(this._objRef.filmOffset=r)}}return b.\u0275fac=function(){let p;return function(y){return(p||(p=F.n5z(b)))(y||b)}}(),b.\u0275cmp=F.Xpm({type:b,selectors:[["th-perspectiveCamera"]],inputs:{type:"type",zoom:"zoom",fov:"fov",aspect:"aspect",near:"near",far:"far",focus:"focus",view:"view",filmGauge:"filmGauge",filmOffset:"filmOffset"},features:[F._Bn([{provide:Je,useExisting:(0,F.Gpc)(()=>b)},{provide:Li,useExisting:(0,F.Gpc)(()=>b)}]),F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2,changeDetection:0}),b})(),Hr=(()=>{class b extends Je{getType(){return Se.x12}set geometry(r){this._objRef&&(this._objRef.geometry=r)}set material(r){this._objRef&&(this._objRef.material=r)}set type(r){this._objRef&&(this._objRef.type=r)}set morphTargetInfluences(r){this._objRef&&(this._objRef.morphTargetInfluences=r)}set morphTargetDictionary(r){this._objRef&&(this._objRef.morphTargetDictionary=r)}}return b.\u0275fac=function(){let p;return function(y){return(p||(p=F.n5z(b)))(y||b)}}(),b.\u0275cmp=F.Xpm({type:b,selectors:[["th-line"]],inputs:{geometry:"geometry",material:"material",type:"type",morphTargetInfluences:"morphTargetInfluences",morphTargetDictionary:"morphTargetDictionary"},features:[F._Bn([{provide:Je,useExisting:(0,F.Gpc)(()=>b)}]),F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2,changeDetection:0}),b})(),Kl=(()=>{class b extends Hr{getType(){return Se.ejS}set type(r){this._objRef&&(this._objRef.type=r)}}return b.\u0275fac=function(){let p;return function(y){return(p||(p=F.n5z(b)))(y||b)}}(),b.\u0275cmp=F.Xpm({type:b,selectors:[["th-lineSegments"]],inputs:{type:"type"},features:[F._Bn([{provide:Je,useExisting:(0,F.Gpc)(()=>b)}]),F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2,changeDetection:0}),b})(),Ni=(()=>{class b extends Or{constructor(r){super(),this.parent=r}addToParent(){this.parent.objRef&&(this.parent.objRef.geometry=this.objRef,this.parent.objRef.updateMorphTargets&&this.parent.objRef.updateMorphTargets())}removeFromParent(){this._objRef&&this.parent&&this.parent.objRef&&(this.parent.objRef.geometry=void 0)}}return b.\u0275fac=function(r){return new(r||b)(F.Y36(Je))},b.\u0275cmp=F.Xpm({type:b,selectors:[["th-abs-geometry"]],features:[F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2}),b})(),Xr=(()=>{class b extends Ni{getType(){return Se.u9r}set id(r){this._objRef&&(this._objRef.id=r)}set uuid(r){this._objRef&&(this._objRef.uuid=r)}set name(r){this._objRef&&(this._objRef.name=r)}set type(r){this._objRef&&(this._objRef.type=r)}set index(r){this._objRef&&(this._objRef.index=dt(this._objRef.index,r))}set attributes(r){this._objRef&&(this._objRef.attributes=r)}set morphAttributes(r){this._objRef&&(this._objRef.morphAttributes=r)}set morphTargetsRelative(r){this._objRef&&(this._objRef.morphTargetsRelative=r)}set groups(r){this._objRef&&(this._objRef.groups=r)}set boundingBox(r){this._objRef&&(this._objRef.boundingBox=dt(this._objRef.boundingBox,r))}set boundingSphere(r){this._objRef&&(this._objRef.boundingSphere=dt(this._objRef.boundingSphere,r))}set drawRange(r){this._objRef&&(this._objRef.drawRange=r)}set userData(r){this._objRef&&(this._objRef.userData=r)}set drawcalls(r){this._objRef&&(this._objRef.drawcalls=r)}set offsets(r){this._objRef&&(this._objRef.offsets=r)}constructor(r){super(r)}}return b.\u0275fac=function(r){return new(r||b)(F.Y36(Je,4))},b.\u0275cmp=F.Xpm({type:b,selectors:[["th-bufferGeometry"]],inputs:{id:"id",uuid:"uuid",name:"name",type:"type",index:"index",attributes:"attributes",morphAttributes:"morphAttributes",morphTargetsRelative:"morphTargetsRelative",groups:"groups",boundingBox:"boundingBox",boundingSphere:"boundingSphere",drawRange:"drawRange",userData:"userData",drawcalls:"drawcalls",offsets:"offsets"},features:[F._Bn([]),F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2,changeDetection:0}),b})(),Gs=(()=>{class b extends Kl{getType(){return Se.VLJ}set type(r){this._objRef&&(this._objRef.type=r)}}return b.\u0275fac=function(){let p;return function(y){return(p||(p=F.n5z(b)))(y||b)}}(),b.\u0275cmp=F.Xpm({type:b,selectors:[["th-gridHelper"]],inputs:{type:"type"},features:[F._Bn([{provide:Je,useExisting:(0,F.Gpc)(()=>b)}]),F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2,changeDetection:0}),b})(),qr=(()=>{class b extends Je{getType(){return Se.ZAu}set type(r){this._objRef&&(this._objRef.type=r)}}return b.\u0275fac=function(){let p;return function(y){return(p||(p=F.n5z(b)))(y||b)}}(),b.\u0275cmp=F.Xpm({type:b,selectors:[["th-group"]],inputs:{type:"type"},features:[F._Bn([{provide:Je,useExisting:(0,F.Gpc)(()=>b)}]),F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2,changeDetection:0}),b})(),Os=(()=>{class b extends Je{getType(){return Se.Kj0}set geometry(r){this._objRef&&(this._objRef.geometry=r)}set material(r){this._objRef&&(this._objRef.material=r)}set morphTargetInfluences(r){this._objRef&&(this._objRef.morphTargetInfluences=r)}set morphTargetDictionary(r){this._objRef&&(this._objRef.morphTargetDictionary=r)}set type(r){this._objRef&&(this._objRef.type=r)}}return b.\u0275fac=function(){let p;return function(y){return(p||(p=F.n5z(b)))(y||b)}}(),b.\u0275cmp=F.Xpm({type:b,selectors:[["th-mesh"]],inputs:{geometry:"geometry",material:"material",morphTargetInfluences:"morphTargetInfluences",morphTargetDictionary:"morphTargetDictionary",type:"type"},features:[F._Bn([{provide:Je,useExisting:(0,F.Gpc)(()=>b)}]),F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2,changeDetection:0}),b})(),xo=(()=>{class b extends Or{constructor(r){super(),this.parent=r}addToParent(){if(!this.parent.objRef)throw new Error("parent object doesn't hold a three js object instance");this.parent.objRef.material=this.objRef}removeFromParent(){this._objRef&&this.parent&&this.parent.objRef&&(this.parent.objRef.material=void 0)}}return b.\u0275fac=function(r){return new(r||b)(F.Y36(Je))},b.\u0275cmp=F.Xpm({type:b,selectors:[["th-abs-material"]],features:[F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2}),b})(),Vi=(()=>{class b extends xo{getType(){return Se.F5T}set alphaTest(r){this._objRef&&(this._objRef.alphaTest=r)}set alphaToCoverage(r){this._objRef&&(this._objRef.alphaToCoverage=r)}set blendDst(r){this._objRef&&(this._objRef.blendDst=r)}set blendDstAlpha(r){this._objRef&&(this._objRef.blendDstAlpha=r)}set blendEquation(r){this._objRef&&(this._objRef.blendEquation=r)}set blendEquationAlpha(r){this._objRef&&(this._objRef.blendEquationAlpha=r)}set blending(r){this._objRef&&(this._objRef.blending=r)}set blendSrc(r){this._objRef&&(this._objRef.blendSrc=r)}set blendSrcAlpha(r){this._objRef&&(this._objRef.blendSrcAlpha=r)}set clipIntersection(r){this._objRef&&(this._objRef.clipIntersection=r)}set clippingPlanes(r){this._objRef&&(this._objRef.clippingPlanes=r)}set clipShadows(r){this._objRef&&(this._objRef.clipShadows=r)}set colorWrite(r){this._objRef&&(this._objRef.colorWrite=r)}set defines(r){this._objRef&&(this._objRef.defines=r)}set depthFunc(r){this._objRef&&(this._objRef.depthFunc=r)}set depthTest(r){this._objRef&&(this._objRef.depthTest=r)}set depthWrite(r){this._objRef&&(this._objRef.depthWrite=r)}set id(r){this._objRef&&(this._objRef.id=r)}set stencilWrite(r){this._objRef&&(this._objRef.stencilWrite=r)}set stencilFunc(r){this._objRef&&(this._objRef.stencilFunc=r)}set stencilRef(r){this._objRef&&(this._objRef.stencilRef=r)}set stencilWriteMask(r){this._objRef&&(this._objRef.stencilWriteMask=r)}set stencilFuncMask(r){this._objRef&&(this._objRef.stencilFuncMask=r)}set stencilFail(r){this._objRef&&(this._objRef.stencilFail=r)}set stencilZFail(r){this._objRef&&(this._objRef.stencilZFail=r)}set stencilZPass(r){this._objRef&&(this._objRef.stencilZPass=r)}set name(r){this._objRef&&(this._objRef.name=r)}set needsUpdate(r){this._objRef&&(this._objRef.needsUpdate=r)}set opacity(r){this._objRef&&(this._objRef.opacity=r)}set polygonOffset(r){this._objRef&&(this._objRef.polygonOffset=r)}set polygonOffsetFactor(r){this._objRef&&(this._objRef.polygonOffsetFactor=r)}set polygonOffsetUnits(r){this._objRef&&(this._objRef.polygonOffsetUnits=r)}set precision(r){this._objRef&&(this._objRef.precision=r)}set premultipliedAlpha(r){this._objRef&&(this._objRef.premultipliedAlpha=r)}set dithering(r){this._objRef&&(this._objRef.dithering=r)}set side(r){this._objRef&&(this._objRef.side=r)}set shadowSide(r){this._objRef&&(this._objRef.shadowSide=r)}set toneMapped(r){this._objRef&&(this._objRef.toneMapped=r)}set transparent(r){this._objRef&&(this._objRef.transparent=r)}set type(r){this._objRef&&(this._objRef.type=r)}set uuid(r){this._objRef&&(this._objRef.uuid=r)}set vertexColors(r){this._objRef&&(this._objRef.vertexColors=r)}set visible(r){this._objRef&&(this._objRef.visible=r)}set userData(r){this._objRef&&(this._objRef.userData=r)}set version(r){this._objRef&&(this._objRef.version=r)}constructor(r){super(r)}}return b.\u0275fac=function(r){return new(r||b)(F.Y36(Je,4))},b.\u0275cmp=F.Xpm({type:b,selectors:[["th-material"]],inputs:{alphaTest:"alphaTest",alphaToCoverage:"alphaToCoverage",blendDst:"blendDst",blendDstAlpha:"blendDstAlpha",blendEquation:"blendEquation",blendEquationAlpha:"blendEquationAlpha",blending:"blending",blendSrc:"blendSrc",blendSrcAlpha:"blendSrcAlpha",clipIntersection:"clipIntersection",clippingPlanes:"clippingPlanes",clipShadows:"clipShadows",colorWrite:"colorWrite",defines:"defines",depthFunc:"depthFunc",depthTest:"depthTest",depthWrite:"depthWrite",id:"id",stencilWrite:"stencilWrite",stencilFunc:"stencilFunc",stencilRef:"stencilRef",stencilWriteMask:"stencilWriteMask",stencilFuncMask:"stencilFuncMask",stencilFail:"stencilFail",stencilZFail:"stencilZFail",stencilZPass:"stencilZPass",name:"name",needsUpdate:"needsUpdate",opacity:"opacity",polygonOffset:"polygonOffset",polygonOffsetFactor:"polygonOffsetFactor",polygonOffsetUnits:"polygonOffsetUnits",precision:"precision",premultipliedAlpha:"premultipliedAlpha",dithering:"dithering",side:"side",shadowSide:"shadowSide",toneMapped:"toneMapped",transparent:"transparent",type:"type",uuid:"uuid",vertexColors:"vertexColors",visible:"visible",userData:"userData",version:"version"},features:[F._Bn([]),F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2,changeDetection:0}),b})(),gc=(()=>{class b extends Vi{getType(){return Se.vBJ}set type(r){this._objRef&&(this._objRef.type=r)}set color(r){this._objRef&&(this._objRef.color=dt(this._objRef.color,r))}set map(r){this._objRef&&(this._objRef.map=r)}set lightMap(r){this._objRef&&(this._objRef.lightMap=r)}set lightMapIntensity(r){this._objRef&&(this._objRef.lightMapIntensity=r)}set aoMap(r){this._objRef&&(this._objRef.aoMap=r)}set aoMapIntensity(r){this._objRef&&(this._objRef.aoMapIntensity=r)}set specularMap(r){this._objRef&&(this._objRef.specularMap=r)}set alphaMap(r){this._objRef&&(this._objRef.alphaMap=r)}set envMap(r){this._objRef&&(this._objRef.envMap=r)}set combine(r){this._objRef&&(this._objRef.combine=r)}set reflectivity(r){this._objRef&&(this._objRef.reflectivity=r)}set refractionRatio(r){this._objRef&&(this._objRef.refractionRatio=r)}set wireframe(r){this._objRef&&(this._objRef.wireframe=r)}set wireframeLinewidth(r){this._objRef&&(this._objRef.wireframeLinewidth=r)}set wireframeLinecap(r){this._objRef&&(this._objRef.wireframeLinecap=r)}set wireframeLinejoin(r){this._objRef&&(this._objRef.wireframeLinejoin=r)}set fog(r){this._objRef&&(this._objRef.fog=r)}}return b.\u0275fac=function(){let p;return function(y){return(p||(p=F.n5z(b)))(y||b)}}(),b.\u0275cmp=F.Xpm({type:b,selectors:[["th-meshBasicMaterial"]],inputs:{type:"type",color:"color",map:"map",lightMap:"lightMap",lightMapIntensity:"lightMapIntensity",aoMap:"aoMap",aoMapIntensity:"aoMapIntensity",specularMap:"specularMap",alphaMap:"alphaMap",envMap:"envMap",combine:"combine",reflectivity:"reflectivity",refractionRatio:"refractionRatio",wireframe:"wireframe",wireframeLinewidth:"wireframeLinewidth",wireframeLinecap:"wireframeLinecap",wireframeLinejoin:"wireframeLinejoin",fog:"fog"},features:[F._Bn([{provide:Vi,useExisting:(0,F.Gpc)(()=>b)}]),F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2,changeDetection:0}),b})(),yc=(()=>{class b extends Xr{getType(){return Se._12}set type(r){this._objRef&&(this._objRef.type=r)}set parameters(r){this._objRef&&(this._objRef.parameters=r)}}return b.\u0275fac=function(){let p;return function(y){return(p||(p=F.n5z(b)))(y||b)}}(),b.\u0275cmp=F.Xpm({type:b,selectors:[["th-planeGeometry"]],inputs:{type:"type",parameters:"parameters"},features:[F._Bn([{provide:Xr,useExisting:(0,F.Gpc)(()=>b)}]),F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2,changeDetection:0}),b})(),bc=(()=>{class b extends Je{getType(){return Se.woe}set type(r){this._objRef&&(this._objRef.type=r)}set morphTargetInfluences(r){this._objRef&&(this._objRef.morphTargetInfluences=r)}set morphTargetDictionary(r){this._objRef&&(this._objRef.morphTargetDictionary=r)}set geometry(r){this._objRef&&(this._objRef.geometry=r)}set material(r){this._objRef&&(this._objRef.material=r)}}return b.\u0275fac=function(){let p;return function(y){return(p||(p=F.n5z(b)))(y||b)}}(),b.\u0275cmp=F.Xpm({type:b,selectors:[["th-points"]],inputs:{type:"type",morphTargetInfluences:"morphTargetInfluences",morphTargetDictionary:"morphTargetDictionary",geometry:"geometry",material:"material"},features:[F._Bn([{provide:Je,useExisting:(0,F.Gpc)(()=>b)}]),F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2,changeDetection:0}),b})(),Tc=(()=>{class b extends Vi{getType(){return Se.jyz}set type(r){this._objRef&&(this._objRef.type=r)}set defines(r){this._objRef&&(this._objRef.defines=r)}set uniforms(r){this._objRef&&(this._objRef.uniforms=r)}set vertexShader(r){this._objRef&&(this._objRef.vertexShader=r)}set fragmentShader(r){this._objRef&&(this._objRef.fragmentShader=r)}set linewidth(r){this._objRef&&(this._objRef.linewidth=r)}set wireframe(r){this._objRef&&(this._objRef.wireframe=r)}set wireframeLinewidth(r){this._objRef&&(this._objRef.wireframeLinewidth=r)}set fog(r){this._objRef&&(this._objRef.fog=r)}set lights(r){this._objRef&&(this._objRef.lights=r)}set clipping(r){this._objRef&&(this._objRef.clipping=r)}set derivatives(r){this._objRef&&(this._objRef.derivatives=r)}set extensions(r){this._objRef&&(this._objRef.extensions=r)}set defaultAttributeValues(r){this._objRef&&(this._objRef.defaultAttributeValues=r)}set index0AttributeName(r){this._objRef&&(this._objRef.index0AttributeName=r)}set uniformsNeedUpdate(r){this._objRef&&(this._objRef.uniformsNeedUpdate=r)}set glslVersion(r){this._objRef&&(this._objRef.glslVersion=r)}set isShaderMaterial(r){this._objRef&&(this._objRef.isShaderMaterial=r)}}return b.\u0275fac=function(){let p;return function(y){return(p||(p=F.n5z(b)))(y||b)}}(),b.\u0275cmp=F.Xpm({type:b,selectors:[["th-shaderMaterial"]],inputs:{type:"type",defines:"defines",uniforms:"uniforms",vertexShader:"vertexShader",fragmentShader:"fragmentShader",linewidth:"linewidth",wireframe:"wireframe",wireframeLinewidth:"wireframeLinewidth",fog:"fog",lights:"lights",clipping:"clipping",derivatives:"derivatives",extensions:"extensions",defaultAttributeValues:"defaultAttributeValues",index0AttributeName:"index0AttributeName",uniformsNeedUpdate:"uniformsNeedUpdate",glslVersion:"glslVersion",isShaderMaterial:"isShaderMaterial"},features:[F._Bn([{provide:Vi,useExisting:(0,F.Gpc)(()=>b)}]),F.qOj],decls:0,vars:0,template:function(r,y){},encapsulation:2,changeDetection:0}),b})(),Hs=(()=>{class b{}return b.\u0275fac=function(r){return new(r||b)},b.\u0275mod=F.oAB({type:b}),b.\u0275inj=F.cJS({}),b})(),ts=(()=>{class b{constructor(r,y){this.engineService=r,this.animationLoopService=y}get beforeRender(){return this.engineService.beforeRender$}get onResize(){return this.engineService.resize$}set renderOnDemand(r){r?this.animationLoopService.stop():this.animationLoopService.start()}get renderOnDemand(){return!this.animationLoopService.isActive()}}return b.\u0275fac=function(r){return new(r||b)(F.Y36(xi),F.Y36(Qn))},b.\u0275dir=F.lG2({type:b,selectors:[["","beforeRender",""],["","onResize",""],["","renderOnDemand",""]],inputs:{renderOnDemand:"renderOnDemand"},outputs:{beforeRender:"beforeRender",onResize:"onResize"}}),b})(),fn=(()=>{class b{constructor(r){this.engineService=r,this.stats=zi()}ngOnDestroy(){this.renderSubscription&&this.renderSubscription.unsubscribe()}ngOnInit(){if(!this.engineService.canvas)throw new Error("No canvas present");const r=this.engineService.canvas.parentElement;r&&(r.style.position="relative",this.stats.domElement.style.position="absolute",this.stats.showPanel(0),this.engineService.canvas.parentElement?.appendChild(this.stats.dom),this.renderSubscription=this.engineService.beforeRender$.subscribe(()=>{this.stats.update()}))}set thStats(r){this.stats.domElement.style.visibility=r?"visible":"hidden"}}return b.\u0275fac=function(r){return new(r||b)(F.Y36(xi))},b.\u0275dir=F.lG2({type:b,selectors:[["","thStats",""]],inputs:{thStats:"thStats"}}),b})();const mi=new Se.Pa4,ai=new Se.Pa4,rs=new Se.Pa4;function lr(b,p,r){const y=mi.setFromMatrixPosition(b.matrixWorld);y.project(p);const N=r.width/2,pe=r.height/2;return[y.x*N+N,-y.y*pe+pe]}const mn=b=>Math.abs(b)<1e-10?0:b;function ze(b,p,r=""){let y="matrix3d(";for(let N=0;16!==N;N++)y+=mn(p[N]*b.elements[N])+(15!==N?",":")");return r+y}const gn=(b=[1,-1,1,1,1,-1,1,1,1,-1,1,1,1,-1,1,1],p=>ze(p,b));var b;let Fo=(()=>{class b extends qr{constructor(r,y,N){super(N),this.view=r,this.canvas=y,this.prepend=!1,this.center=!1,this.fullscreen=!1,this.eps=.001,this.sprite=!1,this.transform=!1,this.zIndexRange=[16777271,0],this.onOcclude=new F.vpe,this.calculatePosition=lr,this.as="div",this.pointerEvents="auto",this.transformInnerStyles=this.computeInnerStyles(),this.styles=null,this.oldZoom=0,this.oldPosition=[0,0],this.notOccluded=!0,this.raycaster=(0,F.f3M)($n)}ngOnInit(){super.ngOnInit(),this.styles=this.computeStyles()}ngAfterViewInit(){this.el=document.createElement(this.as),this.frameSubscription=this.view.onRender.subscribe(()=>this.onFrame()),this.transformOuterRef&&this.el.appendChild(this.transformOuterRef.nativeElement),this.el&&!this.target&&this.appendElement(this.el)}onResize(){this.styles=this.computeStyles()}ngOnChanges(r){super.ngOnChanges(r)}appendElement(r){if(this.el&&this.objRef&&this.canvas.rendererCanvas&&this.view.camera){if(this.target=this.portal??this.canvas.rendererCanvas?.nativeElement.parentElement,this.view.scene?.objRef?.updateMatrixWorld(),this.transform)r.style.cssText="position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;";else{const y=this.calculatePosition(this.objRef,this.view.camera.objRef,this.getSize());r.style.cssText=`position:absolute;top:0;left:0;transform:translate3d(${y[0]}px,${y[1]}px,0);transform-origin:0 0;`}this.target&&(this.prepend?this.target.prepend(r):this.target.appendChild(r))}}onFrame(){const r=this.view.camera?.objRef,y=this.view.scene?.objRef,N=this._objRef,pe=this.getSize();if(!(r&&N&&y&&this.el))return;r.updateMatrixWorld(),N.updateWorldMatrix(!0,!1);const Pe=this.transform?this.oldPosition:this.calculatePosition(N,r,pe);if(this.transform||Math.abs(this.oldZoom-r.zoom)>this.eps||Math.abs(this.oldPosition[0]-Pe[0])>this.eps||Math.abs(this.oldPosition[1]-Pe[1])>this.eps){const lt=function Fi(b,p){const r=mi.setFromMatrixPosition(b.matrixWorld),y=ai.setFromMatrixPosition(p.matrixWorld),N=r.sub(y),pe=p.getWorldDirection(rs);return N.angleTo(pe)>Math.PI/2}(N,r);let bt=!1;"boolean"==typeof this.occlude?!0===this.occlude&&(bt=[y]):Array.isArray(this.occlude)&&(bt=this.occlude.map(tt=>tt.objRef??tt));const gi=this.notOccluded;if(this.notOccluded=bt?!lt&&function ss(b,p,r,y){const N=mi.setFromMatrixPosition(b.matrixWorld),pe=N.clone();pe.project(p),r.setFromCamera(pe,p);const Pe=r.intersectObjects(y,!0);if(Pe.length){const lt=Pe[0].distance;return N.distanceTo(r.ray.origin)<lt}return!0}(N,r,this.raycaster,bt):!lt,gi!==this.notOccluded&&(this.onOcclude.length>0?this.onOcclude.next(!this.notOccluded):this.el.style.display=this.notOccluded?"block":"none"),this.el.style.zIndex=`${function as(b,p,r){if(p instanceof Se.cPb||p instanceof Se.iKG){const y=mi.setFromMatrixPosition(b.matrixWorld),N=ai.setFromMatrixPosition(p.matrixWorld),pe=y.distanceTo(N),Pe=(r[1]-r[0])/(p.far-p.near);return Math.round(Pe*pe+(r[1]-Pe*p.far))}}(N,r,this.zIndexRange)}`,this.transform){const[tt,Rt]=[pe.width/2,pe.height/2],ii=r.projectionMatrix.elements[5]*Rt,{isOrthographicCamera:Si,top:wi,left:st,bottom:qe,right:Vt}=r,Ln=gn(r.matrixWorldInverse),Pi=Si?`scale(${ii})translate(${mn(-(Vt+st)/2)}px,${mn((wi+qe)/2)}px)`:`translateZ(${ii}px)`;let ni=N.matrixWorld;this.sprite&&(ni=r.matrixWorldInverse.clone().transpose().copyPosition(ni).scale(N.scale),ni.elements[3]=ni.elements[7]=ni.elements[11]=0,ni.elements[15]=1),this.el.style.width=pe.width+"px",this.el.style.height=pe.height+"px",this.el.style.perspective=Si?"":`${ii}px`,this.transformOuterRef&&this.transformInnerRef&&(this.transformOuterRef.nativeElement.style.transform=`${Pi}${Ln}translate(${tt}px,${Rt}px)`,this.transformInnerRef.nativeElement.style.transform=((p,r)=>ze(p,(b=>[1/b,1/b,1/b,1,-1/b,-1/b,-1/b,-1,1/b,1/b,1/b,1,1,1,1,1])(r),"translate(-50%,-50%)"))(ni,1/((this.distanceFactor||10)/400)))}else{const tt=void 0===this.distanceFactor?1:function cr(b,p){if(p instanceof Se.iKG)return p.zoom;if(p instanceof Se.cPb){const r=mi.setFromMatrixPosition(b.matrixWorld),y=ai.setFromMatrixPosition(p.matrixWorld),N=p.fov*Math.PI/180,pe=r.distanceTo(y);return 1/(2*Math.tan(N/2)*pe)}return 1}(N,r)*this.distanceFactor;this.el.style.transform=`translate3d(${Pe[0]}px,${Pe[1]}px,0) scale(${tt})`}this.oldPosition=Pe,this.oldZoom=r.zoom}}ngOnDestroy(){this.el?.remove(),this.frameSubscription?.unsubscribe()}computeStyles(){const r=this.getSize();return this.transform?{position:"absolute",top:0,left:0,width:r.width+"px",height:r.height+"px",transformStyle:"preserve-3d",pointerEvents:"none"}:{position:"absolute",transform:this.center?"translate3d(-50%,-50%,0)":"none",...this.fullscreen&&{top:-r.height/2+"px",left:-r.width/2+"px",width:r.width+"px",height:r.height+"px"},...this.style}}computeInnerStyles(){return{position:"absolute",pointerEvents:this.pointerEvents}}getSize(){return this.view.viewPort??this.canvas.rendererCanvas?.nativeElement.getBoundingClientRect()??{width:0,height:0}}}return b.\u0275fac=function(r){return new(r||b)(F.Y36(Kn),F.Y36(di),F.Y36(Je,4))},b.\u0275cmp=F.Xpm({type:b,selectors:[["th-html"]],viewQuery:function(r,y){if(1&r&&(F.Gf(Yn,5),F.Gf(Zn,5)),2&r){let N;F.iGM(N=F.CRH())&&(y.transformOuterRef=N.first),F.iGM(N=F.CRH())&&(y.transformInnerRef=N.first)}},inputs:{prepend:"prepend",center:"center",fullscreen:"fullscreen",portal:"portal",distanceFactor:"distanceFactor",sprite:"sprite",transform:"transform",zIndexRange:"zIndexRange",style:"style",className:"className",occlude:"occlude",calculatePosition:"calculatePosition",as:"as",wrapperClass:"wrapperClass",pointerEvents:"pointerEvents"},outputs:{onOcclude:"onOcclude"},features:[F.qOj,F.TTD],ngContentSelectors:Ya,decls:5,vars:2,consts:[[3,"ngStyle","onResize",4,"ngIf","ngIfElse"],["noTransform",""],["tempOutlet",""],[3,"ngStyle","onResize"],["outerRef",""],[3,"ngStyle"],["innerRef",""],[3,"className"],[4,"ngTemplateOutlet"],[3,"ngStyle","className"]],template:function(r,y){if(1&r&&(F.F$t(),F.YNc(0,en,6,6,"div",0),F.YNc(1,Ds,3,3,"ng-template",null,1,F.W1O),F.YNc(3,Ls,1,0,"ng-template",null,2,F.W1O)),2&r){const N=F.MAs(2);F.Q6J("ngIf",y.transform)("ngIfElse",N)}},dependencies:[fi.O5,fi.tP,fi.PC,ts],encapsulation:2,changeDetection:0}),b})(),hr=(()=>{class b{}return b.\u0275fac=function(r){return new(r||b)},b.\u0275mod=F.oAB({type:b}),b.\u0275inj=F.cJS({imports:[Hs,fi.ez,Hs]}),b})()},6682:(jr,bi,at)=>{at.d(bi,{$V:()=>i_,CP7:()=>bh,DvJ:()=>An,EoG:()=>eo,F5T:()=>ji,FDw:()=>Xr,FIo:()=>ru,FM8:()=>ie,FT0:()=>ou,FvO:()=>r_,Ilk:()=>be,Kj0:()=>Ht,Ltg:()=>et,M8C:()=>Bc,Mig:()=>_u,O7d:()=>Fa,Ox3:()=>vu,PMe:()=>pu,Pa4:()=>D,QmN:()=>Et,Rki:()=>c_,RsA:()=>si,SPe:()=>Bh,SUY:()=>Su,TUj:()=>n_,T_1:()=>u_,TlE:()=>wt,Tme:()=>st,TyD:()=>mt,V1s:()=>oa,VLJ:()=>o_,WMw:()=>Br,Wid:()=>su,Wzm:()=>Eg,ZAu:()=>Tr,_12:()=>us,_Li:()=>qt,_fP:()=>Zt,_kC:()=>ws,a$l:()=>Me,aNw:()=>za,cBI:()=>l_,cPb:()=>zt,cek:()=>gu,dd2:()=>Hi,dpR:()=>Dv,ehD:()=>Yn,ejS:()=>Pr,fHI:()=>Cr,hH6:()=>$i,iKG:()=>ua,iMs:()=>t_,jFi:()=>Ti,jyz:()=>Bi,kB5:()=>Bn,lRF:()=>$o,mSO:()=>Ro,ntZ:()=>Xt,pBf:()=>ln,rDY:()=>Wc,rpg:()=>er,u9r:()=>Ve,vBJ:()=>vn,vpT:()=>Qo,wk1:()=>Qt,woe:()=>Vh,x12:()=>wr,xEZ:()=>Ri,xG9:()=>s_,xo$:()=>Rs,xoR:()=>au,xsS:()=>Th,y8_:()=>h_,ybr:()=>ma});var F=at(5861);const Se="148",si={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Et={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Di=0,xt=1,ui=2,Gt=1,Xt=2,zi=3,fi=0,qt=1,Yn=2,Zn=3,Ti=0,en=1,Br=2,Ds=3,Ls=4,Ya=5,Dt=100,$n=101,Jn=102,Ir=103,dt=104,Za=200,$a=201,Nl=202,Ja=203,Ka=204,Gr=205,Or=206,Qa=207,Je=208,Ul=209,Vl=210,Li=0,As=1,Es=2,xi=3,Kn=4,Hl=5,Wl=6,Xl=7,zr=0,ql=1,Qn=2,di=0,eo=1,Yl=2,Zl=3,$l=4,Jl=5,ki=301,tn=302,Nr=303,Ur=304,yn=306,er=1e3,Nt=1001,Vr=1002,mt=1003,Hr=1004,Wr=1005,yt=1006,to=1007,Ni=1008,Xr=1008,nn=1009,Ql=1010,ec=1011,io=1012,tc=1013,rn=1014,Ui=1015,tr=1016,ic=1017,nc=1018,bn=1020,rc=1021,sc=1022,Qt=1023,ac=1024,oc=1025,sn=1026,Tn=1027,lc=1028,cc=1029,hc=1030,uc=1031,fc=1033,Fs=33776,js=33777,Bs=33778,Is=33779,no=35840,ro=35841,so=35842,ao=35843,dc=36196,oo=37492,lo=37496,co=37808,ho=37809,uo=37810,fo=37811,po=37812,Gs=37813,qr=37814,mo=37815,go=37816,vo=37817,_o=37818,yo=37819,bo=37820,Os=37821,To=36492,an=3e3,ot=3001,Ro=3201,on=0,_c=1,Mi="srgb",ir="srgb-linear",So="300 es",Us=1035;class ln{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const i=this._listeners;void 0===i[e]&&(i[e]=[]),-1===i[e].indexOf(t)&&i[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const i=this._listeners;return void 0!==i[e]&&-1!==i[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const n=this._listeners[e];if(void 0!==n){const s=n.indexOf(t);-1!==s&&n.splice(s,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const i=this._listeners[e.type];if(void 0!==i){e.target=this;const n=i.slice(0);for(let s=0,a=n.length;s<a;s++)n[s].call(this,e);e.target=null}}}const Ot=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let wo=1234567;const cn=Math.PI/180,nr=180/Math.PI;function ei(){const l=4294967295*Math.random()|0,e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(Ot[255&l]+Ot[l>>8&255]+Ot[l>>16&255]+Ot[l>>24&255]+"-"+Ot[255&e]+Ot[e>>8&255]+"-"+Ot[e>>16&15|64]+Ot[e>>24&255]+"-"+Ot[63&t|128]+Ot[t>>8&255]+"-"+Ot[t>>16&255]+Ot[t>>24&255]+Ot[255&i]+Ot[i>>8&255]+Ot[i>>16&255]+Ot[i>>24&255]).toLowerCase()}function gt(l,e,t){return Math.max(e,Math.min(t,l))}function Vs(l,e){return(l%e+e)%e}function rr(l,e,t){return(1-t)*l+t*e}function Ws(l){return 0==(l&l-1)&&0!==l}function Jr(l){return Math.pow(2,Math.floor(Math.log(l)/Math.LN2))}function Ai(l,e){switch(e.constructor){case Float32Array:return l;case Uint16Array:return l/65535;case Uint8Array:return l/255;case Int16Array:return Math.max(l/32767,-1);case Int8Array:return Math.max(l/127,-1);default:throw new Error("Invalid component type.")}}function rt(l,e){switch(e.constructor){case Float32Array:return l;case Uint16Array:return Math.round(65535*l);case Uint8Array:return Math.round(255*l);case Int16Array:return Math.round(32767*l);case Int8Array:return Math.round(127*l);default:throw new Error("Invalid component type.")}}var Bc=Object.freeze({__proto__:null,DEG2RAD:cn,RAD2DEG:nr,generateUUID:ei,clamp:gt,euclideanModulo:Vs,mapLinear:function Mc(l,e,t,i,n){return i+(l-e)*(n-i)/(t-e)},inverseLerp:function Rc(l,e,t){return l!==e?(t-l)/(e-l):0},lerp:rr,damp:function Sc(l,e,t,i){return rr(l,e,1-Math.exp(-t*i))},pingpong:function wc(l,e=1){return e-Math.abs(Vs(l,2*e)-e)},smoothstep:function Pc(l,e,t){return l<=e?0:l>=t?1:(l=(l-e)/(t-e))*l*(3-2*l)},smootherstep:function Cc(l,e,t){return l<=e?0:l>=t?1:(l=(l-e)/(t-e))*l*l*(l*(6*l-15)+10)},randInt:function Dc(l,e){return l+Math.floor(Math.random()*(e-l+1))},randFloat:function Lc(l,e){return l+Math.random()*(e-l)},randFloatSpread:function Ac(l){return l*(.5-Math.random())},seededRandom:function Hs(l){void 0!==l&&(wo=l);let e=wo+=1831565813;return e=Math.imul(e^e>>>15,1|e),e^=e+Math.imul(e^e>>>7,61|e),((e^e>>>14)>>>0)/4294967296},degToRad:function Ec(l){return l*cn},radToDeg:function Fc(l){return l*nr},isPowerOfTwo:Ws,ceilPowerOfTwo:function Po(l){return Math.pow(2,Math.ceil(Math.log(l)/Math.LN2))},floorPowerOfTwo:Jr,setQuaternionFromProperEuler:function jc(l,e,t,i,n){const s=Math.cos,a=Math.sin,o=s(t/2),c=a(t/2),h=s((e+i)/2),u=a((e+i)/2),d=s((e-i)/2),f=a((e-i)/2),m=s((i-e)/2),_=a((i-e)/2);switch(n){case"XYX":l.set(o*u,c*d,c*f,o*h);break;case"YZY":l.set(c*f,o*u,c*d,o*h);break;case"ZXZ":l.set(c*d,c*f,o*u,o*h);break;case"XZX":l.set(o*u,c*_,c*m,o*h);break;case"YXY":l.set(c*m,o*u,c*_,o*h);break;case"ZYZ":l.set(c*_,c*m,o*u,o*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}},normalize:rt,denormalize:Ai});class ie{constructor(e=0,t=0){ie.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),n=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*i-a*n+e.x,this.y=s*n+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Yt{constructor(){Yt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,i,n,s,a,o,c,h){const u=this.elements;return u[0]=e,u[1]=n,u[2]=o,u[3]=t,u[4]=s,u[5]=c,u[6]=i,u[7]=a,u[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,a=i[0],o=i[3],c=i[6],h=i[1],u=i[4],d=i[7],f=i[2],m=i[5],_=i[8],g=n[0],v=n[3],x=n[6],R=n[1],T=n[4],M=n[7],P=n[2],L=n[5],j=n[8];return s[0]=a*g+o*R+c*P,s[3]=a*v+o*T+c*L,s[6]=a*x+o*M+c*j,s[1]=h*g+u*R+d*P,s[4]=h*v+u*T+d*L,s[7]=h*x+u*M+d*j,s[2]=f*g+m*R+_*P,s[5]=f*v+m*T+_*L,s[8]=f*x+m*M+_*j,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],a=e[4],o=e[5],c=e[6],h=e[7],u=e[8];return t*a*u-t*o*h-i*s*u+i*o*c+n*s*h-n*a*c}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],a=e[4],o=e[5],c=e[6],h=e[7],u=e[8],d=u*a-o*h,f=o*c-u*s,m=h*s-a*c,_=t*d+i*f+n*m;if(0===_)return this.set(0,0,0,0,0,0,0,0,0);const g=1/_;return e[0]=d*g,e[1]=(n*h-u*i)*g,e[2]=(o*i-n*a)*g,e[3]=f*g,e[4]=(u*t-n*c)*g,e[5]=(n*s-o*t)*g,e[6]=m*g,e[7]=(i*c-h*t)*g,e[8]=(a*t-i*s)*g,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,s,a,o){const c=Math.cos(s),h=Math.sin(s);return this.set(i*c,i*h,-i*(c*a+h*o)+a+e,-n*h,n*c,-n*(-h*a+c*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(Xs.makeScale(e,t)),this}rotate(e){return this.premultiply(Xs.makeRotation(-e)),this}translate(e,t){return this.premultiply(Xs.makeTranslation(e,t)),this}makeTranslation(e,t){return this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}const Xs=new Yt;function Co(l){for(let e=l.length-1;e>=0;--e)if(l[e]>=65535)return!0;return!1}function sr(l){return document.createElementNS("http://www.w3.org/1999/xhtml",l)}function hn(l){return l<.04045?.0773993808*l:Math.pow(.9478672986*l+.0521327014,2.4)}function Kr(l){return l<.0031308?12.92*l:1.055*Math.pow(l,.41666)-.055}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;const qs={[Mi]:{[ir]:hn},[ir]:{[Mi]:Kr}},Ut={legacyMode:!0,get workingColorSpace(){return ir},set workingColorSpace(l){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(l,e,t){if(this.legacyMode||e===t||!e||!t)return l;if(qs[e]&&void 0!==qs[e][t]){const i=qs[e][t];return l.r=i(l.r),l.g=i(l.g),l.b=i(l.b),l}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(l,e){return this.convert(l,this.workingColorSpace,e)},toWorkingColorSpace:function(l,e){return this.convert(l,e,this.workingColorSpace)}},Do={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Mt={r:0,g:0,b:0},pi={h:0,s:0,l:0},Qr={h:0,s:0,l:0};function Ys(l,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?l+6*(e-l)*t:t<.5?e:t<2/3?l+6*(e-l)*(2/3-t):l}function es(l,e){return e.r=l.r,e.g=l.g,e.b=l.b,e}let Sn,be=(()=>{class l{constructor(t,i,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===i&&void 0===n?this.set(t):this.setRGB(t,i,n)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,i=Mi){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,Ut.toWorkingColorSpace(this,i),this}setRGB(t,i,n,s=Ut.workingColorSpace){return this.r=t,this.g=i,this.b=n,Ut.toWorkingColorSpace(this,s),this}setHSL(t,i,n,s=Ut.workingColorSpace){if(t=Vs(t,1),i=gt(i,0,1),n=gt(n,0,1),0===i)this.r=this.g=this.b=n;else{const a=n<=.5?n*(1+i):n+i-n*i,o=2*n-a;this.r=Ys(o,a,t+1/3),this.g=Ys(o,a,t),this.b=Ys(o,a,t-1/3)}return Ut.toWorkingColorSpace(this,s),this}setStyle(t,i=Mi){function n(a){void 0!==a&&parseFloat(a)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let a;const c=s[2];switch(s[1]){case"rgb":case"rgba":if(a=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,Ut.toWorkingColorSpace(this,i),n(a[4]),this;if(a=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return this.r=Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,Ut.toWorkingColorSpace(this,i),n(a[4]),this;break;case"hsl":case"hsla":if(a=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c)){const h=parseFloat(a[1])/360,u=parseFloat(a[2])/100,d=parseFloat(a[3])/100;return n(a[4]),this.setHSL(h,u,d,i)}}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const a=s[1],o=a.length;if(3===o)return this.r=parseInt(a.charAt(0)+a.charAt(0),16)/255,this.g=parseInt(a.charAt(1)+a.charAt(1),16)/255,this.b=parseInt(a.charAt(2)+a.charAt(2),16)/255,Ut.toWorkingColorSpace(this,i),this;if(6===o)return this.r=parseInt(a.charAt(0)+a.charAt(1),16)/255,this.g=parseInt(a.charAt(2)+a.charAt(3),16)/255,this.b=parseInt(a.charAt(4)+a.charAt(5),16)/255,Ut.toWorkingColorSpace(this,i),this}return t&&t.length>0?this.setColorName(t,i):this}setColorName(t,i=Mi){const n=Do[t.toLowerCase()];return void 0!==n?this.setHex(n,i):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=hn(t.r),this.g=hn(t.g),this.b=hn(t.b),this}copyLinearToSRGB(t){return this.r=Kr(t.r),this.g=Kr(t.g),this.b=Kr(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Mi){return Ut.fromWorkingColorSpace(es(this,Mt),t),gt(255*Mt.r,0,255)<<16^gt(255*Mt.g,0,255)<<8^gt(255*Mt.b,0,255)<<0}getHexString(t=Mi){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,i=Ut.workingColorSpace){Ut.fromWorkingColorSpace(es(this,Mt),i);const n=Mt.r,s=Mt.g,a=Mt.b,o=Math.max(n,s,a),c=Math.min(n,s,a);let h,u;const d=(c+o)/2;if(c===o)h=0,u=0;else{const f=o-c;switch(u=d<=.5?f/(o+c):f/(2-o-c),o){case n:h=(s-a)/f+(s<a?6:0);break;case s:h=(a-n)/f+2;break;case a:h=(n-s)/f+4}h/=6}return t.h=h,t.s=u,t.l=d,t}getRGB(t,i=Ut.workingColorSpace){return Ut.fromWorkingColorSpace(es(this,Mt),i),t.r=Mt.r,t.g=Mt.g,t.b=Mt.b,t}getStyle(t=Mi){return Ut.fromWorkingColorSpace(es(this,Mt),t),t!==Mi?`color(${t} ${Mt.r} ${Mt.g} ${Mt.b})`:`rgb(${255*Mt.r|0},${255*Mt.g|0},${255*Mt.b|0})`}offsetHSL(t,i,n){return this.getHSL(pi),pi.h+=t,pi.s+=i,pi.l+=n,this.setHSL(pi.h,pi.s,pi.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,i){return this.r=t.r+i.r,this.g=t.g+i.g,this.b=t.b+i.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,i){return this.r+=(t.r-this.r)*i,this.g+=(t.g-this.g)*i,this.b+=(t.b-this.b)*i,this}lerpColors(t,i,n){return this.r=t.r+(i.r-t.r)*n,this.g=t.g+(i.g-t.g)*n,this.b=t.b+(i.b-t.b)*n,this}lerpHSL(t,i){this.getHSL(pi),t.getHSL(Qr);const n=rr(pi.h,Qr.h,i),s=rr(pi.s,Qr.s,i),a=rr(pi.l,Qr.l,i);return this.setHSL(n,s,a),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,i=0){return this.r=t[i],this.g=t[i+1],this.b=t[i+2],this}toArray(t=[],i=0){return t[i]=this.r,t[i+1]=this.g,t[i+2]=this.b,t}fromBufferAttribute(t,i){return this.r=t.getX(i),this.g=t.getY(i),this.b=t.getZ(i),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}return l.NAMES=Do,l})();class Lo{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===Sn&&(Sn=sr("canvas")),Sn.width=e.width,Sn.height=e.height;const i=Sn.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=Sn}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=sr("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const n=i.getImageData(0,0,e.width,e.height),s=n.data;for(let a=0;a<s.length;a++)s[a]=255*hn(s[a]/255);return i.putImageData(n,0,0),t}if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t[i]=t instanceof Uint8Array||t instanceof Uint8ClampedArray?Math.floor(255*hn(t[i]/255)):hn(t[i]);return{data:t,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class wn{constructor(e=null){this.isSource=!0,this.uuid=ei(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(null!==n){let s;if(Array.isArray(n)){s=[];for(let a=0,o=n.length;a<o;a++)s.push(Zs(n[a].isDataTexture?n[a].image:n[a]))}else s=Zs(n);i.url=s}return t||(e.images[this.uuid]=i),i}}function Zs(l){return typeof HTMLImageElement<"u"&&l instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&l instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&l instanceof ImageBitmap?Lo.getDataURL(l):l.data?{data:Array.from(l.data),width:l.width,height:l.height,type:l.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Gc=0,Ri=(()=>{class l extends ln{constructor(t=l.DEFAULT_IMAGE,i=l.DEFAULT_MAPPING,n=Nt,s=Nt,a=yt,o=Ni,c=Qt,h=nn,u=l.DEFAULT_ANISOTROPY,d=an){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Gc++}),this.uuid=ei(),this.name="",this.source=new wn(t),this.mipmaps=[],this.mapping=i,this.wrapS=n,this.wrapT=s,this.magFilter=a,this.minFilter=o,this.anisotropy=u,this.format=c,this.internalFormat=null,this.type=h,this.offset=new ie(0,0),this.repeat=new ie(1,1),this.center=new ie(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Yt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=d,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const i=void 0===t||"string"==typeof t;if(!i&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),i||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case er:t.x=t.x-Math.floor(t.x);break;case Nt:t.x=t.x<0?0:1;break;case Vr:t.x=1===Math.abs(Math.floor(t.x)%2)?Math.ceil(t.x)-t.x:t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case er:t.y=t.y-Math.floor(t.y);break;case Nt:t.y=t.y<0?0:1;break;case Vr:t.y=1===Math.abs(Math.floor(t.y)%2)?Math.ceil(t.y)-t.y:t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}}return l.DEFAULT_IMAGE=null,l.DEFAULT_MAPPING=300,l.DEFAULT_ANISOTROPY=1,l})();class et{constructor(e=0,t=0,i=0,n=1){et.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=this.w,a=e.elements;return this.x=a[0]*t+a[4]*i+a[8]*n+a[12]*s,this.y=a[1]*t+a[5]*i+a[9]*n+a[13]*s,this.z=a[2]*t+a[6]*i+a[10]*n+a[14]*s,this.w=a[3]*t+a[7]*i+a[11]*n+a[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,s;const c=e.elements,h=c[0],u=c[4],d=c[8],f=c[1],m=c[5],_=c[9],g=c[2],v=c[6],x=c[10];if(Math.abs(u-f)<.01&&Math.abs(d-g)<.01&&Math.abs(_-v)<.01){if(Math.abs(u+f)<.1&&Math.abs(d+g)<.1&&Math.abs(_+v)<.1&&Math.abs(h+m+x-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const T=(h+1)/2,M=(m+1)/2,P=(x+1)/2,L=(u+f)/4,j=(d+g)/4,S=(_+v)/4;return T>M&&T>P?T<.01?(i=0,n=.707106781,s=.707106781):(i=Math.sqrt(T),n=L/i,s=j/i):M>P?M<.01?(i=.707106781,n=0,s=.707106781):(n=Math.sqrt(M),i=L/n,s=S/n):P<.01?(i=.707106781,n=.707106781,s=0):(s=Math.sqrt(P),i=j/s,n=S/s),this.set(i,n,s,t),this}let R=Math.sqrt((v-_)*(v-_)+(d-g)*(d-g)+(f-u)*(f-u));return Math.abs(R)<.001&&(R=1),this.x=(v-_)/R,this.y=(d-g)/R,this.z=(f-u)/R,this.w=Math.acos((h+m+x-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Hi extends ln{constructor(e=1,t=1,i={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new et(0,0,e,t),this.scissorTest=!1,this.viewport=new et(0,0,e,t),this.texture=new Ri({width:e,height:t,depth:1},i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.internalFormat=void 0!==i.internalFormat?i.internalFormat:null,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:yt,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0!==i.stencilBuffer&&i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null,this.samples=void 0!==i.samples?i.samples:0}setSize(e,t,i=1){(this.width!==e||this.height!==t||this.depth!==i)&&(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new wn(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class $s extends Ri{constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=mt,this.minFilter=mt,this.wrapR=Nt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Ao extends Ri{constructor(e=null,t=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=mt,this.minFilter=mt,this.wrapR=Nt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Zt{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,s,a,o){let c=i[n+0],h=i[n+1],u=i[n+2],d=i[n+3];const f=s[a+0],m=s[a+1],_=s[a+2],g=s[a+3];if(0===o)return e[t+0]=c,e[t+1]=h,e[t+2]=u,void(e[t+3]=d);if(1===o)return e[t+0]=f,e[t+1]=m,e[t+2]=_,void(e[t+3]=g);if(d!==g||c!==f||h!==m||u!==_){let v=1-o;const x=c*f+h*m+u*_+d*g,R=x>=0?1:-1,T=1-x*x;if(T>Number.EPSILON){const P=Math.sqrt(T),L=Math.atan2(P,x*R);v=Math.sin(v*L)/P,o=Math.sin(o*L)/P}const M=o*R;if(c=c*v+f*M,h=h*v+m*M,u=u*v+_*M,d=d*v+g*M,v===1-o){const P=1/Math.sqrt(c*c+h*h+u*u+d*d);c*=P,h*=P,u*=P,d*=P}}e[t]=c,e[t+1]=h,e[t+2]=u,e[t+3]=d}static multiplyQuaternionsFlat(e,t,i,n,s,a){const o=i[n],c=i[n+1],h=i[n+2],u=i[n+3],d=s[a],f=s[a+1],m=s[a+2],_=s[a+3];return e[t]=o*_+u*d+c*m-h*f,e[t+1]=c*_+u*f+h*d-o*m,e[t+2]=h*_+u*m+o*f-c*d,e[t+3]=u*_-o*d-c*f-h*m,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const i=e._x,n=e._y,s=e._z,a=e._order,o=Math.cos,c=Math.sin,h=o(i/2),u=o(n/2),d=o(s/2),f=c(i/2),m=c(n/2),_=c(s/2);switch(a){case"XYZ":this._x=f*u*d+h*m*_,this._y=h*m*d-f*u*_,this._z=h*u*_+f*m*d,this._w=h*u*d-f*m*_;break;case"YXZ":this._x=f*u*d+h*m*_,this._y=h*m*d-f*u*_,this._z=h*u*_-f*m*d,this._w=h*u*d+f*m*_;break;case"ZXY":this._x=f*u*d-h*m*_,this._y=h*m*d+f*u*_,this._z=h*u*_+f*m*d,this._w=h*u*d-f*m*_;break;case"ZYX":this._x=f*u*d-h*m*_,this._y=h*m*d+f*u*_,this._z=h*u*_-f*m*d,this._w=h*u*d+f*m*_;break;case"YZX":this._x=f*u*d+h*m*_,this._y=h*m*d+f*u*_,this._z=h*u*_-f*m*d,this._w=h*u*d-f*m*_;break;case"XZY":this._x=f*u*d-h*m*_,this._y=h*m*d-f*u*_,this._z=h*u*_+f*m*d,this._w=h*u*d+f*m*_;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],n=t[4],s=t[8],a=t[1],o=t[5],c=t[9],h=t[2],u=t[6],d=t[10],f=i+o+d;if(f>0){const m=.5/Math.sqrt(f+1);this._w=.25/m,this._x=(u-c)*m,this._y=(s-h)*m,this._z=(a-n)*m}else if(i>o&&i>d){const m=2*Math.sqrt(1+i-o-d);this._w=(u-c)/m,this._x=.25*m,this._y=(n+a)/m,this._z=(s+h)/m}else if(o>d){const m=2*Math.sqrt(1+o-i-d);this._w=(s-h)/m,this._x=(n+a)/m,this._y=.25*m,this._z=(c+u)/m}else{const m=2*Math.sqrt(1+d-i-o);this._w=(a-n)/m,this._x=(s+h)/m,this._y=(c+u)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(gt(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(0===i)return this;const n=Math.min(1,t/i);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,n=e._y,s=e._z,a=e._w,o=t._x,c=t._y,h=t._z,u=t._w;return this._x=i*u+a*o+n*h-s*c,this._y=n*u+a*c+s*o-i*h,this._z=s*u+a*h+i*c-n*o,this._w=a*u-i*o-n*c-s*h,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const i=this._x,n=this._y,s=this._z,a=this._w;let o=a*e._w+i*e._x+n*e._y+s*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=i,this._y=n,this._z=s,this;const c=1-o*o;if(c<=Number.EPSILON){const m=1-t;return this._w=m*a+t*this._w,this._x=m*i+t*this._x,this._y=m*n+t*this._y,this._z=m*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(c),u=Math.atan2(h,o),d=Math.sin((1-t)*u)/h,f=Math.sin(t*u)/h;return this._w=a*d+this._w*f,this._x=i*d+this._x*f,this._y=n*d+this._y*f,this._z=s*d+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=Math.random(),t=Math.sqrt(1-e),i=Math.sqrt(e),n=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(n),i*Math.sin(s),i*Math.cos(s),t*Math.sin(n))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class D{constructor(e=0,t=0,i=0){D.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return void 0===i&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Eo.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Eo.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*n,this.y=s[1]*t+s[4]*i+s[7]*n,this.z=s[2]*t+s[5]*i+s[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=e.elements,a=1/(s[3]*t+s[7]*i+s[11]*n+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*n+s[12])*a,this.y=(s[1]*t+s[5]*i+s[9]*n+s[13])*a,this.z=(s[2]*t+s[6]*i+s[10]*n+s[14])*a,this}applyQuaternion(e){const t=this.x,i=this.y,n=this.z,s=e.x,a=e.y,o=e.z,c=e.w,h=c*t+a*n-o*i,u=c*i+o*t-s*n,d=c*n+s*i-a*t,f=-s*t-a*i-o*n;return this.x=h*c+f*-s+u*-o-d*-a,this.y=u*c+f*-a+d*-s-h*-o,this.z=d*c+f*-o+h*-a-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*n,this.y=s[1]*t+s[5]*i+s[9]*n,this.z=s[2]*t+s[6]*i+s[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,n=e.y,s=e.z,a=t.x,o=t.y,c=t.z;return this.x=n*c-s*o,this.y=s*a-i*c,this.z=i*o-n*a,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Js.copy(this).projectOnVector(e),this.sub(Js)}reflect(e){return this.sub(Js.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(gt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(t),this.y=i*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Js=new D,Eo=new Zt;class Pn{constructor(e=new D(1/0,1/0,1/0),t=new D(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,i=1/0,n=1/0,s=-1/0,a=-1/0,o=-1/0;for(let c=0,h=e.length;c<h;c+=3){const u=e[c],d=e[c+1],f=e[c+2];u<t&&(t=u),d<i&&(i=d),f<n&&(n=f),u>s&&(s=u),d>a&&(a=d),f>o&&(o=f)}return this.min.set(t,i,n),this.max.set(s,a,o),this}setFromBufferAttribute(e){let t=1/0,i=1/0,n=1/0,s=-1/0,a=-1/0,o=-1/0;for(let c=0,h=e.count;c<h;c++){const u=e.getX(c),d=e.getY(c),f=e.getZ(c);u<t&&(t=u),d<i&&(i=d),f<n&&(n=f),u>s&&(s=u),d>a&&(a=d),f>o&&(o=f)}return this.min.set(t,i,n),this.max.set(s,a,o),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=un.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(void 0!==i)if(t&&null!=i.attributes&&void 0!==i.attributes.position){const s=i.attributes.position;for(let a=0,o=s.count;a<o;a++)un.fromBufferAttribute(s,a).applyMatrix4(e.matrixWorld),this.expandByPoint(un)}else null===i.boundingBox&&i.computeBoundingBox(),ts.copy(i.boundingBox),ts.applyMatrix4(e.matrixWorld),this.union(ts);const n=e.children;for(let s=0,a=n.length;s<a;s++)this.expandByObject(n[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,un),un.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ar),is.subVectors(this.max,ar),fn.subVectors(e.a,ar),Cn.subVectors(e.b,ar),Dn.subVectors(e.c,ar),Wi.subVectors(Cn,fn),Xi.subVectors(Dn,Cn),dn.subVectors(fn,Dn);let t=[0,-Wi.z,Wi.y,0,-Xi.z,Xi.y,0,-dn.z,dn.y,Wi.z,0,-Wi.x,Xi.z,0,-Xi.x,dn.z,0,-dn.x,-Wi.y,Wi.x,0,-Xi.y,Xi.x,0,-dn.y,dn.x,0];return!(!Ks(t,fn,Cn,Dn,is)||(t=[1,0,0,0,1,0,0,0,1],!Ks(t,fn,Cn,Dn,is)))&&(ns.crossVectors(Wi,Xi),t=[ns.x,ns.y,ns.z],Ks(t,fn,Cn,Dn,is))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return un.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(un).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(Ei[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ei[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ei[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ei[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ei[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ei[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ei[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ei[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ei)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Ei=[new D,new D,new D,new D,new D,new D,new D,new D],un=new D,ts=new Pn,fn=new D,Cn=new D,Dn=new D,Wi=new D,Xi=new D,dn=new D,ar=new D,is=new D,ns=new D,pn=new D;function Ks(l,e,t,i,n){for(let s=0,a=l.length-3;s<=a;s+=3){pn.fromArray(l,s);const o=n.x*Math.abs(pn.x)+n.y*Math.abs(pn.y)+n.z*Math.abs(pn.z),c=e.dot(pn),h=t.dot(pn),u=i.dot(pn);if(Math.max(-Math.max(c,h,u),Math.min(c,h,u))>o)return!1}return!0}const Oc=new Pn,or=new D,Qs=new D;class mi{constructor(e=new D,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;void 0!==t?i.copy(t):Oc.setFromPoints(e).getCenter(i);let n=0;for(let s=0,a=e.length;s<a;s++)n=Math.max(n,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;or.subVectors(e,this.center);const t=or.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),n=.5*(i-this.radius);this.center.addScaledVector(or,n/i),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(Qs.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(or.copy(e.center).add(Qs)),this.expandByPoint(or.copy(e.center).sub(Qs))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const ai=new D,rs=new D,lr=new D,Fi=new D,ss=new D,cr=new D,as=new D;class mn{constructor(e=new D,t=new D(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,ai)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=ai.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(ai.copy(this.direction).multiplyScalar(t).add(this.origin),ai.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){rs.copy(e).add(t).multiplyScalar(.5),lr.copy(t).sub(e).normalize(),Fi.copy(this.origin).sub(rs);const s=.5*e.distanceTo(t),a=-this.direction.dot(lr),o=Fi.dot(this.direction),c=-Fi.dot(lr),h=Fi.lengthSq(),u=Math.abs(1-a*a);let d,f,m,_;if(u>0)if(d=a*c-o,f=a*o-c,_=s*u,d>=0)if(f>=-_)if(f<=_){const g=1/u;d*=g,f*=g,m=d*(d+a*f+2*o)+f*(a*d+f+2*c)+h}else f=s,d=Math.max(0,-(a*f+o)),m=-d*d+f*(f+2*c)+h;else f=-s,d=Math.max(0,-(a*f+o)),m=-d*d+f*(f+2*c)+h;else f<=-_?(d=Math.max(0,-(-a*s+o)),f=d>0?-s:Math.min(Math.max(-s,-c),s),m=-d*d+f*(f+2*c)+h):f<=_?(d=0,f=Math.min(Math.max(-s,-c),s),m=f*(f+2*c)+h):(d=Math.max(0,-(a*s+o)),f=d>0?s:Math.min(Math.max(-s,-c),s),m=-d*d+f*(f+2*c)+h);else f=a>0?-s:s,d=Math.max(0,-(a*f+o)),m=-d*d+f*(f+2*c)+h;return i&&i.copy(this.direction).multiplyScalar(d).add(this.origin),n&&n.copy(lr).multiplyScalar(f).add(rs),m}intersectSphere(e,t){ai.subVectors(e.center,this.origin);const i=ai.dot(this.direction),n=ai.dot(ai)-i*i,s=e.radius*e.radius;if(n>s)return null;const a=Math.sqrt(s-n),o=i-a,c=i+a;return o<0&&c<0?null:this.at(o<0?c:o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return null===i?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,n,s,a,o,c;const h=1/this.direction.x,u=1/this.direction.y,d=1/this.direction.z,f=this.origin;return h>=0?(i=(e.min.x-f.x)*h,n=(e.max.x-f.x)*h):(i=(e.max.x-f.x)*h,n=(e.min.x-f.x)*h),u>=0?(s=(e.min.y-f.y)*u,a=(e.max.y-f.y)*u):(s=(e.max.y-f.y)*u,a=(e.min.y-f.y)*u),i>a||s>n||((s>i||isNaN(i))&&(i=s),(a<n||isNaN(n))&&(n=a),d>=0?(o=(e.min.z-f.z)*d,c=(e.max.z-f.z)*d):(o=(e.max.z-f.z)*d,c=(e.min.z-f.z)*d),i>c||o>n)||((o>i||i!=i)&&(i=o),(c<n||n!=n)&&(n=c),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return null!==this.intersectBox(e,ai)}intersectTriangle(e,t,i,n,s){ss.subVectors(t,e),cr.subVectors(i,e),as.crossVectors(ss,cr);let o,a=this.direction.dot(as);if(a>0){if(n)return null;o=1}else{if(!(a<0))return null;o=-1,a=-a}Fi.subVectors(this.origin,e);const c=o*this.direction.dot(cr.crossVectors(Fi,cr));if(c<0)return null;const h=o*this.direction.dot(ss.cross(Fi));if(h<0||c+h>a)return null;const u=-o*Fi.dot(as);return u<0?null:this.at(u/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class ze{constructor(){ze.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,i,n,s,a,o,c,h,u,d,f,m,_,g,v){const x=this.elements;return x[0]=e,x[4]=t,x[8]=i,x[12]=n,x[1]=s,x[5]=a,x[9]=o,x[13]=c,x[2]=h,x[6]=u,x[10]=d,x[14]=f,x[3]=m,x[7]=_,x[11]=g,x[15]=v,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new ze).fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,n=1/gn.setFromMatrixColumn(e,0).length(),s=1/gn.setFromMatrixColumn(e,1).length(),a=1/gn.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*a,t[9]=i[9]*a,t[10]=i[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,n=e.y,s=e.z,a=Math.cos(i),o=Math.sin(i),c=Math.cos(n),h=Math.sin(n),u=Math.cos(s),d=Math.sin(s);if("XYZ"===e.order){const f=a*u,m=a*d,_=o*u,g=o*d;t[0]=c*u,t[4]=-c*d,t[8]=h,t[1]=m+_*h,t[5]=f-g*h,t[9]=-o*c,t[2]=g-f*h,t[6]=_+m*h,t[10]=a*c}else if("YXZ"===e.order){const f=c*u,m=c*d,_=h*u,g=h*d;t[0]=f+g*o,t[4]=_*o-m,t[8]=a*h,t[1]=a*d,t[5]=a*u,t[9]=-o,t[2]=m*o-_,t[6]=g+f*o,t[10]=a*c}else if("ZXY"===e.order){const f=c*u,m=c*d,_=h*u,g=h*d;t[0]=f-g*o,t[4]=-a*d,t[8]=_+m*o,t[1]=m+_*o,t[5]=a*u,t[9]=g-f*o,t[2]=-a*h,t[6]=o,t[10]=a*c}else if("ZYX"===e.order){const f=a*u,m=a*d,_=o*u,g=o*d;t[0]=c*u,t[4]=_*h-m,t[8]=f*h+g,t[1]=c*d,t[5]=g*h+f,t[9]=m*h-_,t[2]=-h,t[6]=o*c,t[10]=a*c}else if("YZX"===e.order){const f=a*c,m=a*h,_=o*c,g=o*h;t[0]=c*u,t[4]=g-f*d,t[8]=_*d+m,t[1]=d,t[5]=a*u,t[9]=-o*u,t[2]=-h*u,t[6]=m*d+_,t[10]=f-g*d}else if("XZY"===e.order){const f=a*c,m=a*h,_=o*c,g=o*h;t[0]=c*u,t[4]=-d,t[8]=h*u,t[1]=f*d+g,t[5]=a*u,t[9]=m*d-_,t[2]=_*d-m,t[6]=o*u,t[10]=g*d+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Fo,e,zc)}lookAt(e,t,i){const n=this.elements;return ti.subVectors(e,t),0===ti.lengthSq()&&(ti.z=1),ti.normalize(),qi.crossVectors(i,ti),0===qi.lengthSq()&&(1===Math.abs(i.z)?ti.x+=1e-4:ti.z+=1e-4,ti.normalize(),qi.crossVectors(i,ti)),qi.normalize(),hr.crossVectors(ti,qi),n[0]=qi.x,n[4]=hr.x,n[8]=ti.x,n[1]=qi.y,n[5]=hr.y,n[9]=ti.y,n[2]=qi.z,n[6]=hr.z,n[10]=ti.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,a=i[0],o=i[4],c=i[8],h=i[12],u=i[1],d=i[5],f=i[9],m=i[13],_=i[2],g=i[6],v=i[10],x=i[14],R=i[3],T=i[7],M=i[11],P=i[15],L=n[0],j=n[4],S=n[8],A=n[12],B=n[1],U=n[5],ee=n[9],z=n[13],G=n[2],X=n[6],ne=n[10],ae=n[14],K=n[3],le=n[7],re=n[11],H=n[15];return s[0]=a*L+o*B+c*G+h*K,s[4]=a*j+o*U+c*X+h*le,s[8]=a*S+o*ee+c*ne+h*re,s[12]=a*A+o*z+c*ae+h*H,s[1]=u*L+d*B+f*G+m*K,s[5]=u*j+d*U+f*X+m*le,s[9]=u*S+d*ee+f*ne+m*re,s[13]=u*A+d*z+f*ae+m*H,s[2]=_*L+g*B+v*G+x*K,s[6]=_*j+g*U+v*X+x*le,s[10]=_*S+g*ee+v*ne+x*re,s[14]=_*A+g*z+v*ae+x*H,s[3]=R*L+T*B+M*G+P*K,s[7]=R*j+T*U+M*X+P*le,s[11]=R*S+T*ee+M*ne+P*re,s[15]=R*A+T*z+M*ae+P*H,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],n=e[8],s=e[12],a=e[1],o=e[5],c=e[9],h=e[13],u=e[2],d=e[6],f=e[10],m=e[14];return e[3]*(+s*c*d-n*h*d-s*o*f+i*h*f+n*o*m-i*c*m)+e[7]*(+t*c*m-t*h*f+s*a*f-n*a*m+n*h*u-s*c*u)+e[11]*(+t*h*d-t*o*m-s*a*d+i*a*m+s*o*u-i*h*u)+e[15]*(-n*o*u-t*c*d+t*o*f+n*a*d-i*a*f+i*c*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],a=e[4],o=e[5],c=e[6],h=e[7],u=e[8],d=e[9],f=e[10],m=e[11],_=e[12],g=e[13],v=e[14],x=e[15],R=d*v*h-g*f*h+g*c*m-o*v*m-d*c*x+o*f*x,T=_*f*h-u*v*h-_*c*m+a*v*m+u*c*x-a*f*x,M=u*g*h-_*d*h+_*o*m-a*g*m-u*o*x+a*d*x,P=_*d*c-u*g*c-_*o*f+a*g*f+u*o*v-a*d*v,L=t*R+i*T+n*M+s*P;if(0===L)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const j=1/L;return e[0]=R*j,e[1]=(g*f*s-d*v*s-g*n*m+i*v*m+d*n*x-i*f*x)*j,e[2]=(o*v*s-g*c*s+g*n*h-i*v*h-o*n*x+i*c*x)*j,e[3]=(d*c*s-o*f*s-d*n*h+i*f*h+o*n*m-i*c*m)*j,e[4]=T*j,e[5]=(u*v*s-_*f*s+_*n*m-t*v*m-u*n*x+t*f*x)*j,e[6]=(_*c*s-a*v*s-_*n*h+t*v*h+a*n*x-t*c*x)*j,e[7]=(a*f*s-u*c*s+u*n*h-t*f*h-a*n*m+t*c*m)*j,e[8]=M*j,e[9]=(_*d*s-u*g*s-_*i*m+t*g*m+u*i*x-t*d*x)*j,e[10]=(a*g*s-_*o*s+_*i*h-t*g*h-a*i*x+t*o*x)*j,e[11]=(u*o*s-a*d*s-u*i*h+t*d*h+a*i*m-t*o*m)*j,e[12]=P*j,e[13]=(u*g*n-_*d*n+_*i*f-t*g*f-u*i*v+t*d*v)*j,e[14]=(_*o*n-a*g*n-_*i*c+t*g*c+a*i*v-t*o*v)*j,e[15]=(a*d*n-u*o*n+u*i*c-t*d*c-a*i*f+t*o*f)*j,this}scale(e){const t=this.elements,i=e.x,n=e.y,s=e.z;return t[0]*=i,t[4]*=n,t[8]*=s,t[1]*=i,t[5]*=n,t[9]*=s,t[2]*=i,t[6]*=n,t[10]*=s,t[3]*=i,t[7]*=n,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10]))}makeTranslation(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),n=Math.sin(t),s=1-i,a=e.x,o=e.y,c=e.z,h=s*a,u=s*o;return this.set(h*a+i,h*o-n*c,h*c+n*o,0,h*o+n*c,u*o+i,u*c-n*a,0,h*c-n*o,u*c+n*a,s*c*c+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,s,a){return this.set(1,i,s,0,e,1,a,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){const n=this.elements,s=t._x,a=t._y,o=t._z,c=t._w,h=s+s,u=a+a,d=o+o,f=s*h,m=s*u,_=s*d,g=a*u,v=a*d,x=o*d,R=c*h,T=c*u,M=c*d,P=i.x,L=i.y,j=i.z;return n[0]=(1-(g+x))*P,n[1]=(m+M)*P,n[2]=(_-T)*P,n[3]=0,n[4]=(m-M)*L,n[5]=(1-(f+x))*L,n[6]=(v+R)*L,n[7]=0,n[8]=(_+T)*j,n[9]=(v-R)*j,n[10]=(1-(f+g))*j,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){const n=this.elements;let s=gn.set(n[0],n[1],n[2]).length();const a=gn.set(n[4],n[5],n[6]).length(),o=gn.set(n[8],n[9],n[10]).length();this.determinant()<0&&(s=-s),e.x=n[12],e.y=n[13],e.z=n[14],oi.copy(this);const h=1/s,u=1/a,d=1/o;return oi.elements[0]*=h,oi.elements[1]*=h,oi.elements[2]*=h,oi.elements[4]*=u,oi.elements[5]*=u,oi.elements[6]*=u,oi.elements[8]*=d,oi.elements[9]*=d,oi.elements[10]*=d,t.setFromRotationMatrix(oi),i.x=s,i.y=a,i.z=o,this}makePerspective(e,t,i,n,s,a){const o=this.elements,h=2*s/(i-n),u=(t+e)/(t-e),d=(i+n)/(i-n),f=-(a+s)/(a-s),m=-2*a*s/(a-s);return o[0]=2*s/(t-e),o[4]=0,o[8]=u,o[12]=0,o[1]=0,o[5]=h,o[9]=d,o[13]=0,o[2]=0,o[6]=0,o[10]=f,o[14]=m,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,i,n,s,a){const o=this.elements,c=1/(t-e),h=1/(i-n),u=1/(a-s),d=(t+e)*c,f=(i+n)*h,m=(a+s)*u;return o[0]=2*c,o[4]=0,o[8]=0,o[12]=-d,o[1]=0,o[5]=2*h,o[9]=0,o[13]=-f,o[2]=0,o[6]=0,o[10]=-2*u,o[14]=-m,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const gn=new D,oi=new ze,Fo=new D(0,0,0),zc=new D(1,1,1),qi=new D,hr=new D,ti=new D,jo=new ze,Bo=new Zt;let b=(()=>{class l{constructor(t=0,i=0,n=0,s=l.DefaultOrder){this.isEuler=!0,this._x=t,this._y=i,this._z=n,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,i,n,s=this._order){return this._x=t,this._y=i,this._z=n,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,i=this._order,n=!0){const s=t.elements,a=s[0],o=s[4],c=s[8],h=s[1],u=s[5],d=s[9],f=s[2],m=s[6],_=s[10];switch(i){case"XYZ":this._y=Math.asin(gt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-d,_),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(m,u),this._z=0);break;case"YXZ":this._x=Math.asin(-gt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(c,_),this._z=Math.atan2(h,u)):(this._y=Math.atan2(-f,a),this._z=0);break;case"ZXY":this._x=Math.asin(gt(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-f,_),this._z=Math.atan2(-o,u)):(this._y=0,this._z=Math.atan2(h,a));break;case"ZYX":this._y=Math.asin(-gt(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(m,_),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-o,u));break;case"YZX":this._z=Math.asin(gt(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-d,u),this._y=Math.atan2(-f,a)):(this._x=0,this._y=Math.atan2(c,_));break;case"XZY":this._z=Math.asin(-gt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(m,u),this._y=Math.atan2(c,a)):(this._x=Math.atan2(-d,_),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+i)}return this._order=i,!0===n&&this._onChangeCallback(),this}setFromQuaternion(t,i,n){return jo.makeRotationFromQuaternion(t),this.setFromRotationMatrix(jo,i,n)}setFromVector3(t,i=this._order){return this.set(t.x,t.y,t.z,i)}reorder(t){return Bo.setFromEuler(this),this.setFromQuaternion(Bo,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],i=0){return t[i]=this._x,t[i+1]=this._y,t[i+2]=this._z,t[i+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}return l.DefaultOrder="XYZ",l.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],l})();class p{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}isEnabled(e){return 0!=(this.mask&(1<<e|0))}}let r=0;const y=new D,N=new Zt,pe=new ze,Pe=new D,lt=new D,bt=new D,gi=new Zt,tt=new D(1,0,0),Rt=new D(0,1,0),ii=new D(0,0,1),Si={type:"added"},wi={type:"removed"};let st=(()=>{class l extends ln{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:r++}),this.uuid=ei(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=l.DefaultUp.clone();const t=new D,i=new b,n=new Zt,s=new D(1,1,1);i._onChange(function a(){n.setFromEuler(i,!1)}),n._onChange(function o(){i.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:i},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new ze},normalMatrix:{value:new Yt}}),this.matrix=new ze,this.matrixWorld=new ze,this.matrixAutoUpdate=l.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=l.DefaultMatrixWorldAutoUpdate,this.layers=new p,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,i){this.quaternion.setFromAxisAngle(t,i)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,i){return N.setFromAxisAngle(t,i),this.quaternion.multiply(N),this}rotateOnWorldAxis(t,i){return N.setFromAxisAngle(t,i),this.quaternion.premultiply(N),this}rotateX(t){return this.rotateOnAxis(tt,t)}rotateY(t){return this.rotateOnAxis(Rt,t)}rotateZ(t){return this.rotateOnAxis(ii,t)}translateOnAxis(t,i){return y.copy(t).applyQuaternion(this.quaternion),this.position.add(y.multiplyScalar(i)),this}translateX(t){return this.translateOnAxis(tt,t)}translateY(t){return this.translateOnAxis(Rt,t)}translateZ(t){return this.translateOnAxis(ii,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(pe.copy(this.matrixWorld).invert())}lookAt(t,i,n){t.isVector3?Pe.copy(t):Pe.set(t,i,n);const s=this.parent;this.updateWorldMatrix(!0,!1),lt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?pe.lookAt(lt,Pe,this.up):pe.lookAt(Pe,lt,this.up),this.quaternion.setFromRotationMatrix(pe),s&&(pe.extractRotation(s.matrixWorld),N.setFromRotationMatrix(pe),this.quaternion.premultiply(N.invert()))}add(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.add(arguments[i]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Si)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const i=this.children.indexOf(t);return-1!==i&&(t.parent=null,this.children.splice(i,1),t.dispatchEvent(wi)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const i=this.children[t];i.parent=null,i.dispatchEvent(wi)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),pe.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),pe.multiply(t.parent.matrixWorld)),t.applyMatrix4(pe),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,i){if(this[t]===i)return this;for(let n=0,s=this.children.length;n<s;n++){const o=this.children[n].getObjectByProperty(t,i);if(void 0!==o)return o}}getObjectsByProperty(t,i){let n=[];this[t]===i&&n.push(this);for(let s=0,a=this.children.length;s<a;s++){const o=this.children[s].getObjectsByProperty(t,i);o.length>0&&(n=n.concat(o))}return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(lt,t,bt),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(lt,gi,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const i=this.matrixWorld.elements;return t.set(i[8],i[9],i[10]).normalize()}raycast(){}traverse(t){t(this);const i=this.children;for(let n=0,s=i.length;n<s;n++)i[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const i=this.children;for(let n=0,s=i.length;n<s;n++)i[n].traverseVisible(t)}traverseAncestors(t){const i=this.parent;null!==i&&(t(i),i.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const i=this.children;for(let n=0,s=i.length;n<s;n++){const a=i[n];(!0===a.matrixWorldAutoUpdate||!0===t)&&a.updateMatrixWorld(t)}}updateWorldMatrix(t,i){const n=this.parent;if(!0===t&&null!==n&&!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===i){const s=this.children;for(let a=0,o=s.length;a<o;a++){const c=s[a];!0===c.matrixWorldAutoUpdate&&c.updateWorldMatrix(!1,!0)}}}toJSON(t){const i=void 0===t||"string"==typeof t,n={};i&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const s={};function a(c,h){return void 0===c[h.uuid]&&(c[h.uuid]=h.toJSON(t)),h.uuid}if(s.uuid=this.uuid,s.type=this.type,""!==this.name&&(s.name=this.name),!0===this.castShadow&&(s.castShadow=!0),!0===this.receiveShadow&&(s.receiveShadow=!0),!1===this.visible&&(s.visible=!1),!1===this.frustumCulled&&(s.frustumCulled=!1),0!==this.renderOrder&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(s.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=a(t.geometries,this.geometry);const c=this.geometry.parameters;if(void 0!==c&&void 0!==c.shapes){const h=c.shapes;if(Array.isArray(h))for(let u=0,d=h.length;u<d;u++)a(t.shapes,h[u]);else a(t.shapes,h)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(a(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const c=[];for(let h=0,u=this.material.length;h<u;h++)c.push(a(t.materials,this.material[h]));s.material=c}else s.material=a(t.materials,this.material);if(this.children.length>0){s.children=[];for(let c=0;c<this.children.length;c++)s.children.push(this.children[c].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let c=0;c<this.animations.length;c++)s.animations.push(a(t.animations,this.animations[c]))}if(i){const c=o(t.geometries),h=o(t.materials),u=o(t.textures),d=o(t.images),f=o(t.shapes),m=o(t.skeletons),_=o(t.animations),g=o(t.nodes);c.length>0&&(n.geometries=c),h.length>0&&(n.materials=h),u.length>0&&(n.textures=u),d.length>0&&(n.images=d),f.length>0&&(n.shapes=f),m.length>0&&(n.skeletons=m),_.length>0&&(n.animations=_),g.length>0&&(n.nodes=g)}return n.object=s,n;function o(c){const h=[];for(const u in c){const d=c[u];delete d.metadata,h.push(d)}return h}}clone(t){return(new this.constructor).copy(this,t)}copy(t,i=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===i)for(let n=0;n<t.children.length;n++)this.add(t.children[n].clone());return this}}return l.DefaultUp=new D(0,1,0),l.DefaultMatrixAutoUpdate=!0,l.DefaultMatrixWorldAutoUpdate=!0,l})();const qe=new D,Vt=new D,Ln=new D,Pi=new D,ni=new D,ur=new D,kc=new D,Io=new D,Go=new D,Oo=new D;class Ci{constructor(e=new D,t=new D,i=new D){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),qe.subVectors(e,t),n.cross(qe);const s=n.lengthSq();return s>0?n.multiplyScalar(1/Math.sqrt(s)):n.set(0,0,0)}static getBarycoord(e,t,i,n,s){qe.subVectors(n,t),Vt.subVectors(i,t),Ln.subVectors(e,t);const a=qe.dot(qe),o=qe.dot(Vt),c=qe.dot(Ln),h=Vt.dot(Vt),u=Vt.dot(Ln),d=a*h-o*o;if(0===d)return s.set(-2,-1,-1);const f=1/d,m=(h*c-o*u)*f,_=(a*u-o*c)*f;return s.set(1-m-_,_,m)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,Pi),Pi.x>=0&&Pi.y>=0&&Pi.x+Pi.y<=1}static getUV(e,t,i,n,s,a,o,c){return this.getBarycoord(e,t,i,n,Pi),c.set(0,0),c.addScaledVector(s,Pi.x),c.addScaledVector(a,Pi.y),c.addScaledVector(o,Pi.z),c}static isFrontFacing(e,t,i,n){return qe.subVectors(i,t),Vt.subVectors(e,t),qe.cross(Vt).dot(n)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return qe.subVectors(this.c,this.b),Vt.subVectors(this.a,this.b),.5*qe.cross(Vt).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Ci.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Ci.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,n,s){return Ci.getUV(e,this.a,this.b,this.c,t,i,n,s)}containsPoint(e){return Ci.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Ci.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,n=this.b,s=this.c;let a,o;ni.subVectors(n,i),ur.subVectors(s,i),Io.subVectors(e,i);const c=ni.dot(Io),h=ur.dot(Io);if(c<=0&&h<=0)return t.copy(i);Go.subVectors(e,n);const u=ni.dot(Go),d=ur.dot(Go);if(u>=0&&d<=u)return t.copy(n);const f=c*d-u*h;if(f<=0&&c>=0&&u<=0)return a=c/(c-u),t.copy(i).addScaledVector(ni,a);Oo.subVectors(e,s);const m=ni.dot(Oo),_=ur.dot(Oo);if(_>=0&&m<=_)return t.copy(s);const g=m*h-c*_;if(g<=0&&h>=0&&_<=0)return o=h/(h-_),t.copy(i).addScaledVector(ur,o);const v=u*_-m*d;if(v<=0&&d-u>=0&&m-_>=0)return kc.subVectors(s,n),o=(d-u)/(d-u+(m-_)),t.copy(n).addScaledVector(kc,o);const x=1/(v+g+f);return a=g*x,o=f*x,t.copy(i).addScaledVector(ni,a).addScaledVector(ur,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let _f=0;class ji extends ln{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:_f++}),this.uuid=ei(),this.name="",this.type="Material",this.blending=en,this.side=fi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Ka,this.blendDst=Gr,this.blendEquation=Dt,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=xi,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const i=e[t];if(void 0===i){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}const n=this[t];void 0!==n?n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(s){const a=[];for(const o in s){const c=s[o];delete c.metadata,a.push(c)}return a}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(i.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(i.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==en&&(i.blending=this.blending),this.side!==fi&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(i.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=this.flatShading),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),!1===this.fog&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData),t){const s=n(e.textures),a=n(e.images);s.length>0&&(i.textures=s),a.length>0&&(i.images=a)}return i}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(null!==t){const n=t.length;i=new Array(n);for(let s=0;s!==n;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}class vn extends ji{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new be(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=zr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const St=new D,ea=new ie;class wt{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=i,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,s=this.itemSize;n<s;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,i=this.count;t<i;t++)ea.fromBufferAttribute(this,t),ea.applyMatrix3(e),this.setXY(t,ea.x,ea.y);else if(3===this.itemSize)for(let t=0,i=this.count;t<i;t++)St.fromBufferAttribute(this,t),St.applyMatrix3(e),this.setXYZ(t,St.x,St.y,St.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)St.fromBufferAttribute(this,t),St.applyMatrix4(e),this.setXYZ(t,St.x,St.y,St.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)St.fromBufferAttribute(this,t),St.applyNormalMatrix(e),this.setXYZ(t,St.x,St.y,St.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)St.fromBufferAttribute(this,t),St.transformDirection(e),this.setXYZ(t,St.x,St.y,St.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Ai(t,this.array)),t}setX(e,t){return this.normalized&&(t=rt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Ai(t,this.array)),t}setY(e,t){return this.normalized&&(t=rt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Ai(t,this.array)),t}setZ(e,t){return this.normalized&&(t=rt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Ai(t,this.array)),t}setW(e,t){return this.normalized&&(t=rt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=rt(t,this.array),i=rt(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=rt(t,this.array),i=rt(i,this.array),n=rt(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e*=this.itemSize,this.normalized&&(t=rt(t,this.array),i=rt(i,this.array),n=rt(n,this.array),s=rt(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),35044!==this.usage&&(e.usage=this.usage),(0!==this.updateRange.offset||-1!==this.updateRange.count)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Nc extends wt{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class Uc extends wt{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class Me extends wt{constructor(e,t,i){super(new Float32Array(e),t,i)}}let yf=0;const vi=new ze,zo=new st,fr=new D,li=new Pn,os=new Pn,Ft=new D;class Ve extends ln{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:yf++}),this.uuid=ei(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return this.index=Array.isArray(e)?new(Co(e)?Uc:Nc)(e,1):e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(void 0!==i){const s=(new Yt).getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(e),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return vi.makeRotationFromQuaternion(e),this.applyMatrix4(vi),this}rotateX(e){return vi.makeRotationX(e),this.applyMatrix4(vi),this}rotateY(e){return vi.makeRotationY(e),this.applyMatrix4(vi),this}rotateZ(e){return vi.makeRotationZ(e),this.applyMatrix4(vi),this}translate(e,t,i){return vi.makeTranslation(e,t,i),this.applyMatrix4(vi),this}scale(e,t,i){return vi.makeScale(e,t,i),this.applyMatrix4(vi),this}lookAt(e){return zo.lookAt(e),zo.updateMatrix(),this.applyMatrix4(zo.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(fr).negate(),this.translate(fr.x,fr.y,fr.z),this}setFromPoints(e){const t=[];for(let i=0,n=e.length;i<n;i++){const s=e[i];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Me(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Pn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new D(-1/0,-1/0,-1/0),new D(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,n=t.length;i<n;i++)li.setFromBufferAttribute(t[i]),this.morphTargetsRelative?(Ft.addVectors(this.boundingBox.min,li.min),this.boundingBox.expandByPoint(Ft),Ft.addVectors(this.boundingBox.max,li.max),this.boundingBox.expandByPoint(Ft)):(this.boundingBox.expandByPoint(li.min),this.boundingBox.expandByPoint(li.max))}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new mi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new D,1/0);if(e){const i=this.boundingSphere.center;if(li.setFromBufferAttribute(e),t)for(let s=0,a=t.length;s<a;s++)os.setFromBufferAttribute(t[s]),this.morphTargetsRelative?(Ft.addVectors(li.min,os.min),li.expandByPoint(Ft),Ft.addVectors(li.max,os.max),li.expandByPoint(Ft)):(li.expandByPoint(os.min),li.expandByPoint(os.max));li.getCenter(i);let n=0;for(let s=0,a=e.count;s<a;s++)Ft.fromBufferAttribute(e,s),n=Math.max(n,i.distanceToSquared(Ft));if(t)for(let s=0,a=t.length;s<a;s++){const o=t[s],c=this.morphTargetsRelative;for(let h=0,u=o.count;h<u;h++)Ft.fromBufferAttribute(o,h),c&&(fr.fromBufferAttribute(e,h),Ft.add(fr)),n=Math.max(n,i.distanceToSquared(Ft))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const i=e.array,n=t.position.array,s=t.normal.array,a=t.uv.array,o=n.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new wt(new Float32Array(4*o),4));const c=this.getAttribute("tangent").array,h=[],u=[];for(let B=0;B<o;B++)h[B]=new D,u[B]=new D;const d=new D,f=new D,m=new D,_=new ie,g=new ie,v=new ie,x=new D,R=new D;function T(B,U,ee){d.fromArray(n,3*B),f.fromArray(n,3*U),m.fromArray(n,3*ee),_.fromArray(a,2*B),g.fromArray(a,2*U),v.fromArray(a,2*ee),f.sub(d),m.sub(d),g.sub(_),v.sub(_);const z=1/(g.x*v.y-v.x*g.y);isFinite(z)&&(x.copy(f).multiplyScalar(v.y).addScaledVector(m,-g.y).multiplyScalar(z),R.copy(m).multiplyScalar(g.x).addScaledVector(f,-v.x).multiplyScalar(z),h[B].add(x),h[U].add(x),h[ee].add(x),u[B].add(R),u[U].add(R),u[ee].add(R))}let M=this.groups;0===M.length&&(M=[{start:0,count:i.length}]);for(let B=0,U=M.length;B<U;++B){const ee=M[B],z=ee.start;for(let X=z,ne=z+ee.count;X<ne;X+=3)T(i[X+0],i[X+1],i[X+2])}const P=new D,L=new D,j=new D,S=new D;function A(B){j.fromArray(s,3*B),S.copy(j);const U=h[B];P.copy(U),P.sub(j.multiplyScalar(j.dot(U))).normalize(),L.crossVectors(S,U);const z=L.dot(u[B])<0?-1:1;c[4*B]=P.x,c[4*B+1]=P.y,c[4*B+2]=P.z,c[4*B+3]=z}for(let B=0,U=M.length;B<U;++B){const ee=M[B],z=ee.start;for(let X=z,ne=z+ee.count;X<ne;X+=3)A(i[X+0]),A(i[X+1]),A(i[X+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let i=this.getAttribute("normal");if(void 0===i)i=new wt(new Float32Array(3*t.count),3),this.setAttribute("normal",i);else for(let f=0,m=i.count;f<m;f++)i.setXYZ(f,0,0,0);const n=new D,s=new D,a=new D,o=new D,c=new D,h=new D,u=new D,d=new D;if(e)for(let f=0,m=e.count;f<m;f+=3){const _=e.getX(f+0),g=e.getX(f+1),v=e.getX(f+2);n.fromBufferAttribute(t,_),s.fromBufferAttribute(t,g),a.fromBufferAttribute(t,v),u.subVectors(a,s),d.subVectors(n,s),u.cross(d),o.fromBufferAttribute(i,_),c.fromBufferAttribute(i,g),h.fromBufferAttribute(i,v),o.add(u),c.add(u),h.add(u),i.setXYZ(_,o.x,o.y,o.z),i.setXYZ(g,c.x,c.y,c.z),i.setXYZ(v,h.x,h.y,h.z)}else for(let f=0,m=t.count;f<m;f+=3)n.fromBufferAttribute(t,f+0),s.fromBufferAttribute(t,f+1),a.fromBufferAttribute(t,f+2),u.subVectors(a,s),d.subVectors(n,s),u.cross(d),i.setXYZ(f+0,u.x,u.y,u.z),i.setXYZ(f+1,u.x,u.y,u.z),i.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)Ft.fromBufferAttribute(e,t),Ft.normalize(),e.setXYZ(t,Ft.x,Ft.y,Ft.z)}toNonIndexed(){function e(o,c){const h=o.array,u=o.itemSize,d=o.normalized,f=new h.constructor(c.length*u);let m=0,_=0;for(let g=0,v=c.length;g<v;g++){m=o.isInterleavedBufferAttribute?c[g]*o.data.stride+o.offset:c[g]*u;for(let x=0;x<u;x++)f[_++]=h[m++]}return new wt(f,u,d)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Ve,i=this.index.array,n=this.attributes;for(const o in n){const h=e(n[o],i);t.setAttribute(o,h)}const s=this.morphAttributes;for(const o in s){const c=[],h=s[o];for(let u=0,d=h.length;u<d;u++){const m=e(h[u],i);c.push(m)}t.morphAttributes[o]=c}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,c=a.length;o<c;o++){const h=a[o];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const c=this.parameters;for(const h in c)void 0!==c[h]&&(e[h]=c[h]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const c in i)e.data.attributes[c]=i[c].toJSON(e.data);const n={};let s=!1;for(const c in this.morphAttributes){const h=this.morphAttributes[c],u=[];for(let d=0,f=h.length;d<f;d++)u.push(h[d].toJSON(e.data));u.length>0&&(n[c]=u,s=!0)}s&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return null!==o&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;null!==i&&this.setIndex(i.clone(t));const n=e.attributes;for(const h in n)this.setAttribute(h,n[h].clone(t));const s=e.morphAttributes;for(const h in s){const u=[],d=s[h];for(let f=0,m=d.length;f<m;f++)u.push(d[f].clone(t));this.morphAttributes[h]=u}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let h=0,u=a.length;h<u;h++){const d=a[h];this.addGroup(d.start,d.count,d.materialIndex)}const o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());const c=e.boundingSphere;return null!==c&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const Vc=new ze,dr=new mn,ko=new mi,ls=new D,cs=new D,hs=new D,No=new D,ta=new D,ia=new ie,na=new ie,ra=new ie,Uo=new D,sa=new D;class Ht extends st{constructor(e=new Ve,t=new vn){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=n.length;s<a;s++){const o=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}getVertexPosition(e,t){const i=this.geometry,s=i.morphAttributes.position,a=i.morphTargetsRelative;t.fromBufferAttribute(i.attributes.position,e);const o=this.morphTargetInfluences;if(s&&o){ta.set(0,0,0);for(let c=0,h=s.length;c<h;c++){const u=o[c];0!==u&&(No.fromBufferAttribute(s[c],e),ta.addScaledVector(a?No:No.sub(t),u))}t.add(ta)}return this.isSkinnedMesh&&this.boneTransform(e,t),t}raycast(e,t){const i=this.geometry,n=this.material,s=this.matrixWorld;if(void 0===n||(null===i.boundingSphere&&i.computeBoundingSphere(),ko.copy(i.boundingSphere),ko.applyMatrix4(s),!1===e.ray.intersectsSphere(ko))||(Vc.copy(s).invert(),dr.copy(e.ray).applyMatrix4(Vc),null!==i.boundingBox&&!1===dr.intersectsBox(i.boundingBox)))return;let a;const o=i.index,c=i.attributes.position,h=i.attributes.uv,u=i.attributes.uv2,d=i.groups,f=i.drawRange;if(null!==o)if(Array.isArray(n))for(let m=0,_=d.length;m<_;m++){const g=d[m],v=n[g.materialIndex];for(let T=Math.max(g.start,f.start),M=Math.min(o.count,Math.min(g.start+g.count,f.start+f.count));T<M;T+=3){const P=o.getX(T),L=o.getX(T+1),j=o.getX(T+2);a=aa(this,v,e,dr,h,u,P,L,j),a&&(a.faceIndex=Math.floor(T/3),a.face.materialIndex=g.materialIndex,t.push(a))}}else for(let g=Math.max(0,f.start),v=Math.min(o.count,f.start+f.count);g<v;g+=3){const x=o.getX(g),R=o.getX(g+1),T=o.getX(g+2);a=aa(this,n,e,dr,h,u,x,R,T),a&&(a.faceIndex=Math.floor(g/3),t.push(a))}else if(void 0!==c)if(Array.isArray(n))for(let m=0,_=d.length;m<_;m++){const g=d[m],v=n[g.materialIndex];for(let T=Math.max(g.start,f.start),M=Math.min(c.count,Math.min(g.start+g.count,f.start+f.count));T<M;T+=3)a=aa(this,v,e,dr,h,u,T,T+1,T+2),a&&(a.faceIndex=Math.floor(T/3),a.face.materialIndex=g.materialIndex,t.push(a))}else for(let g=Math.max(0,f.start),v=Math.min(c.count,f.start+f.count);g<v;g+=3)a=aa(this,n,e,dr,h,u,g,g+1,g+2),a&&(a.faceIndex=Math.floor(g/3),t.push(a))}}function aa(l,e,t,i,n,s,a,o,c){l.getVertexPosition(a,ls),l.getVertexPosition(o,cs),l.getVertexPosition(c,hs);const h=function bf(l,e,t,i,n,s,a,o){let c;if(c=e.side===qt?i.intersectTriangle(a,s,n,!0,o):i.intersectTriangle(n,s,a,e.side===fi,o),null===c)return null;sa.copy(o),sa.applyMatrix4(l.matrixWorld);const h=t.ray.origin.distanceTo(sa);return h<t.near||h>t.far?null:{distance:h,point:sa.clone(),object:l}}(l,e,t,i,ls,cs,hs,Uo);if(h){n&&(ia.fromBufferAttribute(n,a),na.fromBufferAttribute(n,o),ra.fromBufferAttribute(n,c),h.uv=Ci.getUV(Uo,ls,cs,hs,ia,na,ra,new ie)),s&&(ia.fromBufferAttribute(s,a),na.fromBufferAttribute(s,o),ra.fromBufferAttribute(s,c),h.uv2=Ci.getUV(Uo,ls,cs,hs,ia,na,ra,new ie));const u={a,b:o,c,normal:new D,materialIndex:0};Ci.getNormal(ls,cs,hs,u.normal),h.face=u}return h}class An extends Ve{constructor(e=1,t=1,i=1,n=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:s,depthSegments:a};const o=this;n=Math.floor(n),s=Math.floor(s),a=Math.floor(a);const c=[],h=[],u=[],d=[];let f=0,m=0;function _(g,v,x,R,T,M,P,L,j,S,A){const B=M/j,U=P/S,ee=M/2,z=P/2,G=L/2,X=j+1,ne=S+1;let ae=0,K=0;const le=new D;for(let re=0;re<ne;re++){const H=re*U-z;for(let W=0;W<X;W++)le[g]=(W*B-ee)*R,le[v]=H*T,le[x]=G,h.push(le.x,le.y,le.z),le[g]=0,le[v]=0,le[x]=L>0?1:-1,u.push(le.x,le.y,le.z),d.push(W/j),d.push(1-re/S),ae+=1}for(let re=0;re<S;re++)for(let H=0;H<j;H++){const ue=f+H+X*(re+1),ce=f+(H+1)+X*(re+1),ge=f+(H+1)+X*re;c.push(f+H+X*re,ue,ge),c.push(ue,ce,ge),K+=6}o.addGroup(m,K,A),m+=K,f+=ae}_("z","y","x",-1,-1,i,t,e,a,s,0),_("z","y","x",1,-1,i,t,-e,a,s,1),_("x","z","y",1,1,e,i,t,n,a,2),_("x","z","y",1,-1,e,i,-t,n,a,3),_("x","y","z",1,-1,e,t,i,n,s,4),_("x","y","z",-1,-1,e,t,-i,n,s,5),this.setIndex(c),this.setAttribute("position",new Me(h,3)),this.setAttribute("normal",new Me(u,3)),this.setAttribute("uv",new Me(d,2))}static fromJSON(e){return new An(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function pr(l){const e={};for(const t in l){e[t]={};for(const i in l[t]){const n=l[t][i];e[t][i]=n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?n.clone():Array.isArray(n)?n.slice():n}}return e}function $t(l){const e={};for(let t=0;t<l.length;t++){const i=pr(l[t]);for(const n in i)e[n]=i[n]}return e}function Hc(l){return null===l.getRenderTarget()&&l.outputEncoding===ot?Mi:ir}const Wc={clone:pr,merge:$t};class Bi extends ji{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=pr(e.uniforms),this.uniformsGroups=function Tf(l){const e=[];for(let t=0;t<l.length;t++)e.push(l[t].clone());return e}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const a=this.uniforms[n].value;t.uniforms[n]=a&&a.isTexture?{type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?{type:"c",value:a.getHex()}:a&&a.isVector2?{type:"v2",value:a.toArray()}:a&&a.isVector3?{type:"v3",value:a.toArray()}:a&&a.isVector4?{type:"v4",value:a.toArray()}:a&&a.isMatrix3?{type:"m3",value:a.toArray()}:a&&a.isMatrix4?{type:"m4",value:a.toArray()}:{value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const i={};for(const n in this.extensions)!0===this.extensions[n]&&(i[n]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class oa extends st{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ze,this.projectionMatrix=new ze,this.projectionMatrixInverse=new ze}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class zt extends oa{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*nr*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*cn*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*nr*Math.atan(Math.tan(.5*cn*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,i,n,s,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*cn*this.fov)/this.zoom,i=2*t,n=this.aspect*i,s=-.5*n;const a=this.view;if(null!==this.view&&this.view.enabled){const c=a.fullWidth,h=a.fullHeight;s+=a.offsetX*n/c,t-=a.offsetY*i/h,n*=a.width/c,i*=a.height/h}const o=this.filmOffset;0!==o&&(s+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+n,t,t-i,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}class Rf extends st{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i;const n=new zt(-90,1,e,t);n.layers=this.layers,n.up.set(0,1,0),n.lookAt(1,0,0),this.add(n);const s=new zt(-90,1,e,t);s.layers=this.layers,s.up.set(0,1,0),s.lookAt(-1,0,0),this.add(s);const a=new zt(-90,1,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(0,1,0),this.add(a);const o=new zt(-90,1,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(0,-1,0),this.add(o);const c=new zt(-90,1,e,t);c.layers=this.layers,c.up.set(0,1,0),c.lookAt(0,0,1),this.add(c);const h=new zt(-90,1,e,t);h.layers=this.layers,h.up.set(0,1,0),h.lookAt(0,0,-1),this.add(h)}update(e,t){null===this.parent&&this.updateMatrixWorld();const i=this.renderTarget,[n,s,a,o,c,h]=this.children,u=e.getRenderTarget(),d=e.toneMapping,f=e.xr.enabled;e.toneMapping=di,e.xr.enabled=!1;const m=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(t,n),e.setRenderTarget(i,1),e.render(t,s),e.setRenderTarget(i,2),e.render(t,a),e.setRenderTarget(i,3),e.render(t,o),e.setRenderTarget(i,4),e.render(t,c),i.texture.generateMipmaps=m,e.setRenderTarget(i,5),e.render(t,h),e.setRenderTarget(u),e.toneMapping=d,e.xr.enabled=f,i.texture.needsPMREMUpdate=!0}}class la extends Ri{constructor(e,t,i,n,s,a,o,c,h,u){super(e=void 0!==e?e:[],t=void 0!==t?t:ki,i,n,s,a,o,c,h,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Sf extends Hi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1};this.texture=new la([i,i,i,i,i,i],t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:yt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i_uniforms={tEquirect:{value:null}},i_vertexShader="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",i_fragmentShader="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",n=new An(5,5,5),s=new Bi({name:"CubemapFromEquirect",uniforms:pr(i_uniforms),vertexShader:i_vertexShader,fragmentShader:i_fragmentShader,side:qt,blending:Ti});s.uniforms.tEquirect.value=t;const a=new Ht(n,s),o=t.minFilter;return t.minFilter===Ni&&(t.minFilter=yt),new Rf(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,i,n){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,i,n);e.setRenderTarget(s)}}const Vo=new D,wf=new D,Pf=new Yt;class En{constructor(e=new D(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const n=Vo.subVectors(i,t).cross(wf.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const i=e.delta(Vo),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/n;return s<0||s>1?null:t.copy(i).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||Pf.getNormalMatrix(e),n=this.coplanarPoint(Vo).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const vr=new mi,ca=new D;class Ho{constructor(e=new En,t=new En,i=new En,n=new En,s=new En,a=new En){this.planes=[e,t,i,n,s,a]}set(e,t,i,n,s,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(i),o[3].copy(n),o[4].copy(s),o[5].copy(a),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const t=this.planes,i=e.elements,n=i[0],s=i[1],a=i[2],o=i[3],c=i[4],h=i[5],u=i[6],d=i[7],f=i[8],m=i[9],_=i[10],g=i[11],v=i[12],x=i[13],R=i[14],T=i[15];return t[0].setComponents(o-n,d-c,g-f,T-v).normalize(),t[1].setComponents(o+n,d+c,g+f,T+v).normalize(),t[2].setComponents(o+s,d+h,g+m,T+x).normalize(),t[3].setComponents(o-s,d-h,g-m,T-x).normalize(),t[4].setComponents(o-a,d-u,g-_,T-R).normalize(),t[5].setComponents(o+a,d+u,g+_,T+R).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),vr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(vr)}intersectsSprite(e){return vr.center.set(0,0,0),vr.radius=.7071067811865476,vr.applyMatrix4(e.matrixWorld),this.intersectsSphere(vr)}intersectsSphere(e){const t=this.planes,i=e.center,n=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<n)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const n=t[i];if(ca.x=n.normal.x>0?e.max.x:e.min.x,ca.y=n.normal.y>0?e.max.y:e.min.y,ca.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(ca)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Xc(){let l=null,e=!1,t=null,i=null;function n(s,a){t(s,a),i=l.requestAnimationFrame(n)}return{start:function(){!0!==e&&null!==t&&(i=l.requestAnimationFrame(n),e=!0)},stop:function(){l.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){l=s}}}function Cf(l,e){const t=e.isWebGL2,i=new WeakMap;return{get:function a(h){return h.isInterleavedBufferAttribute&&(h=h.data),i.get(h)},remove:function o(h){h.isInterleavedBufferAttribute&&(h=h.data);const u=i.get(h);u&&(l.deleteBuffer(u.buffer),i.delete(h))},update:function c(h,u){if(h.isGLBufferAttribute){const f=i.get(h);return void((!f||f.version<h.version)&&i.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version}))}h.isInterleavedBufferAttribute&&(h=h.data);const d=i.get(h);void 0===d?i.set(h,function n(h,u){const d=h.array,f=h.usage,m=l.createBuffer();let _;if(l.bindBuffer(u,m),l.bufferData(u,d,f),h.onUploadCallback(),d instanceof Float32Array)_=5126;else if(d instanceof Uint16Array)if(h.isFloat16BufferAttribute){if(!t)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");_=5131}else _=5123;else if(d instanceof Int16Array)_=5122;else if(d instanceof Uint32Array)_=5125;else if(d instanceof Int32Array)_=5124;else if(d instanceof Int8Array)_=5120;else if(d instanceof Uint8Array)_=5121;else{if(!(d instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+d);_=5121}return{buffer:m,type:_,bytesPerElement:d.BYTES_PER_ELEMENT,version:h.version}}(h,u)):d.version<h.version&&(function s(h,u,d){const f=u.array,m=u.updateRange;l.bindBuffer(d,h),-1===m.count?l.bufferSubData(d,0,f):(t?l.bufferSubData(d,m.offset*f.BYTES_PER_ELEMENT,f,m.offset,m.count):l.bufferSubData(d,m.offset*f.BYTES_PER_ELEMENT,f.subarray(m.offset,m.offset+m.count)),m.count=-1),u.onUploadCallback()}(d.buffer,h,u),d.version=h.version)}}}class us extends Ve{constructor(e=1,t=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};const s=e/2,a=t/2,o=Math.floor(i),c=Math.floor(n),h=o+1,u=c+1,d=e/o,f=t/c,m=[],_=[],g=[],v=[];for(let x=0;x<u;x++){const R=x*f-a;for(let T=0;T<h;T++)_.push(T*d-s,-R,0),g.push(0,0,1),v.push(T/o),v.push(1-x/c)}for(let x=0;x<c;x++)for(let R=0;R<o;R++){const M=R+h*(x+1),P=R+1+h*(x+1),L=R+1+h*x;m.push(R+h*x,M,L),m.push(M,P,L)}this.setIndex(m),this.setAttribute("position",new Me(_,3)),this.setAttribute("normal",new Me(g,3)),this.setAttribute("uv",new Me(v,2))}static fromJSON(e){return new us(e.width,e.height,e.widthSegments,e.heightSegments)}}const Ue={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\n\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n\treturn packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},de={common:{diffuse:{value:new be(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Yt},uv2Transform:{value:new Yt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ie(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new be(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new be(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Yt}},sprite:{diffuse:{value:new be(16777215)},opacity:{value:1},center:{value:new ie(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Yt}}},Ii={basic:{uniforms:$t([de.common,de.specularmap,de.envmap,de.aomap,de.lightmap,de.fog]),vertexShader:Ue.meshbasic_vert,fragmentShader:Ue.meshbasic_frag},lambert:{uniforms:$t([de.common,de.specularmap,de.envmap,de.aomap,de.lightmap,de.emissivemap,de.bumpmap,de.normalmap,de.displacementmap,de.fog,de.lights,{emissive:{value:new be(0)}}]),vertexShader:Ue.meshlambert_vert,fragmentShader:Ue.meshlambert_frag},phong:{uniforms:$t([de.common,de.specularmap,de.envmap,de.aomap,de.lightmap,de.emissivemap,de.bumpmap,de.normalmap,de.displacementmap,de.fog,de.lights,{emissive:{value:new be(0)},specular:{value:new be(1118481)},shininess:{value:30}}]),vertexShader:Ue.meshphong_vert,fragmentShader:Ue.meshphong_frag},standard:{uniforms:$t([de.common,de.envmap,de.aomap,de.lightmap,de.emissivemap,de.bumpmap,de.normalmap,de.displacementmap,de.roughnessmap,de.metalnessmap,de.fog,de.lights,{emissive:{value:new be(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ue.meshphysical_vert,fragmentShader:Ue.meshphysical_frag},toon:{uniforms:$t([de.common,de.aomap,de.lightmap,de.emissivemap,de.bumpmap,de.normalmap,de.displacementmap,de.gradientmap,de.fog,de.lights,{emissive:{value:new be(0)}}]),vertexShader:Ue.meshtoon_vert,fragmentShader:Ue.meshtoon_frag},matcap:{uniforms:$t([de.common,de.bumpmap,de.normalmap,de.displacementmap,de.fog,{matcap:{value:null}}]),vertexShader:Ue.meshmatcap_vert,fragmentShader:Ue.meshmatcap_frag},points:{uniforms:$t([de.points,de.fog]),vertexShader:Ue.points_vert,fragmentShader:Ue.points_frag},dashed:{uniforms:$t([de.common,de.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ue.linedashed_vert,fragmentShader:Ue.linedashed_frag},depth:{uniforms:$t([de.common,de.displacementmap]),vertexShader:Ue.depth_vert,fragmentShader:Ue.depth_frag},normal:{uniforms:$t([de.common,de.bumpmap,de.normalmap,de.displacementmap,{opacity:{value:1}}]),vertexShader:Ue.meshnormal_vert,fragmentShader:Ue.meshnormal_frag},sprite:{uniforms:$t([de.sprite,de.fog]),vertexShader:Ue.sprite_vert,fragmentShader:Ue.sprite_frag},background:{uniforms:{uvTransform:{value:new Yt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Ue.background_vert,fragmentShader:Ue.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Ue.backgroundCube_vert,fragmentShader:Ue.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ue.cube_vert,fragmentShader:Ue.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ue.equirect_vert,fragmentShader:Ue.equirect_frag},distanceRGBA:{uniforms:$t([de.common,de.displacementmap,{referencePosition:{value:new D},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ue.distanceRGBA_vert,fragmentShader:Ue.distanceRGBA_frag},shadow:{uniforms:$t([de.lights,de.fog,{color:{value:new be(0)},opacity:{value:1}}]),vertexShader:Ue.shadow_vert,fragmentShader:Ue.shadow_frag}};Ii.physical={uniforms:$t([Ii.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ie(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new be(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ie},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new be(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new be(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Ue.meshphysical_vert,fragmentShader:Ue.meshphysical_frag};const ha={r:0,b:0,g:0};function Pp(l,e,t,i,n,s,a){const o=new be(0);let h,u,c=!0===s?0:1,d=null,f=0,m=null;function g(v,x){v.getRGB(ha,Hc(l)),i.buffers.color.setClear(ha.r,ha.g,ha.b,x,a)}return{getClearColor:function(){return o},setClearColor:function(v,x=1){o.set(v),c=x,g(o,c)},getClearAlpha:function(){return c},setClearAlpha:function(v){c=v,g(o,c)},render:function _(v,x){let R=!1,T=!0===x.isScene?x.background:null;T&&T.isTexture&&(T=(x.backgroundBlurriness>0?t:e).get(T));const M=l.xr,P=M.getSession&&M.getSession();P&&"additive"===P.environmentBlendMode&&(T=null),null===T?g(o,c):T&&T.isColor&&(g(T,1),R=!0),(l.autoClear||R)&&l.clear(l.autoClearColor,l.autoClearDepth,l.autoClearStencil),T&&(T.isCubeTexture||T.mapping===yn)?(void 0===u&&(u=new Ht(new An(1,1,1),new Bi({name:"BackgroundCubeMaterial",uniforms:pr(Ii.backgroundCube.uniforms),vertexShader:Ii.backgroundCube.vertexShader,fragmentShader:Ii.backgroundCube.fragmentShader,side:qt,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(L,j,S){this.matrixWorld.copyPosition(S.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(u)),u.material.uniforms.envMap.value=T,u.material.uniforms.flipEnvMap.value=T.isCubeTexture&&!1===T.isRenderTargetTexture?-1:1,u.material.uniforms.backgroundBlurriness.value=x.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=x.backgroundIntensity,u.material.toneMapped=T.encoding!==ot,(d!==T||f!==T.version||m!==l.toneMapping)&&(u.material.needsUpdate=!0,d=T,f=T.version,m=l.toneMapping),u.layers.enableAll(),v.unshift(u,u.geometry,u.material,0,0,null)):T&&T.isTexture&&(void 0===h&&(h=new Ht(new us(2,2),new Bi({name:"BackgroundMaterial",uniforms:pr(Ii.background.uniforms),vertexShader:Ii.background.vertexShader,fragmentShader:Ii.background.fragmentShader,side:fi,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(h)),h.material.uniforms.t2D.value=T,h.material.uniforms.backgroundIntensity.value=x.backgroundIntensity,h.material.toneMapped=T.encoding!==ot,!0===T.matrixAutoUpdate&&T.updateMatrix(),h.material.uniforms.uvTransform.value.copy(T.matrix),(d!==T||f!==T.version||m!==l.toneMapping)&&(h.material.needsUpdate=!0,d=T,f=T.version,m=l.toneMapping),h.layers.enableAll(),v.unshift(h,h.geometry,h.material,0,0,null))}}}function Cp(l,e,t,i){const n=l.getParameter(34921),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),a=i.isWebGL2||null!==s,o={},c=v(null);let h=c,u=!1;function m(G){return i.isWebGL2?l.bindVertexArray(G):s.bindVertexArrayOES(G)}function _(G){return i.isWebGL2?l.deleteVertexArray(G):s.deleteVertexArrayOES(G)}function v(G){const X=[],ne=[],ae=[];for(let K=0;K<n;K++)X[K]=0,ne[K]=0,ae[K]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:X,enabledAttributes:ne,attributeDivisors:ae,object:G,attributes:{},index:null}}function T(){const G=h.newAttributes;for(let X=0,ne=G.length;X<ne;X++)G[X]=0}function M(G){P(G,0)}function P(G,X){const ae=h.enabledAttributes,K=h.attributeDivisors;h.newAttributes[G]=1,0===ae[G]&&(l.enableVertexAttribArray(G),ae[G]=1),K[G]!==X&&((i.isWebGL2?l:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](G,X),K[G]=X)}function L(){const G=h.newAttributes,X=h.enabledAttributes;for(let ne=0,ae=X.length;ne<ae;ne++)X[ne]!==G[ne]&&(l.disableVertexAttribArray(ne),X[ne]=0)}function j(G,X,ne,ae,K,le){!0!==i.isWebGL2||5124!==ne&&5125!==ne?l.vertexAttribPointer(G,X,ne,ae,K,le):l.vertexAttribIPointer(G,X,ne,K,le)}function ee(){z(),u=!0,h!==c&&(h=c,m(h.object))}function z(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:function d(G,X,ne,ae,K){let le=!1;if(a){const re=function g(G,X,ne){const ae=!0===ne.wireframe;let K=o[G.id];void 0===K&&(K={},o[G.id]=K);let le=K[X.id];void 0===le&&(le={},K[X.id]=le);let re=le[ae];return void 0===re&&(re=v(function f(){return i.isWebGL2?l.createVertexArray():s.createVertexArrayOES()}()),le[ae]=re),re}(ae,ne,X);h!==re&&(h=re,m(h.object)),le=function x(G,X,ne,ae){const K=h.attributes,le=X.attributes;let re=0;const H=ne.getAttributes();for(const W in H)if(H[W].location>=0){const ce=K[W];let ge=le[W];if(void 0===ge&&("instanceMatrix"===W&&G.instanceMatrix&&(ge=G.instanceMatrix),"instanceColor"===W&&G.instanceColor&&(ge=G.instanceColor)),void 0===ce||ce.attribute!==ge||ge&&ce.data!==ge.data)return!0;re++}return h.attributesNum!==re||h.index!==ae}(G,ae,ne,K),le&&function R(G,X,ne,ae){const K={},le=X.attributes;let re=0;const H=ne.getAttributes();for(const W in H)if(H[W].location>=0){let ce=le[W];void 0===ce&&("instanceMatrix"===W&&G.instanceMatrix&&(ce=G.instanceMatrix),"instanceColor"===W&&G.instanceColor&&(ce=G.instanceColor));const ge={};ge.attribute=ce,ce&&ce.data&&(ge.data=ce.data),K[W]=ge,re++}h.attributes=K,h.attributesNum=re,h.index=ae}(G,ae,ne,K)}else{const re=!0===X.wireframe;(h.geometry!==ae.id||h.program!==ne.id||h.wireframe!==re)&&(h.geometry=ae.id,h.program=ne.id,h.wireframe=re,le=!0)}null!==K&&t.update(K,34963),(le||u)&&(u=!1,function S(G,X,ne,ae){if(!1===i.isWebGL2&&(G.isInstancedMesh||ae.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;T();const K=ae.attributes,le=ne.getAttributes(),re=X.defaultAttributeValues;for(const H in le){const W=le[H];if(W.location>=0){let ue=K[H];if(void 0===ue&&("instanceMatrix"===H&&G.instanceMatrix&&(ue=G.instanceMatrix),"instanceColor"===H&&G.instanceColor&&(ue=G.instanceColor)),void 0!==ue){const ce=ue.normalized,ge=ue.itemSize,Z=t.get(ue);if(void 0===Z)continue;const Ge=Z.buffer,xe=Z.type,Ie=Z.bytesPerElement;if(ue.isInterleavedBufferAttribute){const ve=ue.data,He=ve.stride,te=ue.offset;if(ve.isInstancedInterleavedBuffer){for(let Q=0;Q<W.locationSize;Q++)P(W.location+Q,ve.meshPerAttribute);!0!==G.isInstancedMesh&&void 0===ae._maxInstanceCount&&(ae._maxInstanceCount=ve.meshPerAttribute*ve.count)}else for(let Q=0;Q<W.locationSize;Q++)M(W.location+Q);l.bindBuffer(34962,Ge);for(let Q=0;Q<W.locationSize;Q++)j(W.location+Q,ge/W.locationSize,xe,ce,He*Ie,(te+ge/W.locationSize*Q)*Ie)}else{if(ue.isInstancedBufferAttribute){for(let ve=0;ve<W.locationSize;ve++)P(W.location+ve,ue.meshPerAttribute);!0!==G.isInstancedMesh&&void 0===ae._maxInstanceCount&&(ae._maxInstanceCount=ue.meshPerAttribute*ue.count)}else for(let ve=0;ve<W.locationSize;ve++)M(W.location+ve);l.bindBuffer(34962,Ge);for(let ve=0;ve<W.locationSize;ve++)j(W.location+ve,ge/W.locationSize,xe,ce,ge*Ie,ge/W.locationSize*ve*Ie)}}else if(void 0!==re){const ce=re[H];if(void 0!==ce)switch(ce.length){case 2:l.vertexAttrib2fv(W.location,ce);break;case 3:l.vertexAttrib3fv(W.location,ce);break;case 4:l.vertexAttrib4fv(W.location,ce);break;default:l.vertexAttrib1fv(W.location,ce)}}}}L()}(G,X,ne,ae),null!==K&&l.bindBuffer(34963,t.get(K).buffer))},reset:ee,resetDefaultState:z,dispose:function A(){ee();for(const G in o){const X=o[G];for(const ne in X){const ae=X[ne];for(const K in ae)_(ae[K].object),delete ae[K];delete X[ne]}delete o[G]}},releaseStatesOfGeometry:function B(G){if(void 0===o[G.id])return;const X=o[G.id];for(const ne in X){const ae=X[ne];for(const K in ae)_(ae[K].object),delete ae[K];delete X[ne]}delete o[G.id]},releaseStatesOfProgram:function U(G){for(const X in o){const ne=o[X];if(void 0===ne[G.id])continue;const ae=ne[G.id];for(const K in ae)_(ae[K].object),delete ae[K];delete ne[G.id]}},initAttributes:T,enableAttribute:M,disableUnusedAttributes:L}}function Dp(l,e,t,i){const n=i.isWebGL2;let s;this.setMode=function a(h){s=h},this.render=function o(h,u){l.drawArrays(s,h,u),t.update(u,s,1)},this.renderInstances=function c(h,u,d){if(0===d)return;let f,m;if(n)f=l,m="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),m="drawArraysInstancedANGLE",null===f)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");f[m](s,h,u,d),t.update(u,s,d)}}function Lp(l,e,t){let i;function s(j){if("highp"===j){if(l.getShaderPrecisionFormat(35633,36338).precision>0&&l.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";j="mediump"}return"mediump"===j&&l.getShaderPrecisionFormat(35633,36337).precision>0&&l.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&l instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&l instanceof WebGL2ComputeRenderingContext;let o=void 0!==t.precision?t.precision:"highp";const c=s(o);c!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",c,"instead."),o=c);const h=a||e.has("WEBGL_draw_buffers"),u=!0===t.logarithmicDepthBuffer,d=l.getParameter(34930),f=l.getParameter(35660),m=l.getParameter(3379),_=l.getParameter(34076),g=l.getParameter(34921),v=l.getParameter(36347),x=l.getParameter(36348),R=l.getParameter(36349),T=f>0,M=a||e.has("OES_texture_float");return{isWebGL2:a,drawBuffers:h,getMaxAnisotropy:function n(){if(void 0!==i)return i;if(!0===e.has("EXT_texture_filter_anisotropic")){const j=e.get("EXT_texture_filter_anisotropic");i=l.getParameter(j.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:s,precision:o,logarithmicDepthBuffer:u,maxTextures:d,maxVertexTextures:f,maxTextureSize:m,maxCubemapSize:_,maxAttributes:g,maxVertexUniforms:v,maxVaryings:x,maxFragmentUniforms:R,vertexTextures:T,floatFragmentTextures:M,floatVertexTextures:T&&M,maxSamples:a?l.getParameter(36183):0}}function Ap(l){const e=this;let t=null,i=0,n=!1,s=!1;const a=new En,o=new Yt,c={value:null,needsUpdate:!1};function h(){c.value!==t&&(c.value=t,c.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function u(d,f,m,_){const g=null!==d?d.length:0;let v=null;if(0!==g){if(v=c.value,!0!==_||null===v){const x=m+4*g,R=f.matrixWorldInverse;o.getNormalMatrix(R),(null===v||v.length<x)&&(v=new Float32Array(x));for(let T=0,M=m;T!==g;++T,M+=4)a.copy(d[T]).applyMatrix4(R,o),a.normal.toArray(v,M),v[M+3]=a.constant}c.value=v,c.needsUpdate=!0}return e.numPlanes=g,e.numIntersection=0,v}this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(d,f,m){const _=0!==d.length||f||0!==i||n;return n=f,t=u(d,m,0),i=d.length,_},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,h()},this.setState=function(d,f,m){const _=d.clippingPlanes,g=d.clipIntersection,v=d.clipShadows,x=l.get(d);if(!n||null===_||0===_.length||s&&!v)s?u(null):h();else{const R=s?0:i,T=4*R;let M=x.clippingState||null;c.value=M,M=u(_,f,T,m);for(let P=0;P!==T;++P)M[P]=t[P];x.clippingState=M,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=R}}}function Ep(l){let e=new WeakMap;function t(a,o){return o===Nr?a.mapping=ki:o===Ur&&(a.mapping=tn),a}function n(a){const o=a.target;o.removeEventListener("dispose",n);const c=e.get(o);void 0!==c&&(e.delete(o),c.dispose())}return{get:function i(a){if(a&&a.isTexture&&!1===a.isRenderTargetTexture){const o=a.mapping;if(o===Nr||o===Ur){if(e.has(a))return t(e.get(a).texture,a.mapping);{const c=a.image;if(c&&c.height>0){const h=new Sf(c.height/2);return h.fromEquirectangularTexture(l,a),e.set(a,h),a.addEventListener("dispose",n),t(h.texture,a.mapping)}return null}}}return a},dispose:function s(){e=new WeakMap}}}class ua extends oa{constructor(e=-1,t=1,i=1,n=-1,s=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,s,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let s=i-e,a=i+e,o=n+t,c=n-t;if(null!==this.view&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,a=s+h*this.view.width,o-=u*this.view.offsetY,c=o-u*this.view.height}this.projectionMatrix.makeOrthographic(s,a,o,c,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}const qc=[.125,.215,.35,.446,.526,.582],Wo=new ua,Yc=new be;let Xo=null;const jn=(1+Math.sqrt(5))/2,yr=1/jn,Zc=[new D(1,1,1),new D(-1,1,1),new D(1,1,-1),new D(-1,1,-1),new D(0,jn,yr),new D(0,jn,-yr),new D(yr,0,jn),new D(-yr,0,jn),new D(jn,yr,0),new D(-jn,yr,0)];class $c{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,n=100){Xo=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,i,n,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=Qc(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=Kc(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Xo),e.scissorTest=!1,fa(e,0,0,e.width,e.height)}_fromTexture(e,t){this._setSize(e.mapping===ki||e.mapping===tn?0===e.image.length?16:e.image[0].width||e.image[0].image.width:e.image.width/4),Xo=this._renderer.getRenderTarget();const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:yt,minFilter:yt,generateMipmaps:!1,type:tr,format:Qt,encoding:an,depthBuffer:!1},n=Jc(e,t,i);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Jc(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function Fp(l){const e=[],t=[],i=[];let n=l;const s=l-4+1+qc.length;for(let a=0;a<s;a++){const o=Math.pow(2,n);t.push(o);let c=1/o;a>l-4?c=qc[a-l+4-1]:0===a&&(c=0),i.push(c);const h=1/(o-2),u=-h,d=1+h,f=[u,u,d,u,d,d,u,u,d,d,u,d],m=6,_=6,g=3,v=2,x=1,R=new Float32Array(g*_*m),T=new Float32Array(v*_*m),M=new Float32Array(x*_*m);for(let L=0;L<m;L++){const j=L%3*2/3-1,S=L>2?0:-1;R.set([j,S,0,j+2/3,S,0,j+2/3,S+1,0,j,S,0,j+2/3,S+1,0,j,S+1,0],g*_*L),T.set(f,v*_*L),M.set([L,L,L,L,L,L],x*_*L)}const P=new Ve;P.setAttribute("position",new wt(R,g)),P.setAttribute("uv",new wt(T,v)),P.setAttribute("faceIndex",new wt(M,x)),e.push(P),n>4&&n--}return{lodPlanes:e,sizeLods:t,sigmas:i}}(s)),this._blurMaterial=function jp(l,e,t){const i=new Float32Array(20),n=new D(0,1,0);return new Bi({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${l}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:Ti,depthTest:!1,depthWrite:!1})}(s,e,t)}return n}_compileMaterial(e){const t=new Ht(this._lodPlanes[0],e);this._renderer.compile(t,Wo)}_sceneToCubeUV(e,t,i,n){const o=new zt(90,1,t,i),c=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],u=this._renderer,d=u.autoClear,f=u.toneMapping;u.getClearColor(Yc),u.toneMapping=di,u.autoClear=!1;const m=new vn({name:"PMREM.Background",side:qt,depthWrite:!1,depthTest:!1}),_=new Ht(new An,m);let g=!1;const v=e.background;v?v.isColor&&(m.color.copy(v),e.background=null,g=!0):(m.color.copy(Yc),g=!0);for(let x=0;x<6;x++){const R=x%3;0===R?(o.up.set(0,c[x],0),o.lookAt(h[x],0,0)):1===R?(o.up.set(0,0,c[x]),o.lookAt(0,h[x],0)):(o.up.set(0,c[x],0),o.lookAt(0,0,h[x]));const T=this._cubeSize;fa(n,R*T,x>2?T:0,T,T),u.setRenderTarget(n),g&&u.render(_,o),u.render(e,o)}_.geometry.dispose(),_.material.dispose(),u.toneMapping=f,u.autoClear=d,e.background=v}_textureToCubeUV(e,t){const i=this._renderer,n=e.mapping===ki||e.mapping===tn;n?(null===this._cubemapMaterial&&(this._cubemapMaterial=Qc()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=Kc());const s=n?this._cubemapMaterial:this._equirectMaterial,a=new Ht(this._lodPlanes[0],s);s.uniforms.envMap.value=e;const c=this._cubeSize;fa(t,0,0,3*c,2*c),i.setRenderTarget(t),i.render(a,Wo)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let n=1;n<this._lodPlanes.length;n++){const s=Math.sqrt(this._sigmas[n]*this._sigmas[n]-this._sigmas[n-1]*this._sigmas[n-1]);this._blur(e,n-1,n,s,Zc[(n-1)%Zc.length])}t.autoClear=i}_blur(e,t,i,n,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,i,n,"latitudinal",s),this._halfBlur(a,e,i,i,n,"longitudinal",s)}_halfBlur(e,t,i,n,s,a,o){const c=this._renderer,h=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");const d=new Ht(this._lodPlanes[n],h),f=h.uniforms,m=this._sizeLods[i]-1,_=isFinite(s)?Math.PI/(2*m):2*Math.PI/39,g=s/_,v=isFinite(s)?1+Math.floor(3*g):20;v>20&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${v} samples when the maximum is set to 20`);const x=[];let R=0;for(let j=0;j<20;++j){const S=j/g,A=Math.exp(-S*S/2);x.push(A),0===j?R+=A:j<v&&(R+=2*A)}for(let j=0;j<x.length;j++)x[j]=x[j]/R;f.envMap.value=e.texture,f.samples.value=v,f.weights.value=x,f.latitudinal.value="latitudinal"===a,o&&(f.poleAxis.value=o);const{_lodMax:T}=this;f.dTheta.value=_,f.mipInt.value=T-i;const M=this._sizeLods[n];fa(t,3*M*(n>T-4?n-T+4:0),4*(this._cubeSize-M),3*M,2*M),c.setRenderTarget(t),c.render(d,Wo)}}function Jc(l,e,t){const i=new Hi(l,e,t);return i.texture.mapping=yn,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function fa(l,e,t,i,n){l.viewport.set(e,t,i,n),l.scissor.set(e,t,i,n)}function Kc(){return new Bi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:Ti,depthTest:!1,depthWrite:!1})}function Qc(){return new Bi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:Ti,depthTest:!1,depthWrite:!1})}function Bp(l){let e=new WeakMap,t=null;function s(o){const c=o.target;c.removeEventListener("dispose",s);const h=e.get(c);void 0!==h&&(e.delete(c),h.dispose())}return{get:function i(o){if(o&&o.isTexture){const c=o.mapping,h=c===Nr||c===Ur,u=c===ki||c===tn;if(h||u){if(o.isRenderTargetTexture&&!0===o.needsPMREMUpdate){o.needsPMREMUpdate=!1;let d=e.get(o);return null===t&&(t=new $c(l)),d=h?t.fromEquirectangular(o,d):t.fromCubemap(o,d),e.set(o,d),d.texture}if(e.has(o))return e.get(o).texture;{const d=o.image;if(h&&d&&d.height>0||u&&d&&function n(o){let c=0;for(let u=0;u<6;u++)void 0!==o[u]&&c++;return 6===c}(d)){null===t&&(t=new $c(l));const f=h?t.fromEquirectangular(o):t.fromCubemap(o);return e.set(o,f),o.addEventListener("dispose",s),f.texture}return null}}}return o},dispose:function a(){e=new WeakMap,null!==t&&(t.dispose(),t=null)}}}function Ip(l){const e={};function t(i){if(void 0!==e[i])return e[i];let n;switch(i){case"WEBGL_depth_texture":n=l.getExtension("WEBGL_depth_texture")||l.getExtension("MOZ_WEBGL_depth_texture")||l.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=l.getExtension("EXT_texture_filter_anisotropic")||l.getExtension("MOZ_EXT_texture_filter_anisotropic")||l.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=l.getExtension("WEBGL_compressed_texture_s3tc")||l.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||l.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=l.getExtension("WEBGL_compressed_texture_pvrtc")||l.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=l.getExtension(i)}return e[i]=n,n}return{has:function(i){return null!==t(i)},init:function(i){i.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(i){const n=t(i);return null===n&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),n}}}function Gp(l,e,t,i){const n={},s=new WeakMap;function a(d){const f=d.target;null!==f.index&&e.remove(f.index);for(const _ in f.attributes)e.remove(f.attributes[_]);f.removeEventListener("dispose",a),delete n[f.id];const m=s.get(f);m&&(e.remove(m),s.delete(f)),i.releaseStatesOfGeometry(f),!0===f.isInstancedBufferGeometry&&delete f._maxInstanceCount,t.memory.geometries--}function h(d){const f=[],m=d.index,_=d.attributes.position;let g=0;if(null!==m){const R=m.array;g=m.version;for(let T=0,M=R.length;T<M;T+=3){const P=R[T+0],L=R[T+1],j=R[T+2];f.push(P,L,L,j,j,P)}}else{g=_.version;for(let T=0,M=_.array.length/3-1;T<M;T+=3){const P=T+0,L=T+1,j=T+2;f.push(P,L,L,j,j,P)}}const v=new(Co(f)?Uc:Nc)(f,1);v.version=g;const x=s.get(d);x&&e.remove(x),s.set(d,v)}return{get:function o(d,f){return!0===n[f.id]||(f.addEventListener("dispose",a),n[f.id]=!0,t.memory.geometries++),f},update:function c(d){const f=d.attributes;for(const _ in f)e.update(f[_],34962);const m=d.morphAttributes;for(const _ in m){const g=m[_];for(let v=0,x=g.length;v<x;v++)e.update(g[v],34962)}},getWireframeAttribute:function u(d){const f=s.get(d);if(f){const m=d.index;null!==m&&f.version<m.version&&h(d)}else h(d);return s.get(d)}}}function Op(l,e,t,i){const n=i.isWebGL2;let s,o,c;this.setMode=function a(f){s=f},this.setIndex=function h(f){o=f.type,c=f.bytesPerElement},this.render=function u(f,m){l.drawElements(s,m,o,f*c),t.update(m,s,1)},this.renderInstances=function d(f,m,_){if(0===_)return;let g,v;if(n)g=l,v="drawElementsInstanced";else if(g=e.get("ANGLE_instanced_arrays"),v="drawElementsInstancedANGLE",null===g)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");g[v](s,m,o,f*c,_),t.update(m,s,_)}}function zp(l){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function n(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function i(s,a,o){switch(t.calls++,a){case 4:t.triangles+=o*(s/3);break;case 1:t.lines+=o*(s/2);break;case 3:t.lines+=o*(s-1);break;case 2:t.lines+=o*s;break;case 0:t.points+=o*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a)}}}}function kp(l,e){return l[0]-e[0]}function Np(l,e){return Math.abs(e[1])-Math.abs(l[1])}function Up(l,e,t){const i={},n=new Float32Array(8),s=new WeakMap,a=new et,o=[];for(let h=0;h<8;h++)o[h]=[h,0];return{update:function c(h,u,d,f){const m=h.morphTargetInfluences;if(!0===e.isWebGL2){const _=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,g=void 0!==_?_.length:0;let v=s.get(u);if(void 0===v||v.count!==g){let X=function(){z.dispose(),s.delete(u),u.removeEventListener("dispose",X)};void 0!==v&&v.texture.dispose();const T=void 0!==u.morphAttributes.position,M=void 0!==u.morphAttributes.normal,P=void 0!==u.morphAttributes.color,L=u.morphAttributes.position||[],j=u.morphAttributes.normal||[],S=u.morphAttributes.color||[];let A=0;!0===T&&(A=1),!0===M&&(A=2),!0===P&&(A=3);let B=u.attributes.position.count*A,U=1;B>e.maxTextureSize&&(U=Math.ceil(B/e.maxTextureSize),B=e.maxTextureSize);const ee=new Float32Array(B*U*4*g),z=new $s(ee,B,U,g);z.type=Ui,z.needsUpdate=!0;const G=4*A;for(let ne=0;ne<g;ne++){const ae=L[ne],K=j[ne],le=S[ne],re=B*U*4*ne;for(let H=0;H<ae.count;H++){const W=H*G;!0===T&&(a.fromBufferAttribute(ae,H),ee[re+W+0]=a.x,ee[re+W+1]=a.y,ee[re+W+2]=a.z,ee[re+W+3]=0),!0===M&&(a.fromBufferAttribute(K,H),ee[re+W+4]=a.x,ee[re+W+5]=a.y,ee[re+W+6]=a.z,ee[re+W+7]=0),!0===P&&(a.fromBufferAttribute(le,H),ee[re+W+8]=a.x,ee[re+W+9]=a.y,ee[re+W+10]=a.z,ee[re+W+11]=4===le.itemSize?a.w:1)}}v={count:g,texture:z,size:new ie(B,U)},s.set(u,v),u.addEventListener("dispose",X)}let x=0;for(let T=0;T<m.length;T++)x+=m[T];const R=u.morphTargetsRelative?1:1-x;f.getUniforms().setValue(l,"morphTargetBaseInfluence",R),f.getUniforms().setValue(l,"morphTargetInfluences",m),f.getUniforms().setValue(l,"morphTargetsTexture",v.texture,t),f.getUniforms().setValue(l,"morphTargetsTextureSize",v.size)}else{const _=void 0===m?0:m.length;let g=i[u.id];if(void 0===g||g.length!==_){g=[];for(let M=0;M<_;M++)g[M]=[M,0];i[u.id]=g}for(let M=0;M<_;M++){const P=g[M];P[0]=M,P[1]=m[M]}g.sort(Np);for(let M=0;M<8;M++)M<_&&g[M][1]?(o[M][0]=g[M][0],o[M][1]=g[M][1]):(o[M][0]=Number.MAX_SAFE_INTEGER,o[M][1]=0);o.sort(kp);const v=u.morphAttributes.position,x=u.morphAttributes.normal;let R=0;for(let M=0;M<8;M++){const P=o[M],L=P[0],j=P[1];L!==Number.MAX_SAFE_INTEGER&&j?(v&&u.getAttribute("morphTarget"+M)!==v[L]&&u.setAttribute("morphTarget"+M,v[L]),x&&u.getAttribute("morphNormal"+M)!==x[L]&&u.setAttribute("morphNormal"+M,x[L]),n[M]=j,R+=j):(v&&!0===u.hasAttribute("morphTarget"+M)&&u.deleteAttribute("morphTarget"+M),x&&!0===u.hasAttribute("morphNormal"+M)&&u.deleteAttribute("morphNormal"+M),n[M]=0)}const T=u.morphTargetsRelative?1:1-R;f.getUniforms().setValue(l,"morphTargetBaseInfluence",T),f.getUniforms().setValue(l,"morphTargetInfluences",n)}}}}function Vp(l,e,t,i){let n=new WeakMap;function o(c){const h=c.target;h.removeEventListener("dispose",o),t.remove(h.instanceMatrix),null!==h.instanceColor&&t.remove(h.instanceColor)}return{update:function s(c){const h=i.render.frame,d=e.get(c,c.geometry);return n.get(d)!==h&&(e.update(d),n.set(d,h)),c.isInstancedMesh&&(!1===c.hasEventListener("dispose",o)&&c.addEventListener("dispose",o),t.update(c.instanceMatrix,34962),null!==c.instanceColor&&t.update(c.instanceColor,34962)),d},dispose:function a(){n=new WeakMap}}}const eh=new Ri,th=new $s,ih=new Ao,nh=new la,rh=[],sh=[],ah=new Float32Array(16),oh=new Float32Array(9),lh=new Float32Array(4);function br(l,e,t){const i=l[0];if(i<=0||i>0)return l;const n=e*t;let s=rh[n];if(void 0===s&&(s=new Float32Array(n),rh[n]=s),0!==e){i.toArray(s,0);for(let a=1,o=0;a!==e;++a)o+=t,l[a].toArray(s,o)}return s}function Lt(l,e){if(l.length!==e.length)return!1;for(let t=0,i=l.length;t<i;t++)if(l[t]!==e[t])return!1;return!0}function At(l,e){for(let t=0,i=e.length;t<i;t++)l[t]=e[t]}function da(l,e){let t=sh[e];void 0===t&&(t=new Int32Array(e),sh[e]=t);for(let i=0;i!==e;++i)t[i]=l.allocateTextureUnit();return t}function Hp(l,e){const t=this.cache;t[0]!==e&&(l.uniform1f(this.addr,e),t[0]=e)}function Wp(l,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y)&&(l.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Lt(t,e))return;l.uniform2fv(this.addr,e),At(t,e)}}function Xp(l,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(l.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(void 0!==e.r)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(l.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Lt(t,e))return;l.uniform3fv(this.addr,e),At(t,e)}}function qp(l,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(l.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Lt(t,e))return;l.uniform4fv(this.addr,e),At(t,e)}}function Yp(l,e){const t=this.cache,i=e.elements;if(void 0===i){if(Lt(t,e))return;l.uniformMatrix2fv(this.addr,!1,e),At(t,e)}else{if(Lt(t,i))return;lh.set(i),l.uniformMatrix2fv(this.addr,!1,lh),At(t,i)}}function Zp(l,e){const t=this.cache,i=e.elements;if(void 0===i){if(Lt(t,e))return;l.uniformMatrix3fv(this.addr,!1,e),At(t,e)}else{if(Lt(t,i))return;oh.set(i),l.uniformMatrix3fv(this.addr,!1,oh),At(t,i)}}function $p(l,e){const t=this.cache,i=e.elements;if(void 0===i){if(Lt(t,e))return;l.uniformMatrix4fv(this.addr,!1,e),At(t,e)}else{if(Lt(t,i))return;ah.set(i),l.uniformMatrix4fv(this.addr,!1,ah),At(t,i)}}function Jp(l,e){const t=this.cache;t[0]!==e&&(l.uniform1i(this.addr,e),t[0]=e)}function Kp(l,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y)&&(l.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Lt(t,e))return;l.uniform2iv(this.addr,e),At(t,e)}}function Qp(l,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(l.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Lt(t,e))return;l.uniform3iv(this.addr,e),At(t,e)}}function em(l,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(l.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Lt(t,e))return;l.uniform4iv(this.addr,e),At(t,e)}}function tm(l,e){const t=this.cache;t[0]!==e&&(l.uniform1ui(this.addr,e),t[0]=e)}function im(l,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y)&&(l.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Lt(t,e))return;l.uniform2uiv(this.addr,e),At(t,e)}}function nm(l,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(l.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Lt(t,e))return;l.uniform3uiv(this.addr,e),At(t,e)}}function rm(l,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(l.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Lt(t,e))return;l.uniform4uiv(this.addr,e),At(t,e)}}function sm(l,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(l.uniform1i(this.addr,n),i[0]=n),t.setTexture2D(e||eh,n)}function am(l,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(l.uniform1i(this.addr,n),i[0]=n),t.setTexture3D(e||ih,n)}function om(l,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(l.uniform1i(this.addr,n),i[0]=n),t.setTextureCube(e||nh,n)}function lm(l,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(l.uniform1i(this.addr,n),i[0]=n),t.setTexture2DArray(e||th,n)}function hm(l,e){l.uniform1fv(this.addr,e)}function um(l,e){const t=br(e,this.size,2);l.uniform2fv(this.addr,t)}function fm(l,e){const t=br(e,this.size,3);l.uniform3fv(this.addr,t)}function dm(l,e){const t=br(e,this.size,4);l.uniform4fv(this.addr,t)}function pm(l,e){const t=br(e,this.size,4);l.uniformMatrix2fv(this.addr,!1,t)}function mm(l,e){const t=br(e,this.size,9);l.uniformMatrix3fv(this.addr,!1,t)}function gm(l,e){const t=br(e,this.size,16);l.uniformMatrix4fv(this.addr,!1,t)}function vm(l,e){l.uniform1iv(this.addr,e)}function _m(l,e){l.uniform2iv(this.addr,e)}function ym(l,e){l.uniform3iv(this.addr,e)}function bm(l,e){l.uniform4iv(this.addr,e)}function Tm(l,e){l.uniform1uiv(this.addr,e)}function xm(l,e){l.uniform2uiv(this.addr,e)}function Mm(l,e){l.uniform3uiv(this.addr,e)}function Rm(l,e){l.uniform4uiv(this.addr,e)}function Sm(l,e,t){const i=this.cache,n=e.length,s=da(t,n);Lt(i,s)||(l.uniform1iv(this.addr,s),At(i,s));for(let a=0;a!==n;++a)t.setTexture2D(e[a]||eh,s[a])}function wm(l,e,t){const i=this.cache,n=e.length,s=da(t,n);Lt(i,s)||(l.uniform1iv(this.addr,s),At(i,s));for(let a=0;a!==n;++a)t.setTexture3D(e[a]||ih,s[a])}function Pm(l,e,t){const i=this.cache,n=e.length,s=da(t,n);Lt(i,s)||(l.uniform1iv(this.addr,s),At(i,s));for(let a=0;a!==n;++a)t.setTextureCube(e[a]||nh,s[a])}function Cm(l,e,t){const i=this.cache,n=e.length,s=da(t,n);Lt(i,s)||(l.uniform1iv(this.addr,s),At(i,s));for(let a=0;a!==n;++a)t.setTexture2DArray(e[a]||th,s[a])}class Lm{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.setValue=function cm(l){switch(l){case 5126:return Hp;case 35664:return Wp;case 35665:return Xp;case 35666:return qp;case 35674:return Yp;case 35675:return Zp;case 35676:return $p;case 5124:case 35670:return Jp;case 35667:case 35671:return Kp;case 35668:case 35672:return Qp;case 35669:case 35673:return em;case 5125:return tm;case 36294:return im;case 36295:return nm;case 36296:return rm;case 35678:case 36198:case 36298:case 36306:case 35682:return sm;case 35679:case 36299:case 36307:return am;case 35680:case 36300:case 36308:case 36293:return om;case 36289:case 36303:case 36311:case 36292:return lm}}(t.type)}}class Am{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.size=t.size,this.setValue=function Dm(l){switch(l){case 5126:return hm;case 35664:return um;case 35665:return fm;case 35666:return dm;case 35674:return pm;case 35675:return mm;case 35676:return gm;case 5124:case 35670:return vm;case 35667:case 35671:return _m;case 35668:case 35672:return ym;case 35669:case 35673:return bm;case 5125:return Tm;case 36294:return xm;case 36295:return Mm;case 36296:return Rm;case 35678:case 36198:case 36298:case 36306:case 35682:return Sm;case 35679:case 36299:case 36307:return wm;case 35680:case 36300:case 36308:case 36293:return Pm;case 36289:case 36303:case 36311:case 36292:return Cm}}(t.type)}}class Em{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const n=this.seq;for(let s=0,a=n.length;s!==a;++s){const o=n[s];o.setValue(e,t[o.id],i)}}}const Yo=/(\w+)(\])?(\[|\.)?/g;function ch(l,e){l.seq.push(e),l.map[e.id]=e}function Fm(l,e,t){const i=l.name,n=i.length;for(Yo.lastIndex=0;;){const s=Yo.exec(i);let o=s[1];const h=s[3];if("]"===s[2]&&(o|=0),void 0===h||"["===h&&Yo.lastIndex+2===n){ch(t,void 0===h?new Lm(o,l,e):new Am(o,l,e));break}{let d=t.map[o];void 0===d&&(d=new Em(o),ch(t,d)),t=d}}}class pa{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,35718);for(let n=0;n<i;++n){const s=e.getActiveUniform(t,n);Fm(s,e.getUniformLocation(t,s.name),this)}}setValue(e,t,i,n){const s=this.map[t];void 0!==s&&s.setValue(e,i,n)}setOptional(e,t,i){const n=t[i];void 0!==n&&this.setValue(e,i,n)}static upload(e,t,i,n){for(let s=0,a=t.length;s!==a;++s){const o=t[s],c=i[o.id];!1!==c.needsUpdate&&o.setValue(e,c.value,n)}}static seqWithValue(e,t){const i=[];for(let n=0,s=e.length;n!==s;++n){const a=e[n];a.id in t&&i.push(a)}return i}}function hh(l,e,t){const i=l.createShader(e);return l.shaderSource(i,t),l.compileShader(i),i}let jm=0;function uh(l,e,t){const i=l.getShaderParameter(e,35713),n=l.getShaderInfoLog(e).trim();if(i&&""===n)return"";const s=/ERROR: 0:(\d+)/.exec(n);if(s){const a=parseInt(s[1]);return t.toUpperCase()+"\n\n"+n+"\n\n"+function Bm(l,e){const t=l.split("\n"),i=[],n=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let a=n;a<s;a++){const o=a+1;i.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return i.join("\n")}(l.getShaderSource(e),a)}return n}function Gm(l,e){const t=function Im(l){switch(l){case an:return["Linear","( value )"];case ot:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",l),["Linear","( value )"]}}(e);return"vec4 "+l+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function Om(l,e){let t;switch(e){case eo:t="Linear";break;case Yl:t="Reinhard";break;case Zl:t="OptimizedCineon";break;case $l:t="ACESFilmic";break;case Jl:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+l+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function fs(l){return""!==l}function fh(l,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return l.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function dh(l,e){return l.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Um=/^[ \t]*#include +<([\w\d./]+)>/gm;function Zo(l){return l.replace(Um,Vm)}function Vm(l,e){const t=Ue[e];if(void 0===t)throw new Error("Can not resolve #include <"+e+">");return Zo(t)}const Hm=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function ph(l){return l.replace(Hm,Wm)}function Wm(l,e,t,i){let n="";for(let s=parseInt(e);s<parseInt(t);s++)n+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return n}function mh(l){let e="precision "+l.precision+" float;\nprecision "+l.precision+" int;";return"highp"===l.precision?e+="\n#define HIGH_PRECISION":"mediump"===l.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===l.precision&&(e+="\n#define LOW_PRECISION"),e}function Jm(l,e,t,i){const n=l.getContext(),s=t.defines;let a=t.vertexShader,o=t.fragmentShader;const c=function Xm(l){let e="SHADOWMAP_TYPE_BASIC";return l.shadowMapType===Gt?e="SHADOWMAP_TYPE_PCF":l.shadowMapType===Xt?e="SHADOWMAP_TYPE_PCF_SOFT":l.shadowMapType===zi&&(e="SHADOWMAP_TYPE_VSM"),e}(t),h=function qm(l){let e="ENVMAP_TYPE_CUBE";if(l.envMap)switch(l.envMapMode){case ki:case tn:e="ENVMAP_TYPE_CUBE";break;case yn:e="ENVMAP_TYPE_CUBE_UV"}return e}(t),u=function Ym(l){let e="ENVMAP_MODE_REFLECTION";return l.envMap&&l.envMapMode===tn&&(e="ENVMAP_MODE_REFRACTION"),e}(t),d=function Zm(l){let e="ENVMAP_BLENDING_NONE";if(l.envMap)switch(l.combine){case zr:e="ENVMAP_BLENDING_MULTIPLY";break;case ql:e="ENVMAP_BLENDING_MIX";break;case Qn:e="ENVMAP_BLENDING_ADD"}return e}(t),f=function $m(l){const e=l.envMapCubeUVHeight;if(null===e)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:i,maxMip:t}}(t),m=t.isWebGL2?"":function zm(l){return[l.extensionDerivatives||l.envMapCubeUVHeight||l.bumpMap||l.tangentSpaceNormalMap||l.clearcoatNormalMap||l.flatShading||"physical"===l.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(l.extensionFragDepth||l.logarithmicDepthBuffer)&&l.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",l.extensionDrawBuffers&&l.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(l.extensionShaderTextureLOD||l.envMap||l.transmission)&&l.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(fs).join("\n")}(t),_=function km(l){const e=[];for(const t in l){const i=l[t];!1!==i&&e.push("#define "+t+" "+i)}return e.join("\n")}(s),g=n.createProgram();let v,x,R=t.glslVersion?"#version "+t.glslVersion+"\n":"";t.isRawShaderMaterial?(v=[_].filter(fs).join("\n"),v.length>0&&(v+="\n"),x=[m,_].filter(fs).join("\n"),x.length>0&&(x+="\n")):(v=[mh(t),"#define SHADER_NAME "+t.shaderName,_,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&!1===t.flatShading?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(fs).join("\n"),x=[m,mh(t),"#define SHADER_NAME "+t.shaderName,_,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",t.envMap?"#define "+d:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==di?"#define TONE_MAPPING":"",t.toneMapping!==di?Ue.tonemapping_pars_fragment:"",t.toneMapping!==di?Om("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Ue.encodings_pars_fragment,Gm("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"","\n"].filter(fs).join("\n")),a=Zo(a),a=fh(a,t),a=dh(a,t),o=Zo(o),o=fh(o,t),o=dh(o,t),a=ph(a),o=ph(o),t.isWebGL2&&!0!==t.isRawShaderMaterial&&(R="#version 300 es\n",v=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+v,x=["#define varying in",t.glslVersion===So?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===So?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+x);const M=R+x+o,P=hh(n,35633,R+v+a),L=hh(n,35632,M);if(n.attachShader(g,P),n.attachShader(g,L),void 0!==t.index0AttributeName?n.bindAttribLocation(g,0,t.index0AttributeName):!0===t.morphTargets&&n.bindAttribLocation(g,0,"position"),n.linkProgram(g),l.debug.checkShaderErrors){const A=n.getProgramInfoLog(g).trim(),B=n.getShaderInfoLog(P).trim(),U=n.getShaderInfoLog(L).trim();let ee=!0,z=!0;if(!1===n.getProgramParameter(g,35714)){ee=!1;const G=uh(n,P,"vertex"),X=uh(n,L,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(g,35715)+"\n\nProgram Info Log: "+A+"\n"+G+"\n"+X)}else""!==A?console.warn("THREE.WebGLProgram: Program Info Log:",A):(""===B||""===U)&&(z=!1);z&&(this.diagnostics={runnable:ee,programLog:A,vertexShader:{log:B,prefix:v},fragmentShader:{log:U,prefix:x}})}let j,S;return n.deleteShader(P),n.deleteShader(L),this.getUniforms=function(){return void 0===j&&(j=new pa(n,g)),j},this.getAttributes=function(){return void 0===S&&(S=function Nm(l,e){const t={},i=l.getProgramParameter(e,35721);for(let n=0;n<i;n++){const s=l.getActiveAttrib(e,n),a=s.name;let o=1;35674===s.type&&(o=2),35675===s.type&&(o=3),35676===s.type&&(o=4),t[a]={type:s.type,location:l.getAttribLocation(e,a),locationSize:o}}return t}(n,g)),S},this.destroy=function(){i.releaseStatesOfProgram(this),n.deleteProgram(g),this.program=void 0},this.name=t.shaderName,this.id=jm++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=P,this.fragmentShader=L,this}let Km=0;class Qm{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const i=e.fragmentShader,n=this._getShaderStage(e.vertexShader),s=this._getShaderStage(i),a=this._getShaderCacheForMaterial(e);return!1===a.has(n)&&(a.add(n),n.usedTimes++),!1===a.has(s)&&(a.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,0===i.usedTimes&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return void 0===i&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return void 0===i&&(i=new eg(e),t.set(e,i)),i}}class eg{constructor(e){this.id=Km++,this.code=e,this.usedTimes=0}}function tg(l,e,t,i,n,s,a){const o=new p,c=new Qm,h=[],u=n.isWebGL2,d=n.logarithmicDepthBuffer,f=n.vertexTextures;let m=n.precision;const _={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function g(S,A,B,U,ee){const z=U.fog,G=ee.geometry,ne=(S.isMeshStandardMaterial?t:e).get(S.envMap||(S.isMeshStandardMaterial?U.environment:null)),ae=ne&&ne.mapping===yn?ne.image.height:null,K=_[S.type];null!==S.precision&&(m=n.getMaxPrecision(S.precision),m!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",m,"instead."));const le=G.morphAttributes.position||G.morphAttributes.normal||G.morphAttributes.color,re=void 0!==le?le.length:0;let W,ue,ce,ge,H=0;if(void 0!==G.morphAttributes.position&&(H=1),void 0!==G.morphAttributes.normal&&(H=2),void 0!==G.morphAttributes.color&&(H=3),K){const He=Ii[K];W=He.vertexShader,ue=He.fragmentShader}else W=S.vertexShader,ue=S.fragmentShader,c.update(S),ce=c.getVertexShaderID(S),ge=c.getFragmentShaderID(S);const Z=l.getRenderTarget(),xe=S.clearcoat>0,Ie=S.iridescence>0;return{isWebGL2:u,shaderID:K,shaderName:S.type,vertexShader:W,fragmentShader:ue,defines:S.defines,customVertexShaderID:ce,customFragmentShaderID:ge,isRawShaderMaterial:!0===S.isRawShaderMaterial,glslVersion:S.glslVersion,precision:m,instancing:!0===ee.isInstancedMesh,instancingColor:!0===ee.isInstancedMesh&&null!==ee.instanceColor,supportsVertexTextures:f,outputEncoding:null===Z?l.outputEncoding:!0===Z.isXRRenderTarget?Z.texture.encoding:an,map:!!S.map,matcap:!!S.matcap,envMap:!!ne,envMapMode:ne&&ne.mapping,envMapCubeUVHeight:ae,lightMap:!!S.lightMap,aoMap:!!S.aoMap,emissiveMap:!!S.emissiveMap,bumpMap:!!S.bumpMap,normalMap:!!S.normalMap,objectSpaceNormalMap:S.normalMapType===_c,tangentSpaceNormalMap:S.normalMapType===on,decodeVideoTexture:!!S.map&&!0===S.map.isVideoTexture&&S.map.encoding===ot,clearcoat:xe,clearcoatMap:xe&&!!S.clearcoatMap,clearcoatRoughnessMap:xe&&!!S.clearcoatRoughnessMap,clearcoatNormalMap:xe&&!!S.clearcoatNormalMap,iridescence:Ie,iridescenceMap:Ie&&!!S.iridescenceMap,iridescenceThicknessMap:Ie&&!!S.iridescenceThicknessMap,displacementMap:!!S.displacementMap,roughnessMap:!!S.roughnessMap,metalnessMap:!!S.metalnessMap,specularMap:!!S.specularMap,specularIntensityMap:!!S.specularIntensityMap,specularColorMap:!!S.specularColorMap,opaque:!1===S.transparent&&S.blending===en,alphaMap:!!S.alphaMap,alphaTest:S.alphaTest>0,gradientMap:!!S.gradientMap,sheen:S.sheen>0,sheenColorMap:!!S.sheenColorMap,sheenRoughnessMap:!!S.sheenRoughnessMap,transmission:S.transmission>0,transmissionMap:!!S.transmissionMap,thicknessMap:!!S.thicknessMap,combine:S.combine,vertexTangents:!!S.normalMap&&!!G.attributes.tangent,vertexColors:S.vertexColors,vertexAlphas:!0===S.vertexColors&&!!G.attributes.color&&4===G.attributes.color.itemSize,vertexUvs:!!(S.map||S.bumpMap||S.normalMap||S.specularMap||S.alphaMap||S.emissiveMap||S.roughnessMap||S.metalnessMap||S.clearcoatMap||S.clearcoatRoughnessMap||S.clearcoatNormalMap||S.iridescenceMap||S.iridescenceThicknessMap||S.displacementMap||S.transmissionMap||S.thicknessMap||S.specularIntensityMap||S.specularColorMap||S.sheenColorMap||S.sheenRoughnessMap),uvsVertexOnly:!(S.map||S.bumpMap||S.normalMap||S.specularMap||S.alphaMap||S.emissiveMap||S.roughnessMap||S.metalnessMap||S.clearcoatNormalMap||S.iridescenceMap||S.iridescenceThicknessMap||S.transmission>0||S.transmissionMap||S.thicknessMap||S.specularIntensityMap||S.specularColorMap||S.sheen>0||S.sheenColorMap||S.sheenRoughnessMap||!S.displacementMap),fog:!!z,useFog:!0===S.fog,fogExp2:z&&z.isFogExp2,flatShading:!!S.flatShading,sizeAttenuation:S.sizeAttenuation,logarithmicDepthBuffer:d,skinning:!0===ee.isSkinnedMesh,morphTargets:void 0!==G.morphAttributes.position,morphNormals:void 0!==G.morphAttributes.normal,morphColors:void 0!==G.morphAttributes.color,morphTargetsCount:re,morphTextureStride:H,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numSpotLightMaps:A.spotLightMap.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numSpotLightShadowsWithMaps:A.numSpotLightShadowsWithMaps,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:S.dithering,shadowMapEnabled:l.shadowMap.enabled&&B.length>0,shadowMapType:l.shadowMap.type,toneMapping:S.toneMapped?l.toneMapping:di,physicallyCorrectLights:l.physicallyCorrectLights,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===Yn,flipSided:S.side===qt,useDepthPacking:!!S.depthPacking,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionDerivatives:S.extensions&&S.extensions.derivatives,extensionFragDepth:S.extensions&&S.extensions.fragDepth,extensionDrawBuffers:S.extensions&&S.extensions.drawBuffers,extensionShaderTextureLOD:S.extensions&&S.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||i.has("EXT_shader_texture_lod"),customProgramCacheKey:S.customProgramCacheKey()}},getProgramCacheKey:function v(S){const A=[];if(S.shaderID?A.push(S.shaderID):(A.push(S.customVertexShaderID),A.push(S.customFragmentShaderID)),void 0!==S.defines)for(const B in S.defines)A.push(B),A.push(S.defines[B]);return!1===S.isRawShaderMaterial&&(function x(S,A){S.push(A.precision),S.push(A.outputEncoding),S.push(A.envMapMode),S.push(A.envMapCubeUVHeight),S.push(A.combine),S.push(A.vertexUvs),S.push(A.fogExp2),S.push(A.sizeAttenuation),S.push(A.morphTargetsCount),S.push(A.morphAttributeCount),S.push(A.numDirLights),S.push(A.numPointLights),S.push(A.numSpotLights),S.push(A.numSpotLightMaps),S.push(A.numHemiLights),S.push(A.numRectAreaLights),S.push(A.numDirLightShadows),S.push(A.numPointLightShadows),S.push(A.numSpotLightShadows),S.push(A.numSpotLightShadowsWithMaps),S.push(A.shadowMapType),S.push(A.toneMapping),S.push(A.numClippingPlanes),S.push(A.numClipIntersection),S.push(A.depthPacking)}(A,S),function R(S,A){o.disableAll(),A.isWebGL2&&o.enable(0),A.supportsVertexTextures&&o.enable(1),A.instancing&&o.enable(2),A.instancingColor&&o.enable(3),A.map&&o.enable(4),A.matcap&&o.enable(5),A.envMap&&o.enable(6),A.lightMap&&o.enable(7),A.aoMap&&o.enable(8),A.emissiveMap&&o.enable(9),A.bumpMap&&o.enable(10),A.normalMap&&o.enable(11),A.objectSpaceNormalMap&&o.enable(12),A.tangentSpaceNormalMap&&o.enable(13),A.clearcoat&&o.enable(14),A.clearcoatMap&&o.enable(15),A.clearcoatRoughnessMap&&o.enable(16),A.clearcoatNormalMap&&o.enable(17),A.iridescence&&o.enable(18),A.iridescenceMap&&o.enable(19),A.iridescenceThicknessMap&&o.enable(20),A.displacementMap&&o.enable(21),A.specularMap&&o.enable(22),A.roughnessMap&&o.enable(23),A.metalnessMap&&o.enable(24),A.gradientMap&&o.enable(25),A.alphaMap&&o.enable(26),A.alphaTest&&o.enable(27),A.vertexColors&&o.enable(28),A.vertexAlphas&&o.enable(29),A.vertexUvs&&o.enable(30),A.vertexTangents&&o.enable(31),A.uvsVertexOnly&&o.enable(32),S.push(o.mask),o.disableAll(),A.fog&&o.enable(0),A.useFog&&o.enable(1),A.flatShading&&o.enable(2),A.logarithmicDepthBuffer&&o.enable(3),A.skinning&&o.enable(4),A.morphTargets&&o.enable(5),A.morphNormals&&o.enable(6),A.morphColors&&o.enable(7),A.premultipliedAlpha&&o.enable(8),A.shadowMapEnabled&&o.enable(9),A.physicallyCorrectLights&&o.enable(10),A.doubleSided&&o.enable(11),A.flipSided&&o.enable(12),A.useDepthPacking&&o.enable(13),A.dithering&&o.enable(14),A.specularIntensityMap&&o.enable(15),A.specularColorMap&&o.enable(16),A.transmission&&o.enable(17),A.transmissionMap&&o.enable(18),A.thicknessMap&&o.enable(19),A.sheen&&o.enable(20),A.sheenColorMap&&o.enable(21),A.sheenRoughnessMap&&o.enable(22),A.decodeVideoTexture&&o.enable(23),A.opaque&&o.enable(24),S.push(o.mask)}(A,S),A.push(l.outputEncoding)),A.push(S.customProgramCacheKey),A.join()},getUniforms:function T(S){const A=_[S.type];let B;return B=A?Wc.clone(Ii[A].uniforms):S.uniforms,B},acquireProgram:function M(S,A){let B;for(let U=0,ee=h.length;U<ee;U++){const z=h[U];if(z.cacheKey===A){B=z,++B.usedTimes;break}}return void 0===B&&(B=new Jm(l,A,S,s),h.push(B)),B},releaseProgram:function P(S){if(0==--S.usedTimes){const A=h.indexOf(S);h[A]=h[h.length-1],h.pop(),S.destroy()}},releaseShaderCache:function L(S){c.remove(S)},programs:h,dispose:function j(){c.dispose()}}}function ig(){let l=new WeakMap;return{get:function e(s){let a=l.get(s);return void 0===a&&(a={},l.set(s,a)),a},remove:function t(s){l.delete(s)},update:function i(s,a,o){l.get(s)[a]=o},dispose:function n(){l=new WeakMap}}}function ng(l,e){return l.groupOrder!==e.groupOrder?l.groupOrder-e.groupOrder:l.renderOrder!==e.renderOrder?l.renderOrder-e.renderOrder:l.material.id!==e.material.id?l.material.id-e.material.id:l.z!==e.z?l.z-e.z:l.id-e.id}function gh(l,e){return l.groupOrder!==e.groupOrder?l.groupOrder-e.groupOrder:l.renderOrder!==e.renderOrder?l.renderOrder-e.renderOrder:l.z!==e.z?e.z-l.z:l.id-e.id}function vh(){const l=[];let e=0;const t=[],i=[],n=[];function a(d,f,m,_,g,v){let x=l[e];return void 0===x?(x={id:d.id,object:d,geometry:f,material:m,groupOrder:_,renderOrder:d.renderOrder,z:g,group:v},l[e]=x):(x.id=d.id,x.object=d,x.geometry=f,x.material=m,x.groupOrder=_,x.renderOrder=d.renderOrder,x.z=g,x.group=v),e++,x}return{opaque:t,transmissive:i,transparent:n,init:function s(){e=0,t.length=0,i.length=0,n.length=0},push:function o(d,f,m,_,g,v){const x=a(d,f,m,_,g,v);m.transmission>0?i.push(x):!0===m.transparent?n.push(x):t.push(x)},unshift:function c(d,f,m,_,g,v){const x=a(d,f,m,_,g,v);m.transmission>0?i.unshift(x):!0===m.transparent?n.unshift(x):t.unshift(x)},finish:function u(){for(let d=e,f=l.length;d<f;d++){const m=l[d];if(null===m.id)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}},sort:function h(d,f){t.length>1&&t.sort(d||ng),i.length>1&&i.sort(f||gh),n.length>1&&n.sort(f||gh)}}}function rg(){let l=new WeakMap;return{get:function e(i,n){const s=l.get(i);let a;return void 0===s?(a=new vh,l.set(i,[a])):n>=s.length?(a=new vh,s.push(a)):a=s[n],a},dispose:function t(){l=new WeakMap}}}function sg(){const l={};return{get:function(e){if(void 0!==l[e.id])return l[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new D,color:new be};break;case"SpotLight":t={position:new D,direction:new D,color:new be,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new D,color:new be,distance:0,decay:0};break;case"HemisphereLight":t={direction:new D,skyColor:new be,groundColor:new be};break;case"RectAreaLight":t={color:new be,position:new D,halfWidth:new D,halfHeight:new D}}return l[e.id]=t,t}}}let og=0;function lg(l,e){return(e.castShadow?2:0)-(l.castShadow?2:0)+(e.map?1:0)-(l.map?1:0)}function cg(l,e){const t=new sg,i=function ag(){const l={};return{get:function(e){if(void 0!==l[e.id])return l[e.id];let t;switch(e.type){case"DirectionalLight":case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ie};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ie,shadowCameraNear:1,shadowCameraFar:1e3}}return l[e.id]=t,t}}}(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)n.probe.push(new D);const s=new D,a=new ze,o=new ze;return{setup:function c(u,d){let f=0,m=0,_=0;for(let U=0;U<9;U++)n.probe[U].set(0,0,0);let g=0,v=0,x=0,R=0,T=0,M=0,P=0,L=0,j=0,S=0;u.sort(lg);const A=!0!==d?Math.PI:1;for(let U=0,ee=u.length;U<ee;U++){const z=u[U],G=z.color,X=z.intensity,ne=z.distance,ae=z.shadow&&z.shadow.map?z.shadow.map.texture:null;if(z.isAmbientLight)f+=G.r*X*A,m+=G.g*X*A,_+=G.b*X*A;else if(z.isLightProbe)for(let K=0;K<9;K++)n.probe[K].addScaledVector(z.sh.coefficients[K],X);else if(z.isDirectionalLight){const K=t.get(z);if(K.color.copy(z.color).multiplyScalar(z.intensity*A),z.castShadow){const le=z.shadow,re=i.get(z);re.shadowBias=le.bias,re.shadowNormalBias=le.normalBias,re.shadowRadius=le.radius,re.shadowMapSize=le.mapSize,n.directionalShadow[g]=re,n.directionalShadowMap[g]=ae,n.directionalShadowMatrix[g]=z.shadow.matrix,M++}n.directional[g]=K,g++}else if(z.isSpotLight){const K=t.get(z);K.position.setFromMatrixPosition(z.matrixWorld),K.color.copy(G).multiplyScalar(X*A),K.distance=ne,K.coneCos=Math.cos(z.angle),K.penumbraCos=Math.cos(z.angle*(1-z.penumbra)),K.decay=z.decay,n.spot[x]=K;const le=z.shadow;if(z.map&&(n.spotLightMap[j]=z.map,j++,le.updateMatrices(z),z.castShadow&&S++),n.spotLightMatrix[x]=le.matrix,z.castShadow){const re=i.get(z);re.shadowBias=le.bias,re.shadowNormalBias=le.normalBias,re.shadowRadius=le.radius,re.shadowMapSize=le.mapSize,n.spotShadow[x]=re,n.spotShadowMap[x]=ae,L++}x++}else if(z.isRectAreaLight){const K=t.get(z);K.color.copy(G).multiplyScalar(X),K.halfWidth.set(.5*z.width,0,0),K.halfHeight.set(0,.5*z.height,0),n.rectArea[R]=K,R++}else if(z.isPointLight){const K=t.get(z);if(K.color.copy(z.color).multiplyScalar(z.intensity*A),K.distance=z.distance,K.decay=z.decay,z.castShadow){const le=z.shadow,re=i.get(z);re.shadowBias=le.bias,re.shadowNormalBias=le.normalBias,re.shadowRadius=le.radius,re.shadowMapSize=le.mapSize,re.shadowCameraNear=le.camera.near,re.shadowCameraFar=le.camera.far,n.pointShadow[v]=re,n.pointShadowMap[v]=ae,n.pointShadowMatrix[v]=z.shadow.matrix,P++}n.point[v]=K,v++}else if(z.isHemisphereLight){const K=t.get(z);K.skyColor.copy(z.color).multiplyScalar(X*A),K.groundColor.copy(z.groundColor).multiplyScalar(X*A),n.hemi[T]=K,T++}}R>0&&(e.isWebGL2||!0===l.has("OES_texture_float_linear")?(n.rectAreaLTC1=de.LTC_FLOAT_1,n.rectAreaLTC2=de.LTC_FLOAT_2):!0===l.has("OES_texture_half_float_linear")?(n.rectAreaLTC1=de.LTC_HALF_1,n.rectAreaLTC2=de.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),n.ambient[0]=f,n.ambient[1]=m,n.ambient[2]=_;const B=n.hash;(B.directionalLength!==g||B.pointLength!==v||B.spotLength!==x||B.rectAreaLength!==R||B.hemiLength!==T||B.numDirectionalShadows!==M||B.numPointShadows!==P||B.numSpotShadows!==L||B.numSpotMaps!==j)&&(n.directional.length=g,n.spot.length=x,n.rectArea.length=R,n.point.length=v,n.hemi.length=T,n.directionalShadow.length=M,n.directionalShadowMap.length=M,n.pointShadow.length=P,n.pointShadowMap.length=P,n.spotShadow.length=L,n.spotShadowMap.length=L,n.directionalShadowMatrix.length=M,n.pointShadowMatrix.length=P,n.spotLightMatrix.length=L+j-S,n.spotLightMap.length=j,n.numSpotLightShadowsWithMaps=S,B.directionalLength=g,B.pointLength=v,B.spotLength=x,B.rectAreaLength=R,B.hemiLength=T,B.numDirectionalShadows=M,B.numPointShadows=P,B.numSpotShadows=L,B.numSpotMaps=j,n.version=og++)},setupView:function h(u,d){let f=0,m=0,_=0,g=0,v=0;const x=d.matrixWorldInverse;for(let R=0,T=u.length;R<T;R++){const M=u[R];if(M.isDirectionalLight){const P=n.directional[f];P.direction.setFromMatrixPosition(M.matrixWorld),s.setFromMatrixPosition(M.target.matrixWorld),P.direction.sub(s),P.direction.transformDirection(x),f++}else if(M.isSpotLight){const P=n.spot[_];P.position.setFromMatrixPosition(M.matrixWorld),P.position.applyMatrix4(x),P.direction.setFromMatrixPosition(M.matrixWorld),s.setFromMatrixPosition(M.target.matrixWorld),P.direction.sub(s),P.direction.transformDirection(x),_++}else if(M.isRectAreaLight){const P=n.rectArea[g];P.position.setFromMatrixPosition(M.matrixWorld),P.position.applyMatrix4(x),o.identity(),a.copy(M.matrixWorld),a.premultiply(x),o.extractRotation(a),P.halfWidth.set(.5*M.width,0,0),P.halfHeight.set(0,.5*M.height,0),P.halfWidth.applyMatrix4(o),P.halfHeight.applyMatrix4(o),g++}else if(M.isPointLight){const P=n.point[m];P.position.setFromMatrixPosition(M.matrixWorld),P.position.applyMatrix4(x),m++}else if(M.isHemisphereLight){const P=n.hemi[v];P.direction.setFromMatrixPosition(M.matrixWorld),P.direction.transformDirection(x),v++}}},state:n}}function _h(l,e){const t=new cg(l,e),i=[],n=[];return{init:function s(){i.length=0,n.length=0},state:{lightsArray:i,shadowsArray:n,lights:t},setupLights:function c(d){t.setup(i,d)},setupLightsView:function h(d){t.setupView(i,d)},pushLight:function a(d){i.push(d)},pushShadow:function o(d){n.push(d)}}}function hg(l,e){let t=new WeakMap;return{get:function i(s,a=0){const o=t.get(s);let c;return void 0===o?(c=new _h(l,e),t.set(s,[c])):a>=o.length?(c=new _h(l,e),o.push(c)):c=o[a],c},dispose:function n(){t=new WeakMap}}}class $o extends ji{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class yh extends ji{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new D,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const ug="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fg="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";function dg(l,e,t){let i=new Ho;const n=new ie,s=new ie,a=new et,o=new $o({depthPacking:Ro}),c=new yh,h={},u=t.maxTextureSize,d={0:qt,1:fi,2:Yn},f=new Bi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ie},radius:{value:4}},vertexShader:ug,fragmentShader:fg}),m=f.clone();m.defines.HORIZONTAL_PASS=1;const _=new Ve;_.setAttribute("position",new wt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new Ht(_,f),v=this;function x(M,P){const L=e.update(g);f.defines.VSM_SAMPLES!==M.blurSamples&&(f.defines.VSM_SAMPLES=M.blurSamples,m.defines.VSM_SAMPLES=M.blurSamples,f.needsUpdate=!0,m.needsUpdate=!0),null===M.mapPass&&(M.mapPass=new Hi(n.x,n.y)),f.uniforms.shadow_pass.value=M.map.texture,f.uniforms.resolution.value=M.mapSize,f.uniforms.radius.value=M.radius,l.setRenderTarget(M.mapPass),l.clear(),l.renderBufferDirect(P,null,L,f,g,null),m.uniforms.shadow_pass.value=M.mapPass.texture,m.uniforms.resolution.value=M.mapSize,m.uniforms.radius.value=M.radius,l.setRenderTarget(M.map),l.clear(),l.renderBufferDirect(P,null,L,m,g,null)}function R(M,P,L,j,S,A){let B=null;const U=!0===L.isPointLight?M.customDistanceMaterial:M.customDepthMaterial;if(void 0!==U)B=U;else if(B=!0===L.isPointLight?c:o,l.localClippingEnabled&&!0===P.clipShadows&&Array.isArray(P.clippingPlanes)&&0!==P.clippingPlanes.length||P.displacementMap&&0!==P.displacementScale||P.alphaMap&&P.alphaTest>0||P.map&&P.alphaTest>0){const ee=B.uuid,z=P.uuid;let G=h[ee];void 0===G&&(G={},h[ee]=G);let X=G[z];void 0===X&&(X=B.clone(),G[z]=X),B=X}return B.visible=P.visible,B.wireframe=P.wireframe,B.side=A===zi?null!==P.shadowSide?P.shadowSide:P.side:null!==P.shadowSide?P.shadowSide:d[P.side],B.alphaMap=P.alphaMap,B.alphaTest=P.alphaTest,B.map=P.map,B.clipShadows=P.clipShadows,B.clippingPlanes=P.clippingPlanes,B.clipIntersection=P.clipIntersection,B.displacementMap=P.displacementMap,B.displacementScale=P.displacementScale,B.displacementBias=P.displacementBias,B.wireframeLinewidth=P.wireframeLinewidth,B.linewidth=P.linewidth,!0===L.isPointLight&&!0===B.isMeshDistanceMaterial&&(B.referencePosition.setFromMatrixPosition(L.matrixWorld),B.nearDistance=j,B.farDistance=S),B}function T(M,P,L,j,S){if(!1===M.visible)return;if(M.layers.test(P.layers)&&(M.isMesh||M.isLine||M.isPoints)&&(M.castShadow||M.receiveShadow&&S===zi)&&(!M.frustumCulled||i.intersectsObject(M))){M.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,M.matrixWorld);const U=e.update(M),ee=M.material;if(Array.isArray(ee)){const z=U.groups;for(let G=0,X=z.length;G<X;G++){const ne=z[G],ae=ee[ne.materialIndex];if(ae&&ae.visible){const K=R(M,ae,j,L.near,L.far,S);l.renderBufferDirect(L,null,U,K,M,ne)}}}else if(ee.visible){const z=R(M,ee,j,L.near,L.far,S);l.renderBufferDirect(L,null,U,z,M,null)}}const B=M.children;for(let U=0,ee=B.length;U<ee;U++)T(B[U],P,L,j,S)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Gt,this.render=function(M,P,L){if(!1===v.enabled||!1===v.autoUpdate&&!1===v.needsUpdate||0===M.length)return;const j=l.getRenderTarget(),S=l.getActiveCubeFace(),A=l.getActiveMipmapLevel(),B=l.state;B.setBlending(Ti),B.buffers.color.setClear(1,1,1,1),B.buffers.depth.setTest(!0),B.setScissorTest(!1);for(let U=0,ee=M.length;U<ee;U++){const z=M[U],G=z.shadow;if(void 0===G){console.warn("THREE.WebGLShadowMap:",z,"has no shadow.");continue}if(!1===G.autoUpdate&&!1===G.needsUpdate)continue;n.copy(G.mapSize);const X=G.getFrameExtents();n.multiply(X),s.copy(G.mapSize),(n.x>u||n.y>u)&&(n.x>u&&(s.x=Math.floor(u/X.x),n.x=s.x*X.x,G.mapSize.x=s.x),n.y>u&&(s.y=Math.floor(u/X.y),n.y=s.y*X.y,G.mapSize.y=s.y)),null===G.map&&(G.map=new Hi(n.x,n.y,this.type!==zi?{minFilter:mt,magFilter:mt}:{}),G.map.texture.name=z.name+".shadowMap",G.camera.updateProjectionMatrix()),l.setRenderTarget(G.map),l.clear();const ne=G.getViewportCount();for(let ae=0;ae<ne;ae++){const K=G.getViewport(ae);a.set(s.x*K.x,s.y*K.y,s.x*K.z,s.y*K.w),B.viewport(a),G.updateMatrices(z,ae),i=G.getFrustum(),T(P,L,G.camera,z,this.type)}!0!==G.isPointLightShadow&&this.type===zi&&x(G,L),G.needsUpdate=!1}v.needsUpdate=!1,l.setRenderTarget(j,S,A)}}function pg(l,e,t){const i=t.isWebGL2,o=new function n(){let I=!1;const q=new et;let se=null;const Te=new et(0,0,0,0);return{setMask:function(Ce){se!==Ce&&!I&&(l.colorMask(Ce,Ce,Ce,Ce),se=Ce)},setLocked:function(Ce){I=Ce},setClear:function(Ce,it,Bt,Wt,Hn){!0===Hn&&(Ce*=Wt,it*=Wt,Bt*=Wt),q.set(Ce,it,Bt,Wt),!1===Te.equals(q)&&(l.clearColor(Ce,it,Bt,Wt),Te.copy(q))},reset:function(){I=!1,se=null,Te.set(-1,0,0,0)}}},c=new function s(){let I=!1,q=null,se=null,Te=null;return{setTest:function(Ce){Ce?Ge(2929):xe(2929)},setMask:function(Ce){q!==Ce&&!I&&(l.depthMask(Ce),q=Ce)},setFunc:function(Ce){if(se!==Ce){switch(Ce){case Li:l.depthFunc(512);break;case As:l.depthFunc(519);break;case Es:l.depthFunc(513);break;case xi:l.depthFunc(515);break;case Kn:l.depthFunc(514);break;case Hl:l.depthFunc(518);break;case Wl:l.depthFunc(516);break;case Xl:l.depthFunc(517);break;default:l.depthFunc(515)}se=Ce}},setLocked:function(Ce){I=Ce},setClear:function(Ce){Te!==Ce&&(l.clearDepth(Ce),Te=Ce)},reset:function(){I=!1,q=null,se=null,Te=null}}},h=new function a(){let I=!1,q=null,se=null,Te=null,Ce=null,it=null,Bt=null,Wt=null,Hn=null;return{setTest:function(ft){I||(ft?Ge(2960):xe(2960))},setMask:function(ft){q!==ft&&!I&&(l.stencilMask(ft),q=ft)},setFunc:function(ft,Ki,yi){(se!==ft||Te!==Ki||Ce!==yi)&&(l.stencilFunc(ft,Ki,yi),se=ft,Te=Ki,Ce=yi)},setOp:function(ft,Ki,yi){(it!==ft||Bt!==Ki||Wt!==yi)&&(l.stencilOp(ft,Ki,yi),it=ft,Bt=Ki,Wt=yi)},setLocked:function(ft){I=ft},setClear:function(ft){Hn!==ft&&(l.clearStencil(ft),Hn=ft)},reset:function(){I=!1,q=null,se=null,Te=null,Ce=null,it=null,Bt=null,Wt=null,Hn=null}}},u=new WeakMap,d=new WeakMap;let f={},m={},_=new WeakMap,g=[],v=null,x=!1,R=null,T=null,M=null,P=null,L=null,j=null,S=null,A=!1,B=null,U=null,ee=null,z=null,G=null;const X=l.getParameter(35661);let ne=!1,ae=0;const K=l.getParameter(7938);-1!==K.indexOf("WebGL")?(ae=parseFloat(/^WebGL (\d)/.exec(K)[1]),ne=ae>=1):-1!==K.indexOf("OpenGL ES")&&(ae=parseFloat(/^OpenGL ES (\d)/.exec(K)[1]),ne=ae>=2);let le=null,re={};const H=l.getParameter(3088),W=l.getParameter(2978),ue=(new et).fromArray(H),ce=(new et).fromArray(W);function ge(I,q,se){const Te=new Uint8Array(4),Ce=l.createTexture();l.bindTexture(I,Ce),l.texParameteri(I,10241,9728),l.texParameteri(I,10240,9728);for(let it=0;it<se;it++)l.texImage2D(q+it,0,6408,1,1,0,6408,5121,Te);return Ce}const Z={};function Ge(I){!0!==f[I]&&(l.enable(I),f[I]=!0)}function xe(I){!1!==f[I]&&(l.disable(I),f[I]=!1)}Z[3553]=ge(3553,3553,1),Z[34067]=ge(34067,34069,6),o.setClear(0,0,0,1),c.setClear(1),h.setClear(0),Ge(2929),c.setFunc(xi),me(!1),ke(xt),Ge(2884),fe(Ti);const te={[Dt]:32774,[$n]:32778,[Jn]:32779};if(i)te[Ir]=32775,te[dt]=32776;else{const I=e.get("EXT_blend_minmax");null!==I&&(te[Ir]=I.MIN_EXT,te[dt]=I.MAX_EXT)}const Q={[Za]:0,[$a]:1,[Nl]:768,[Ka]:770,[Vl]:776,[Je]:774,[Or]:772,[Ja]:769,[Gr]:771,[Ul]:775,[Qa]:773};function fe(I,q,se,Te,Ce,it,Bt,Wt){if(I!==Ti){if(!1===x&&(Ge(3042),x=!0),I===Ya)Ce=Ce||q,it=it||se,Bt=Bt||Te,(q!==T||Ce!==L)&&(l.blendEquationSeparate(te[q],te[Ce]),T=q,L=Ce),(se!==M||Te!==P||it!==j||Bt!==S)&&(l.blendFuncSeparate(Q[se],Q[Te],Q[it],Q[Bt]),M=se,P=Te,j=it,S=Bt),R=I,A=!1;else if(I!==R||Wt!==A){if((T!==Dt||L!==Dt)&&(l.blendEquation(32774),T=Dt,L=Dt),Wt)switch(I){case en:l.blendFuncSeparate(1,771,1,771);break;case Br:l.blendFunc(1,1);break;case Ds:l.blendFuncSeparate(0,769,0,1);break;case Ls:l.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",I)}else switch(I){case en:l.blendFuncSeparate(770,771,1,771);break;case Br:l.blendFunc(770,1);break;case Ds:l.blendFuncSeparate(0,769,0,1);break;case Ls:l.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",I)}M=null,P=null,j=null,S=null,R=I,A=Wt}}else!0===x&&(xe(3042),x=!1)}function me(I){B!==I&&(l.frontFace(I?2304:2305),B=I)}function ke(I){I!==Di?(Ge(2884),I!==U&&l.cullFace(I===xt?1029:I===ui?1028:1032)):xe(2884),U=I}function Ee(I,q,se){I?(Ge(32823),(z!==q||G!==se)&&(l.polygonOffset(q,se),z=q,G=se)):xe(32823)}return{buffers:{color:o,depth:c,stencil:h},enable:Ge,disable:xe,bindFramebuffer:function Ie(I,q){return m[I]!==q&&(l.bindFramebuffer(I,q),m[I]=q,i&&(36009===I&&(m[36160]=q),36160===I&&(m[36009]=q)),!0)},drawBuffers:function ve(I,q){let se=g,Te=!1;if(I)if(se=_.get(q),void 0===se&&(se=[],_.set(q,se)),I.isWebGLMultipleRenderTargets){const Ce=I.texture;if(se.length!==Ce.length||36064!==se[0]){for(let it=0,Bt=Ce.length;it<Bt;it++)se[it]=36064+it;se.length=Ce.length,Te=!0}}else 36064!==se[0]&&(se[0]=36064,Te=!0);else 1029!==se[0]&&(se[0]=1029,Te=!0);Te&&(t.isWebGL2?l.drawBuffers(se):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(se))},useProgram:function He(I){return v!==I&&(l.useProgram(I),v=I,!0)},setBlending:fe,setMaterial:function Re(I,q){I.side===Yn?xe(2884):Ge(2884);let se=I.side===qt;q&&(se=!se),me(se),I.blending===en&&!1===I.transparent?fe(Ti):fe(I.blending,I.blendEquation,I.blendSrc,I.blendDst,I.blendEquationAlpha,I.blendSrcAlpha,I.blendDstAlpha,I.premultipliedAlpha),c.setFunc(I.depthFunc),c.setTest(I.depthTest),c.setMask(I.depthWrite),o.setMask(I.colorWrite);const Te=I.stencilWrite;h.setTest(Te),Te&&(h.setMask(I.stencilWriteMask),h.setFunc(I.stencilFunc,I.stencilRef,I.stencilFuncMask),h.setOp(I.stencilFail,I.stencilZFail,I.stencilZPass)),Ee(I.polygonOffset,I.polygonOffsetFactor,I.polygonOffsetUnits),!0===I.alphaToCoverage?Ge(32926):xe(32926)},setFlipSided:me,setCullFace:ke,setLineWidth:function Fe(I){I!==ee&&(ne&&l.lineWidth(I),ee=I)},setPolygonOffset:Ee,setScissorTest:function ht(I){I?Ge(3089):xe(3089)},activeTexture:function nt(I){void 0===I&&(I=33984+X-1),le!==I&&(l.activeTexture(I),le=I)},bindTexture:function E(I,q,se){void 0===se&&(se=null===le?33984+X-1:le);let Te=re[se];void 0===Te&&(Te={type:void 0,texture:void 0},re[se]=Te),(Te.type!==I||Te.texture!==q)&&(le!==se&&(l.activeTexture(se),le=se),l.bindTexture(I,q||Z[I]),Te.type=I,Te.texture=q)},unbindTexture:function w(){const I=re[le];void 0!==I&&void 0!==I.type&&(l.bindTexture(I.type,null),I.type=void 0,I.texture=void 0)},compressedTexImage2D:function V(){try{l.compressedTexImage2D.apply(l,arguments)}catch(I){console.error("THREE.WebGLState:",I)}},compressedTexImage3D:function oe(){try{l.compressedTexImage3D.apply(l,arguments)}catch(I){console.error("THREE.WebGLState:",I)}},texImage2D:function Be(){try{l.texImage2D.apply(l,arguments)}catch(I){console.error("THREE.WebGLState:",I)}},texImage3D:function we(){try{l.texImage3D.apply(l,arguments)}catch(I){console.error("THREE.WebGLState:",I)}},updateUBOMapping:function Ke(I,q){let se=d.get(q);void 0===se&&(se=new WeakMap,d.set(q,se));let Te=se.get(I);void 0===Te&&(Te=l.getUniformBlockIndex(q,I.name),se.set(I,Te))},uniformBlockBinding:function ut(I,q){const Te=d.get(q).get(I);u.get(q)!==Te&&(l.uniformBlockBinding(q,Te,I.__bindingPointIndex),u.set(q,Te))},texStorage2D:function J(){try{l.texStorage2D.apply(l,arguments)}catch(I){console.error("THREE.WebGLState:",I)}},texStorage3D:function De(){try{l.texStorage3D.apply(l,arguments)}catch(I){console.error("THREE.WebGLState:",I)}},texSubImage2D:function he(){try{l.texSubImage2D.apply(l,arguments)}catch(I){console.error("THREE.WebGLState:",I)}},texSubImage3D:function _e(){try{l.texSubImage3D.apply(l,arguments)}catch(I){console.error("THREE.WebGLState:",I)}},compressedTexSubImage2D:function Oe(){try{l.compressedTexSubImage2D.apply(l,arguments)}catch(I){console.error("THREE.WebGLState:",I)}},compressedTexSubImage3D:function ye(){try{l.compressedTexSubImage3D.apply(l,arguments)}catch(I){console.error("THREE.WebGLState:",I)}},scissor:function je(I){!1===ue.equals(I)&&(l.scissor(I.x,I.y,I.z,I.w),ue.copy(I))},viewport:function Le(I){!1===ce.equals(I)&&(l.viewport(I.x,I.y,I.z,I.w),ce.copy(I))},reset:function jt(){l.disable(3042),l.disable(2884),l.disable(2929),l.disable(32823),l.disable(3089),l.disable(2960),l.disable(32926),l.blendEquation(32774),l.blendFunc(1,0),l.blendFuncSeparate(1,0,1,0),l.colorMask(!0,!0,!0,!0),l.clearColor(0,0,0,0),l.depthMask(!0),l.depthFunc(513),l.clearDepth(1),l.stencilMask(4294967295),l.stencilFunc(519,0,4294967295),l.stencilOp(7680,7680,7680),l.clearStencil(0),l.cullFace(1029),l.frontFace(2305),l.polygonOffset(0,0),l.activeTexture(33984),l.bindFramebuffer(36160,null),!0===i&&(l.bindFramebuffer(36009,null),l.bindFramebuffer(36008,null)),l.useProgram(null),l.lineWidth(1),l.scissor(0,0,l.canvas.width,l.canvas.height),l.viewport(0,0,l.canvas.width,l.canvas.height),f={},le=null,re={},m={},_=new WeakMap,g=[],v=null,x=!1,R=null,T=null,M=null,P=null,L=null,j=null,S=null,A=!1,B=null,U=null,ee=null,z=null,G=null,ue.set(0,0,l.canvas.width,l.canvas.height),ce.set(0,0,l.canvas.width,l.canvas.height),o.reset(),c.reset(),h.reset()}}}function mg(l,e,t,i,n,s,a){const o=n.isWebGL2,c=n.maxTextures,h=n.maxCubemapSize,u=n.maxTextureSize,d=n.maxSamples,f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,m=!(typeof navigator>"u")&&/OculusBrowser/g.test(navigator.userAgent),_=new WeakMap;let g;const v=new WeakMap;let x=!1;try{x=typeof OffscreenCanvas<"u"&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch{}function R(E,w){return x?new OffscreenCanvas(E,w):sr("canvas")}function T(E,w,V,oe){let he=1;if((E.width>oe||E.height>oe)&&(he=oe/Math.max(E.width,E.height)),he<1||!0===w){if(typeof HTMLImageElement<"u"&&E instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&E instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&E instanceof ImageBitmap){const _e=w?Jr:Math.floor,Oe=_e(he*E.width),ye=_e(he*E.height);void 0===g&&(g=R(Oe,ye));const J=V?R(Oe,ye):g;return J.width=Oe,J.height=ye,J.getContext("2d").drawImage(E,0,0,Oe,ye),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+E.width+"x"+E.height+") to ("+Oe+"x"+ye+")."),J}return"data"in E&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+E.width+"x"+E.height+")."),E}return E}function M(E){return Ws(E.width)&&Ws(E.height)}function L(E,w){return E.generateMipmaps&&w&&E.minFilter!==mt&&E.minFilter!==yt}function j(E){l.generateMipmap(E)}function S(E,w,V,oe,he=!1){if(!1===o)return w;if(null!==E){if(void 0!==l[E])return l[E];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+E+"'")}let _e=w;return 6403===w&&(5126===V&&(_e=33326),5131===V&&(_e=33325),5121===V&&(_e=33321)),33319===w&&(5126===V&&(_e=33328),5131===V&&(_e=33327),5121===V&&(_e=33323)),6408===w&&(5126===V&&(_e=34836),5131===V&&(_e=34842),5121===V&&(_e=oe===ot&&!1===he?35907:32856),32819===V&&(_e=32854),32820===V&&(_e=32855)),(33325===_e||33326===_e||33327===_e||33328===_e||34842===_e||34836===_e)&&e.get("EXT_color_buffer_float"),_e}function A(E,w,V){return!0===L(E,V)||E.isFramebufferTexture&&E.minFilter!==mt&&E.minFilter!==yt?Math.log2(Math.max(w.width,w.height))+1:void 0!==E.mipmaps&&E.mipmaps.length>0?E.mipmaps.length:E.isCompressedTexture&&Array.isArray(E.image)?w.mipmaps.length:1}function B(E){return E===mt||E===Hr||E===Wr?9728:9729}function U(E){const w=E.target;w.removeEventListener("dispose",U),function z(E){const w=i.get(E);if(void 0===w.__webglInit)return;const V=E.source,oe=v.get(V);if(oe){const he=oe[w.__cacheKey];he.usedTimes--,0===he.usedTimes&&G(E),0===Object.keys(oe).length&&v.delete(V)}i.remove(E)}(w),w.isVideoTexture&&_.delete(w)}function ee(E){const w=E.target;w.removeEventListener("dispose",ee),function X(E){const w=E.texture,V=i.get(E),oe=i.get(w);if(void 0!==oe.__webglTexture&&(l.deleteTexture(oe.__webglTexture),a.memory.textures--),E.depthTexture&&E.depthTexture.dispose(),E.isWebGLCubeRenderTarget)for(let he=0;he<6;he++)l.deleteFramebuffer(V.__webglFramebuffer[he]),V.__webglDepthbuffer&&l.deleteRenderbuffer(V.__webglDepthbuffer[he]);else{if(l.deleteFramebuffer(V.__webglFramebuffer),V.__webglDepthbuffer&&l.deleteRenderbuffer(V.__webglDepthbuffer),V.__webglMultisampledFramebuffer&&l.deleteFramebuffer(V.__webglMultisampledFramebuffer),V.__webglColorRenderbuffer)for(let he=0;he<V.__webglColorRenderbuffer.length;he++)V.__webglColorRenderbuffer[he]&&l.deleteRenderbuffer(V.__webglColorRenderbuffer[he]);V.__webglDepthRenderbuffer&&l.deleteRenderbuffer(V.__webglDepthRenderbuffer)}if(E.isWebGLMultipleRenderTargets)for(let he=0,_e=w.length;he<_e;he++){const Oe=i.get(w[he]);Oe.__webglTexture&&(l.deleteTexture(Oe.__webglTexture),a.memory.textures--),i.remove(w[he])}i.remove(w),i.remove(E)}(w)}function G(E){const w=i.get(E);l.deleteTexture(w.__webglTexture),delete v.get(E.source)[w.__cacheKey],a.memory.textures--}let ne=0;function re(E,w){const V=i.get(E);if(E.isVideoTexture&&function ht(E){const w=a.render.frame;_.get(E)!==w&&(_.set(E,w),E.update())}(E),!1===E.isRenderTargetTexture&&E.version>0&&V.__version!==E.version){const oe=E.image;if(null===oe)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==oe.complete)return void xe(V,E,w);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}t.bindTexture(3553,V.__webglTexture,33984+w)}const ce={[er]:10497,[Nt]:33071,[Vr]:33648},ge={[mt]:9728,[Hr]:9984,[Wr]:9986,[yt]:9729,[to]:9985,[Ni]:9987};function Z(E,w,V){if(V?(l.texParameteri(E,10242,ce[w.wrapS]),l.texParameteri(E,10243,ce[w.wrapT]),(32879===E||35866===E)&&l.texParameteri(E,32882,ce[w.wrapR]),l.texParameteri(E,10240,ge[w.magFilter]),l.texParameteri(E,10241,ge[w.minFilter])):(l.texParameteri(E,10242,33071),l.texParameteri(E,10243,33071),(32879===E||35866===E)&&l.texParameteri(E,32882,33071),(w.wrapS!==Nt||w.wrapT!==Nt)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),l.texParameteri(E,10240,B(w.magFilter)),l.texParameteri(E,10241,B(w.minFilter)),w.minFilter!==mt&&w.minFilter!==yt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const oe=e.get("EXT_texture_filter_anisotropic");if(w.magFilter===mt||w.minFilter!==Wr&&w.minFilter!==Ni||w.type===Ui&&!1===e.has("OES_texture_float_linear")||!1===o&&w.type===tr&&!1===e.has("OES_texture_half_float_linear"))return;(w.anisotropy>1||i.get(w).__currentAnisotropy)&&(l.texParameterf(E,oe.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(w.anisotropy,n.getMaxAnisotropy())),i.get(w).__currentAnisotropy=w.anisotropy)}}function Ge(E,w){let V=!1;void 0===E.__webglInit&&(E.__webglInit=!0,w.addEventListener("dispose",U));const oe=w.source;let he=v.get(oe);void 0===he&&(he={},v.set(oe,he));const _e=function le(E){const w=[];return w.push(E.wrapS),w.push(E.wrapT),w.push(E.wrapR||0),w.push(E.magFilter),w.push(E.minFilter),w.push(E.anisotropy),w.push(E.internalFormat),w.push(E.format),w.push(E.type),w.push(E.generateMipmaps),w.push(E.premultiplyAlpha),w.push(E.flipY),w.push(E.unpackAlignment),w.push(E.encoding),w.join()}(w);if(_e!==E.__cacheKey){void 0===he[_e]&&(he[_e]={texture:l.createTexture(),usedTimes:0},a.memory.textures++,V=!0),he[_e].usedTimes++;const Oe=he[E.__cacheKey];void 0!==Oe&&(he[E.__cacheKey].usedTimes--,0===Oe.usedTimes&&G(w)),E.__cacheKey=_e,E.__webglTexture=he[_e].texture}return V}function xe(E,w,V){let oe=3553;(w.isDataArrayTexture||w.isCompressedArrayTexture)&&(oe=35866),w.isData3DTexture&&(oe=32879);const he=Ge(E,w),_e=w.source;t.bindTexture(oe,E.__webglTexture,33984+V);const Oe=i.get(_e);if(_e.version!==Oe.__version||!0===he){t.activeTexture(33984+V),l.pixelStorei(37440,w.flipY),l.pixelStorei(37441,w.premultiplyAlpha),l.pixelStorei(3317,w.unpackAlignment),l.pixelStorei(37443,0);const ye=function P(E){return!o&&(E.wrapS!==Nt||E.wrapT!==Nt||E.minFilter!==mt&&E.minFilter!==yt)}(w)&&!1===M(w.image);let J=T(w.image,ye,!1,u);J=nt(w,J);const De=M(J)||o,Be=s.convert(w.format,w.encoding);let Le,we=s.convert(w.type),je=S(w.internalFormat,Be,we,w.encoding,w.isVideoTexture);Z(oe,w,De);const Ke=w.mipmaps,ut=o&&!0!==w.isVideoTexture,jt=void 0===Oe.__version||!0===he,I=A(w,J,De);if(w.isDepthTexture)je=6402,o?je=w.type===Ui?36012:w.type===rn?33190:w.type===bn?35056:33189:w.type===Ui&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),w.format===sn&&6402===je&&w.type!==io&&w.type!==rn&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),w.type=rn,we=s.convert(w.type)),w.format===Tn&&6402===je&&(je=34041,w.type!==bn&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),w.type=bn,we=s.convert(w.type))),jt&&(ut?t.texStorage2D(3553,1,je,J.width,J.height):t.texImage2D(3553,0,je,J.width,J.height,0,Be,we,null));else if(w.isDataTexture)if(Ke.length>0&&De){ut&&jt&&t.texStorage2D(3553,I,je,Ke[0].width,Ke[0].height);for(let q=0,se=Ke.length;q<se;q++)Le=Ke[q],ut?t.texSubImage2D(3553,q,0,0,Le.width,Le.height,Be,we,Le.data):t.texImage2D(3553,q,je,Le.width,Le.height,0,Be,we,Le.data);w.generateMipmaps=!1}else ut?(jt&&t.texStorage2D(3553,I,je,J.width,J.height),t.texSubImage2D(3553,0,0,0,J.width,J.height,Be,we,J.data)):t.texImage2D(3553,0,je,J.width,J.height,0,Be,we,J.data);else if(w.isCompressedTexture)if(w.isCompressedArrayTexture){ut&&jt&&t.texStorage3D(35866,I,je,Ke[0].width,Ke[0].height,J.depth);for(let q=0,se=Ke.length;q<se;q++)Le=Ke[q],w.format!==Qt?null!==Be?ut?t.compressedTexSubImage3D(35866,q,0,0,0,Le.width,Le.height,J.depth,Be,Le.data,0,0):t.compressedTexImage3D(35866,q,je,Le.width,Le.height,J.depth,0,Le.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ut?t.texSubImage3D(35866,q,0,0,0,Le.width,Le.height,J.depth,Be,we,Le.data):t.texImage3D(35866,q,je,Le.width,Le.height,J.depth,0,Be,we,Le.data)}else{ut&&jt&&t.texStorage2D(3553,I,je,Ke[0].width,Ke[0].height);for(let q=0,se=Ke.length;q<se;q++)Le=Ke[q],w.format!==Qt?null!==Be?ut?t.compressedTexSubImage2D(3553,q,0,0,Le.width,Le.height,Be,Le.data):t.compressedTexImage2D(3553,q,je,Le.width,Le.height,0,Le.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ut?t.texSubImage2D(3553,q,0,0,Le.width,Le.height,Be,we,Le.data):t.texImage2D(3553,q,je,Le.width,Le.height,0,Be,we,Le.data)}else if(w.isDataArrayTexture)ut?(jt&&t.texStorage3D(35866,I,je,J.width,J.height,J.depth),t.texSubImage3D(35866,0,0,0,0,J.width,J.height,J.depth,Be,we,J.data)):t.texImage3D(35866,0,je,J.width,J.height,J.depth,0,Be,we,J.data);else if(w.isData3DTexture)ut?(jt&&t.texStorage3D(32879,I,je,J.width,J.height,J.depth),t.texSubImage3D(32879,0,0,0,0,J.width,J.height,J.depth,Be,we,J.data)):t.texImage3D(32879,0,je,J.width,J.height,J.depth,0,Be,we,J.data);else if(w.isFramebufferTexture){if(jt)if(ut)t.texStorage2D(3553,I,je,J.width,J.height);else{let q=J.width,se=J.height;for(let Te=0;Te<I;Te++)t.texImage2D(3553,Te,je,q,se,0,Be,we,null),q>>=1,se>>=1}}else if(Ke.length>0&&De){ut&&jt&&t.texStorage2D(3553,I,je,Ke[0].width,Ke[0].height);for(let q=0,se=Ke.length;q<se;q++)Le=Ke[q],ut?t.texSubImage2D(3553,q,0,0,Be,we,Le):t.texImage2D(3553,q,je,Be,we,Le);w.generateMipmaps=!1}else ut?(jt&&t.texStorage2D(3553,I,je,J.width,J.height),t.texSubImage2D(3553,0,0,0,Be,we,J)):t.texImage2D(3553,0,je,Be,we,J);L(w,De)&&j(oe),Oe.__version=_e.version,w.onUpdate&&w.onUpdate(w)}E.__version=w.version}function ve(E,w,V,oe,he){const _e=s.convert(V.format,V.encoding),Oe=s.convert(V.type),ye=S(V.internalFormat,_e,Oe,V.encoding);i.get(w).__hasExternalTextures||(32879===he||35866===he?t.texImage3D(he,0,ye,w.width,w.height,w.depth,0,_e,Oe,null):t.texImage2D(he,0,ye,w.width,w.height,0,_e,Oe,null)),t.bindFramebuffer(36160,E),Ee(w)?f.framebufferTexture2DMultisampleEXT(36160,oe,he,i.get(V).__webglTexture,0,Fe(w)):(3553===he||he>=34069&&he<=34074)&&l.framebufferTexture2D(36160,oe,he,i.get(V).__webglTexture,0),t.bindFramebuffer(36160,null)}function He(E,w,V){if(l.bindRenderbuffer(36161,E),w.depthBuffer&&!w.stencilBuffer){let oe=33189;if(V||Ee(w)){const he=w.depthTexture;he&&he.isDepthTexture&&(he.type===Ui?oe=36012:he.type===rn&&(oe=33190));const _e=Fe(w);Ee(w)?f.renderbufferStorageMultisampleEXT(36161,_e,oe,w.width,w.height):l.renderbufferStorageMultisample(36161,_e,oe,w.width,w.height)}else l.renderbufferStorage(36161,oe,w.width,w.height);l.framebufferRenderbuffer(36160,36096,36161,E)}else if(w.depthBuffer&&w.stencilBuffer){const oe=Fe(w);V&&!1===Ee(w)?l.renderbufferStorageMultisample(36161,oe,35056,w.width,w.height):Ee(w)?f.renderbufferStorageMultisampleEXT(36161,oe,35056,w.width,w.height):l.renderbufferStorage(36161,34041,w.width,w.height),l.framebufferRenderbuffer(36160,33306,36161,E)}else{const oe=!0===w.isWebGLMultipleRenderTargets?w.texture:[w.texture];for(let he=0;he<oe.length;he++){const _e=oe[he],Oe=s.convert(_e.format,_e.encoding),ye=s.convert(_e.type),J=S(_e.internalFormat,Oe,ye,_e.encoding),De=Fe(w);V&&!1===Ee(w)?l.renderbufferStorageMultisample(36161,De,J,w.width,w.height):Ee(w)?f.renderbufferStorageMultisampleEXT(36161,De,J,w.width,w.height):l.renderbufferStorage(36161,J,w.width,w.height)}}l.bindRenderbuffer(36161,null)}function Q(E){const w=i.get(E),V=!0===E.isWebGLCubeRenderTarget;if(E.depthTexture&&!w.__autoAllocateDepthBuffer){if(V)throw new Error("target.depthTexture not supported in Cube render targets");!function te(E,w){if(w&&w.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,E),!w.depthTexture||!w.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(w.depthTexture).__webglTexture||w.depthTexture.image.width!==w.width||w.depthTexture.image.height!==w.height)&&(w.depthTexture.image.width=w.width,w.depthTexture.image.height=w.height,w.depthTexture.needsUpdate=!0),re(w.depthTexture,0);const oe=i.get(w.depthTexture).__webglTexture,he=Fe(w);if(w.depthTexture.format===sn)Ee(w)?f.framebufferTexture2DMultisampleEXT(36160,36096,3553,oe,0,he):l.framebufferTexture2D(36160,36096,3553,oe,0);else{if(w.depthTexture.format!==Tn)throw new Error("Unknown depthTexture format");Ee(w)?f.framebufferTexture2DMultisampleEXT(36160,33306,3553,oe,0,he):l.framebufferTexture2D(36160,33306,3553,oe,0)}}(w.__webglFramebuffer,E)}else if(V){w.__webglDepthbuffer=[];for(let oe=0;oe<6;oe++)t.bindFramebuffer(36160,w.__webglFramebuffer[oe]),w.__webglDepthbuffer[oe]=l.createRenderbuffer(),He(w.__webglDepthbuffer[oe],E,!1)}else t.bindFramebuffer(36160,w.__webglFramebuffer),w.__webglDepthbuffer=l.createRenderbuffer(),He(w.__webglDepthbuffer,E,!1);t.bindFramebuffer(36160,null)}function Fe(E){return Math.min(d,E.samples)}function Ee(E){const w=i.get(E);return o&&E.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==w.__useRenderToTexture}function nt(E,w){const V=E.encoding,oe=E.format,he=E.type;return!0===E.isCompressedTexture||!0===E.isVideoTexture||E.format===Us||V!==an&&(V===ot?!1===o?!0===e.has("EXT_sRGB")&&oe===Qt?(E.format=Us,E.minFilter=yt,E.generateMipmaps=!1):w=Lo.sRGBToLinear(w):(oe!==Qt||he!==nn)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",V)),w}this.allocateTextureUnit=function K(){const E=ne;return E>=c&&console.warn("THREE.WebGLTextures: Trying to use "+E+" texture units while this GPU supports only "+c),ne+=1,E},this.resetTextureUnits=function ae(){ne=0},this.setTexture2D=re,this.setTexture2DArray=function H(E,w){const V=i.get(E);E.version>0&&V.__version!==E.version?xe(V,E,w):t.bindTexture(35866,V.__webglTexture,33984+w)},this.setTexture3D=function W(E,w){const V=i.get(E);E.version>0&&V.__version!==E.version?xe(V,E,w):t.bindTexture(32879,V.__webglTexture,33984+w)},this.setTextureCube=function ue(E,w){const V=i.get(E);E.version>0&&V.__version!==E.version?function Ie(E,w,V){if(6!==w.image.length)return;const oe=Ge(E,w),he=w.source;t.bindTexture(34067,E.__webglTexture,33984+V);const _e=i.get(he);if(he.version!==_e.__version||!0===oe){t.activeTexture(33984+V),l.pixelStorei(37440,w.flipY),l.pixelStorei(37441,w.premultiplyAlpha),l.pixelStorei(3317,w.unpackAlignment),l.pixelStorei(37443,0);const Oe=w.isCompressedTexture||w.image[0].isCompressedTexture,ye=w.image[0]&&w.image[0].isDataTexture,J=[];for(let q=0;q<6;q++)J[q]=Oe||ye?ye?w.image[q].image:w.image[q]:T(w.image[q],!1,!0,h),J[q]=nt(w,J[q]);const De=J[0],Be=M(De)||o,we=s.convert(w.format,w.encoding),je=s.convert(w.type),Le=S(w.internalFormat,we,je,w.encoding),Ke=o&&!0!==w.isVideoTexture,ut=void 0===_e.__version||!0===oe;let I,jt=A(w,De,Be);if(Z(34067,w,Be),Oe){Ke&&ut&&t.texStorage2D(34067,jt,Le,De.width,De.height);for(let q=0;q<6;q++){I=J[q].mipmaps;for(let se=0;se<I.length;se++){const Te=I[se];w.format!==Qt?null!==we?Ke?t.compressedTexSubImage2D(34069+q,se,0,0,Te.width,Te.height,we,Te.data):t.compressedTexImage2D(34069+q,se,Le,Te.width,Te.height,0,Te.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Ke?t.texSubImage2D(34069+q,se,0,0,Te.width,Te.height,we,je,Te.data):t.texImage2D(34069+q,se,Le,Te.width,Te.height,0,we,je,Te.data)}}}else{I=w.mipmaps,Ke&&ut&&(I.length>0&&jt++,t.texStorage2D(34067,jt,Le,J[0].width,J[0].height));for(let q=0;q<6;q++)if(ye){Ke?t.texSubImage2D(34069+q,0,0,0,J[q].width,J[q].height,we,je,J[q].data):t.texImage2D(34069+q,0,Le,J[q].width,J[q].height,0,we,je,J[q].data);for(let se=0;se<I.length;se++){const Ce=I[se].image[q].image;Ke?t.texSubImage2D(34069+q,se+1,0,0,Ce.width,Ce.height,we,je,Ce.data):t.texImage2D(34069+q,se+1,Le,Ce.width,Ce.height,0,we,je,Ce.data)}}else{Ke?t.texSubImage2D(34069+q,0,0,0,we,je,J[q]):t.texImage2D(34069+q,0,Le,we,je,J[q]);for(let se=0;se<I.length;se++){const Te=I[se];Ke?t.texSubImage2D(34069+q,se+1,0,0,we,je,Te.image[q]):t.texImage2D(34069+q,se+1,Le,we,je,Te.image[q])}}}L(w,Be)&&j(34067),_e.__version=he.version,w.onUpdate&&w.onUpdate(w)}E.__version=w.version}(V,E,w):t.bindTexture(34067,V.__webglTexture,33984+w)},this.rebindTextures=function fe(E,w,V){const oe=i.get(E);void 0!==w&&ve(oe.__webglFramebuffer,E,E.texture,36064,3553),void 0!==V&&Q(E)},this.setupRenderTarget=function Re(E){const w=E.texture,V=i.get(E),oe=i.get(w);E.addEventListener("dispose",ee),!0!==E.isWebGLMultipleRenderTargets&&(void 0===oe.__webglTexture&&(oe.__webglTexture=l.createTexture()),oe.__version=w.version,a.memory.textures++);const he=!0===E.isWebGLCubeRenderTarget,_e=!0===E.isWebGLMultipleRenderTargets,Oe=M(E)||o;if(he){V.__webglFramebuffer=[];for(let ye=0;ye<6;ye++)V.__webglFramebuffer[ye]=l.createFramebuffer()}else{if(V.__webglFramebuffer=l.createFramebuffer(),_e)if(n.drawBuffers){const ye=E.texture;for(let J=0,De=ye.length;J<De;J++){const Be=i.get(ye[J]);void 0===Be.__webglTexture&&(Be.__webglTexture=l.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&E.samples>0&&!1===Ee(E)){const ye=_e?w:[w];V.__webglMultisampledFramebuffer=l.createFramebuffer(),V.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,V.__webglMultisampledFramebuffer);for(let J=0;J<ye.length;J++){const De=ye[J];V.__webglColorRenderbuffer[J]=l.createRenderbuffer(),l.bindRenderbuffer(36161,V.__webglColorRenderbuffer[J]);const Be=s.convert(De.format,De.encoding),we=s.convert(De.type),je=S(De.internalFormat,Be,we,De.encoding,!0===E.isXRRenderTarget),Le=Fe(E);l.renderbufferStorageMultisample(36161,Le,je,E.width,E.height),l.framebufferRenderbuffer(36160,36064+J,36161,V.__webglColorRenderbuffer[J])}l.bindRenderbuffer(36161,null),E.depthBuffer&&(V.__webglDepthRenderbuffer=l.createRenderbuffer(),He(V.__webglDepthRenderbuffer,E,!0)),t.bindFramebuffer(36160,null)}}if(he){t.bindTexture(34067,oe.__webglTexture),Z(34067,w,Oe);for(let ye=0;ye<6;ye++)ve(V.__webglFramebuffer[ye],E,w,36064,34069+ye);L(w,Oe)&&j(34067),t.unbindTexture()}else if(_e){const ye=E.texture;for(let J=0,De=ye.length;J<De;J++){const Be=ye[J],we=i.get(Be);t.bindTexture(3553,we.__webglTexture),Z(3553,Be,Oe),ve(V.__webglFramebuffer,E,Be,36064+J,3553),L(Be,Oe)&&j(3553)}t.unbindTexture()}else{let ye=3553;(E.isWebGL3DRenderTarget||E.isWebGLArrayRenderTarget)&&(o?ye=E.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(ye,oe.__webglTexture),Z(ye,w,Oe),ve(V.__webglFramebuffer,E,w,36064,ye),L(w,Oe)&&j(ye),t.unbindTexture()}E.depthBuffer&&Q(E)},this.updateRenderTargetMipmap=function me(E){const w=M(E)||o,V=!0===E.isWebGLMultipleRenderTargets?E.texture:[E.texture];for(let oe=0,he=V.length;oe<he;oe++){const _e=V[oe];if(L(_e,w)){const Oe=E.isWebGLCubeRenderTarget?34067:3553,ye=i.get(_e).__webglTexture;t.bindTexture(Oe,ye),j(Oe),t.unbindTexture()}}},this.updateMultisampleRenderTarget=function ke(E){if(o&&E.samples>0&&!1===Ee(E)){const w=E.isWebGLMultipleRenderTargets?E.texture:[E.texture],V=E.width,oe=E.height;let he=16384;const _e=[],Oe=E.stencilBuffer?33306:36096,ye=i.get(E),J=!0===E.isWebGLMultipleRenderTargets;if(J)for(let De=0;De<w.length;De++)t.bindFramebuffer(36160,ye.__webglMultisampledFramebuffer),l.framebufferRenderbuffer(36160,36064+De,36161,null),t.bindFramebuffer(36160,ye.__webglFramebuffer),l.framebufferTexture2D(36009,36064+De,3553,null,0);t.bindFramebuffer(36008,ye.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,ye.__webglFramebuffer);for(let De=0;De<w.length;De++){_e.push(36064+De),E.depthBuffer&&_e.push(Oe);const Be=void 0!==ye.__ignoreDepthValues&&ye.__ignoreDepthValues;if(!1===Be&&(E.depthBuffer&&(he|=256),E.stencilBuffer&&(he|=1024)),J&&l.framebufferRenderbuffer(36008,36064,36161,ye.__webglColorRenderbuffer[De]),!0===Be&&(l.invalidateFramebuffer(36008,[Oe]),l.invalidateFramebuffer(36009,[Oe])),J){const we=i.get(w[De]).__webglTexture;l.framebufferTexture2D(36009,36064,3553,we,0)}l.blitFramebuffer(0,0,V,oe,0,0,V,oe,he,9728),m&&l.invalidateFramebuffer(36008,_e)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),J)for(let De=0;De<w.length;De++){t.bindFramebuffer(36160,ye.__webglMultisampledFramebuffer),l.framebufferRenderbuffer(36160,36064+De,36161,ye.__webglColorRenderbuffer[De]);const Be=i.get(w[De]).__webglTexture;t.bindFramebuffer(36160,ye.__webglFramebuffer),l.framebufferTexture2D(36009,36064+De,3553,Be,0)}t.bindFramebuffer(36009,ye.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=Q,this.setupFrameBufferTexture=ve,this.useMultisampledRTT=Ee}function gg(l,e,t){const i=t.isWebGL2;return{convert:function n(s,a=null){let o;if(s===nn)return 5121;if(s===ic)return 32819;if(s===nc)return 32820;if(s===Ql)return 5120;if(s===ec)return 5122;if(s===io)return 5123;if(s===tc)return 5124;if(s===rn)return 5125;if(s===Ui)return 5126;if(s===tr)return i?5131:(o=e.get("OES_texture_half_float"),null!==o?o.HALF_FLOAT_OES:null);if(s===rc)return 6406;if(s===Qt)return 6408;if(s===ac)return 6409;if(s===oc)return 6410;if(s===sn)return 6402;if(s===Tn)return 34041;if(s===sc)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(s===Us)return o=e.get("EXT_sRGB"),null!==o?o.SRGB_ALPHA_EXT:null;if(s===lc)return 6403;if(s===cc)return 36244;if(s===hc)return 33319;if(s===uc)return 33320;if(s===fc)return 36249;if(s===Fs||s===js||s===Bs||s===Is)if(a===ot){if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===o)return null;if(s===Fs)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===js)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Bs)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Is)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(o=e.get("WEBGL_compressed_texture_s3tc"),null===o)return null;if(s===Fs)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===js)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Bs)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Is)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(s===no||s===ro||s===so||s===ao){if(o=e.get("WEBGL_compressed_texture_pvrtc"),null===o)return null;if(s===no)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===ro)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===so)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===ao)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(s===dc)return o=e.get("WEBGL_compressed_texture_etc1"),null!==o?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===oo||s===lo){if(o=e.get("WEBGL_compressed_texture_etc"),null===o)return null;if(s===oo)return a===ot?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(s===lo)return a===ot?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}if(s===co||s===ho||s===uo||s===fo||s===po||s===Gs||s===qr||s===mo||s===go||s===vo||s===_o||s===yo||s===bo||s===Os){if(o=e.get("WEBGL_compressed_texture_astc"),null===o)return null;if(s===co)return a===ot?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===ho)return a===ot?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===uo)return a===ot?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===fo)return a===ot?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===po)return a===ot?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===Gs)return a===ot?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===qr)return a===ot?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===mo)return a===ot?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===go)return a===ot?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===vo)return a===ot?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===_o)return a===ot?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===yo)return a===ot?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===bo)return a===ot?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===Os)return a===ot?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}if(s===To){if(o=e.get("EXT_texture_compression_bptc"),null===o)return null;if(s===To)return a===ot?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT}return s===bn?i?34042:(o=e.get("WEBGL_depth_texture"),null!==o?o.UNSIGNED_INT_24_8_WEBGL:null):void 0!==l[s]?l[s]:null}}}class vg extends zt{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Tr extends st{constructor(){super(),this.isGroup=!0,this.type="Group"}}const _g={type:"move"};class Jo{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Tr,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Tr,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new D,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new D),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Tr,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new D,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new D),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,i){let n=null,s=null,a=null;const o=this._targetRay,c=this._grip,h=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(h&&e.hand){a=!0;for(const g of e.hand.values()){const v=t.getJointPose(g,i),x=this._getHandJoint(h,g);null!==v&&(x.matrix.fromArray(v.transform.matrix),x.matrix.decompose(x.position,x.rotation,x.scale),x.jointRadius=v.radius),x.visible=null!==v}const f=h.joints["index-finger-tip"].position.distanceTo(h.joints["thumb-tip"].position),m=.02,_=.005;h.inputState.pinching&&f>m+_?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&f<=m-_&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==c&&e.gripSpace&&(s=t.getPose(e.gripSpace,i),null!==s&&(c.matrix.fromArray(s.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),s.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(s.linearVelocity)):c.hasLinearVelocity=!1,s.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(s.angularVelocity)):c.hasAngularVelocity=!1));null!==o&&(n=t.getPose(e.targetRaySpace,i),null===n&&null!==s&&(n=s),null!==n&&(o.matrix.fromArray(n.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),n.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(n.linearVelocity)):o.hasLinearVelocity=!1,n.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(n.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(_g)))}return null!==o&&(o.visible=null!==n),null!==c&&(c.visible=null!==s),null!==h&&(h.visible=null!==a),this}_getHandJoint(e,t){if(void 0===e.joints[t.jointName]){const i=new Tr;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}class yg extends Ri{constructor(e,t,i,n,s,a,o,c,h,u){if((u=void 0!==u?u:sn)!==sn&&u!==Tn)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&u===sn&&(i=rn),void 0===i&&u===Tn&&(i=bn),super(null,n,s,a,o,c,u,i,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==o?o:mt,this.minFilter=void 0!==c?c:mt,this.flipY=!1,this.generateMipmaps=!1}}class bg extends ln{constructor(e,t){super();const i=this;let n=null,s=1,a=null,o="local-floor",c=null,h=null,u=null,d=null,f=null,m=null;const _=t.getContextAttributes();let g=null,v=null;const x=[],R=[],T=new Set,M=new Map,P=new zt;P.layers.enable(1),P.viewport=new et;const L=new zt;L.layers.enable(2),L.viewport=new et;const j=[P,L],S=new vg;S.layers.enable(1),S.layers.enable(2);let A=null,B=null;function U(H){const W=R.indexOf(H.inputSource);if(-1===W)return;const ue=x[W];void 0!==ue&&ue.dispatchEvent({type:H.type,data:H.inputSource})}function ee(){n.removeEventListener("select",U),n.removeEventListener("selectstart",U),n.removeEventListener("selectend",U),n.removeEventListener("squeeze",U),n.removeEventListener("squeezestart",U),n.removeEventListener("squeezeend",U),n.removeEventListener("end",ee),n.removeEventListener("inputsourceschange",z);for(let H=0;H<x.length;H++){const W=R[H];null!==W&&(R[H]=null,x[H].disconnect(W))}A=null,B=null,e.setRenderTarget(g),f=null,d=null,u=null,n=null,v=null,re.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}function z(H){for(let W=0;W<H.removed.length;W++){const ue=H.removed[W],ce=R.indexOf(ue);ce>=0&&(R[ce]=null,x[ce].disconnect(ue))}for(let W=0;W<H.added.length;W++){const ue=H.added[W];let ce=R.indexOf(ue);if(-1===ce){for(let Z=0;Z<x.length;Z++){if(Z>=R.length){R.push(ue),ce=Z;break}if(null===R[Z]){R[Z]=ue,ce=Z;break}}if(-1===ce)break}const ge=x[ce];ge&&ge.connect(ue)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(H){let W=x[H];return void 0===W&&(W=new Jo,x[H]=W),W.getTargetRaySpace()},this.getControllerGrip=function(H){let W=x[H];return void 0===W&&(W=new Jo,x[H]=W),W.getGripSpace()},this.getHand=function(H){let W=x[H];return void 0===W&&(W=new Jo,x[H]=W),W.getHandSpace()},this.setFramebufferScaleFactor=function(H){s=H,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(H){o=H,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||a},this.setReferenceSpace=function(H){c=H},this.getBaseLayer=function(){return null!==d?d:f},this.getBinding=function(){return u},this.getFrame=function(){return m},this.getSession=function(){return n},this.setSession=function(){var H=(0,F.Z)(function*(W){if(n=W,null!==n){if(g=e.getRenderTarget(),n.addEventListener("select",U),n.addEventListener("selectstart",U),n.addEventListener("selectend",U),n.addEventListener("squeeze",U),n.addEventListener("squeezestart",U),n.addEventListener("squeezeend",U),n.addEventListener("end",ee),n.addEventListener("inputsourceschange",z),!0!==_.xrCompatible&&(yield t.makeXRCompatible()),void 0===n.renderState.layers||!1===e.capabilities.isWebGL2)f=new XRWebGLLayer(n,t,{antialias:void 0!==n.renderState.layers||_.antialias,alpha:_.alpha,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:s}),n.updateRenderState({baseLayer:f}),v=new Hi(f.framebufferWidth,f.framebufferHeight,{format:Qt,type:nn,encoding:e.outputEncoding,stencilBuffer:_.stencil});else{let ue=null,ce=null,ge=null;_.depth&&(ge=_.stencil?35056:33190,ue=_.stencil?Tn:sn,ce=_.stencil?bn:rn);const Z={colorFormat:32856,depthFormat:ge,scaleFactor:s};u=new XRWebGLBinding(n,t),d=u.createProjectionLayer(Z),n.updateRenderState({layers:[d]}),v=new Hi(d.textureWidth,d.textureHeight,{format:Qt,type:nn,depthTexture:new yg(d.textureWidth,d.textureHeight,ce,void 0,void 0,void 0,void 0,void 0,void 0,ue),stencilBuffer:_.stencil,encoding:e.outputEncoding,samples:_.antialias?4:0}),e.properties.get(v).__ignoreDepthValues=d.ignoreDepthValues}v.isXRRenderTarget=!0,this.setFoveation(1),c=null,a=yield n.requestReferenceSpace(o),re.setContext(n),re.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}});return function(W){return H.apply(this,arguments)}}();const G=new D,X=new D;function ae(H,W){null===W?H.matrixWorld.copy(H.matrix):H.matrixWorld.multiplyMatrices(W.matrixWorld,H.matrix),H.matrixWorldInverse.copy(H.matrixWorld).invert()}this.updateCamera=function(H){if(null===n)return;S.near=L.near=P.near=H.near,S.far=L.far=P.far=H.far,(A!==S.near||B!==S.far)&&(n.updateRenderState({depthNear:S.near,depthFar:S.far}),A=S.near,B=S.far);const W=H.parent,ue=S.cameras;ae(S,W);for(let ge=0;ge<ue.length;ge++)ae(ue[ge],W);S.matrixWorld.decompose(S.position,S.quaternion,S.scale),H.matrix.copy(S.matrix),H.matrix.decompose(H.position,H.quaternion,H.scale);const ce=H.children;for(let ge=0,Z=ce.length;ge<Z;ge++)ce[ge].updateMatrixWorld(!0);2===ue.length?function ne(H,W,ue){G.setFromMatrixPosition(W.matrixWorld),X.setFromMatrixPosition(ue.matrixWorld);const ce=G.distanceTo(X),ge=W.projectionMatrix.elements,Z=ue.projectionMatrix.elements,Ge=ge[14]/(ge[10]-1),xe=ge[14]/(ge[10]+1),Ie=(ge[9]+1)/ge[5],ve=(ge[9]-1)/ge[5],He=(ge[8]-1)/ge[0],te=(Z[8]+1)/Z[0],Q=Ge*He,fe=Ge*te,Re=ce/(-He+te),me=Re*-He;W.matrixWorld.decompose(H.position,H.quaternion,H.scale),H.translateX(me),H.translateZ(Re),H.matrixWorld.compose(H.position,H.quaternion,H.scale),H.matrixWorldInverse.copy(H.matrixWorld).invert();const ke=Ge+Re,Fe=xe+Re;H.projectionMatrix.makePerspective(Q-me,fe+(ce-me),Ie*xe/Fe*ke,ve*xe/Fe*ke,ke,Fe)}(S,P,L):S.projectionMatrix.copy(P.projectionMatrix)},this.getCamera=function(){return S},this.getFoveation=function(){return null!==d?d.fixedFoveation:null!==f?f.fixedFoveation:void 0},this.setFoveation=function(H){null!==d&&(d.fixedFoveation=H),null!==f&&void 0!==f.fixedFoveation&&(f.fixedFoveation=H)},this.getPlanes=function(){return T};let K=null;const re=new Xc;re.setAnimationLoop(function le(H,W){if(h=W.getViewerPose(c||a),m=W,null!==h){const ue=h.views;null!==f&&(e.setRenderTargetFramebuffer(v,f.framebuffer),e.setRenderTarget(v));let ce=!1;ue.length!==S.cameras.length&&(S.cameras.length=0,ce=!0);for(let ge=0;ge<ue.length;ge++){const Z=ue[ge];let Ge=null;if(null!==f)Ge=f.getViewport(Z);else{const Ie=u.getViewSubImage(d,Z);Ge=Ie.viewport,0===ge&&(e.setRenderTargetTextures(v,Ie.colorTexture,d.ignoreDepthValues?void 0:Ie.depthStencilTexture),e.setRenderTarget(v))}let xe=j[ge];void 0===xe&&(xe=new zt,xe.layers.enable(ge),xe.viewport=new et,j[ge]=xe),xe.matrix.fromArray(Z.transform.matrix),xe.projectionMatrix.fromArray(Z.projectionMatrix),xe.viewport.set(Ge.x,Ge.y,Ge.width,Ge.height),0===ge&&S.matrix.copy(xe.matrix),!0===ce&&S.cameras.push(xe)}}for(let ue=0;ue<x.length;ue++){const ce=R[ue],ge=x[ue];null!==ce&&void 0!==ge&&ge.update(ce,W,c||a)}if(K&&K(H,W),W.detectedPlanes){i.dispatchEvent({type:"planesdetected",data:W.detectedPlanes});let ue=null;for(const ce of T)W.detectedPlanes.has(ce)||(null===ue&&(ue=[]),ue.push(ce));if(null!==ue)for(const ce of ue)T.delete(ce),M.delete(ce),i.dispatchEvent({type:"planeremoved",data:ce});for(const ce of W.detectedPlanes)if(T.has(ce)){const ge=M.get(ce);ce.lastChangedTime>ge&&(M.set(ce,ce.lastChangedTime),i.dispatchEvent({type:"planechanged",data:ce}))}else T.add(ce),M.set(ce,W.lastChangedTime),i.dispatchEvent({type:"planeadded",data:ce})}m=null}),this.setAnimationLoop=function(H){K=H},this.dispose=function(){}}}function Tg(l,e){function n(g,v){g.opacity.value=v.opacity,v.color&&g.diffuse.value.copy(v.color),v.emissive&&g.emissive.value.copy(v.emissive).multiplyScalar(v.emissiveIntensity),v.map&&(g.map.value=v.map),v.alphaMap&&(g.alphaMap.value=v.alphaMap),v.bumpMap&&(g.bumpMap.value=v.bumpMap,g.bumpScale.value=v.bumpScale,v.side===qt&&(g.bumpScale.value*=-1)),v.displacementMap&&(g.displacementMap.value=v.displacementMap,g.displacementScale.value=v.displacementScale,g.displacementBias.value=v.displacementBias),v.emissiveMap&&(g.emissiveMap.value=v.emissiveMap),v.normalMap&&(g.normalMap.value=v.normalMap,g.normalScale.value.copy(v.normalScale),v.side===qt&&g.normalScale.value.negate()),v.specularMap&&(g.specularMap.value=v.specularMap),v.alphaTest>0&&(g.alphaTest.value=v.alphaTest);const x=e.get(v).envMap;if(x&&(g.envMap.value=x,g.flipEnvMap.value=x.isCubeTexture&&!1===x.isRenderTargetTexture?-1:1,g.reflectivity.value=v.reflectivity,g.ior.value=v.ior,g.refractionRatio.value=v.refractionRatio),v.lightMap){g.lightMap.value=v.lightMap;const M=!0!==l.physicallyCorrectLights?Math.PI:1;g.lightMapIntensity.value=v.lightMapIntensity*M}let R,T;v.aoMap&&(g.aoMap.value=v.aoMap,g.aoMapIntensity.value=v.aoMapIntensity),v.map?R=v.map:v.specularMap?R=v.specularMap:v.displacementMap?R=v.displacementMap:v.normalMap?R=v.normalMap:v.bumpMap?R=v.bumpMap:v.roughnessMap?R=v.roughnessMap:v.metalnessMap?R=v.metalnessMap:v.alphaMap?R=v.alphaMap:v.emissiveMap?R=v.emissiveMap:v.clearcoatMap?R=v.clearcoatMap:v.clearcoatNormalMap?R=v.clearcoatNormalMap:v.clearcoatRoughnessMap?R=v.clearcoatRoughnessMap:v.iridescenceMap?R=v.iridescenceMap:v.iridescenceThicknessMap?R=v.iridescenceThicknessMap:v.specularIntensityMap?R=v.specularIntensityMap:v.specularColorMap?R=v.specularColorMap:v.transmissionMap?R=v.transmissionMap:v.thicknessMap?R=v.thicknessMap:v.sheenColorMap?R=v.sheenColorMap:v.sheenRoughnessMap&&(R=v.sheenRoughnessMap),void 0!==R&&(R.isWebGLRenderTarget&&(R=R.texture),!0===R.matrixAutoUpdate&&R.updateMatrix(),g.uvTransform.value.copy(R.matrix)),v.aoMap?T=v.aoMap:v.lightMap&&(T=v.lightMap),void 0!==T&&(T.isWebGLRenderTarget&&(T=T.texture),!0===T.matrixAutoUpdate&&T.updateMatrix(),g.uv2Transform.value.copy(T.matrix))}return{refreshFogUniforms:function t(g,v){v.color.getRGB(g.fogColor.value,Hc(l)),v.isFog?(g.fogNear.value=v.near,g.fogFar.value=v.far):v.isFogExp2&&(g.fogDensity.value=v.density)},refreshMaterialUniforms:function i(g,v,x,R,T){v.isMeshBasicMaterial||v.isMeshLambertMaterial?n(g,v):v.isMeshToonMaterial?(n(g,v),function u(g,v){v.gradientMap&&(g.gradientMap.value=v.gradientMap)}(g,v)):v.isMeshPhongMaterial?(n(g,v),function h(g,v){g.specular.value.copy(v.specular),g.shininess.value=Math.max(v.shininess,1e-4)}(g,v)):v.isMeshStandardMaterial?(n(g,v),function d(g,v){g.roughness.value=v.roughness,g.metalness.value=v.metalness,v.roughnessMap&&(g.roughnessMap.value=v.roughnessMap),v.metalnessMap&&(g.metalnessMap.value=v.metalnessMap),e.get(v).envMap&&(g.envMapIntensity.value=v.envMapIntensity)}(g,v),v.isMeshPhysicalMaterial&&function f(g,v,x){g.ior.value=v.ior,v.sheen>0&&(g.sheenColor.value.copy(v.sheenColor).multiplyScalar(v.sheen),g.sheenRoughness.value=v.sheenRoughness,v.sheenColorMap&&(g.sheenColorMap.value=v.sheenColorMap),v.sheenRoughnessMap&&(g.sheenRoughnessMap.value=v.sheenRoughnessMap)),v.clearcoat>0&&(g.clearcoat.value=v.clearcoat,g.clearcoatRoughness.value=v.clearcoatRoughness,v.clearcoatMap&&(g.clearcoatMap.value=v.clearcoatMap),v.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=v.clearcoatRoughnessMap),v.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(v.clearcoatNormalScale),g.clearcoatNormalMap.value=v.clearcoatNormalMap,v.side===qt&&g.clearcoatNormalScale.value.negate())),v.iridescence>0&&(g.iridescence.value=v.iridescence,g.iridescenceIOR.value=v.iridescenceIOR,g.iridescenceThicknessMinimum.value=v.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=v.iridescenceThicknessRange[1],v.iridescenceMap&&(g.iridescenceMap.value=v.iridescenceMap),v.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=v.iridescenceThicknessMap)),v.transmission>0&&(g.transmission.value=v.transmission,g.transmissionSamplerMap.value=x.texture,g.transmissionSamplerSize.value.set(x.width,x.height),v.transmissionMap&&(g.transmissionMap.value=v.transmissionMap),g.thickness.value=v.thickness,v.thicknessMap&&(g.thicknessMap.value=v.thicknessMap),g.attenuationDistance.value=v.attenuationDistance,g.attenuationColor.value.copy(v.attenuationColor)),g.specularIntensity.value=v.specularIntensity,g.specularColor.value.copy(v.specularColor),v.specularIntensityMap&&(g.specularIntensityMap.value=v.specularIntensityMap),v.specularColorMap&&(g.specularColorMap.value=v.specularColorMap)}(g,v,T)):v.isMeshMatcapMaterial?(n(g,v),function m(g,v){v.matcap&&(g.matcap.value=v.matcap)}(g,v)):v.isMeshDepthMaterial?n(g,v):v.isMeshDistanceMaterial?(n(g,v),function _(g,v){g.referencePosition.value.copy(v.referencePosition),g.nearDistance.value=v.nearDistance,g.farDistance.value=v.farDistance}(g,v)):v.isMeshNormalMaterial?n(g,v):v.isLineBasicMaterial?(function s(g,v){g.diffuse.value.copy(v.color),g.opacity.value=v.opacity}(g,v),v.isLineDashedMaterial&&function a(g,v){g.dashSize.value=v.dashSize,g.totalSize.value=v.dashSize+v.gapSize,g.scale.value=v.scale}(g,v)):v.isPointsMaterial?function o(g,v,x,R){let T;g.diffuse.value.copy(v.color),g.opacity.value=v.opacity,g.size.value=v.size*x,g.scale.value=.5*R,v.map&&(g.map.value=v.map),v.alphaMap&&(g.alphaMap.value=v.alphaMap),v.alphaTest>0&&(g.alphaTest.value=v.alphaTest),v.map?T=v.map:v.alphaMap&&(T=v.alphaMap),void 0!==T&&(!0===T.matrixAutoUpdate&&T.updateMatrix(),g.uvTransform.value.copy(T.matrix))}(g,v,x,R):v.isSpriteMaterial?function c(g,v){let x;g.diffuse.value.copy(v.color),g.opacity.value=v.opacity,g.rotation.value=v.rotation,v.map&&(g.map.value=v.map),v.alphaMap&&(g.alphaMap.value=v.alphaMap),v.alphaTest>0&&(g.alphaTest.value=v.alphaTest),v.map?x=v.map:v.alphaMap&&(x=v.alphaMap),void 0!==x&&(!0===x.matrixAutoUpdate&&x.updateMatrix(),g.uvTransform.value.copy(x.matrix))}(g,v):v.isShadowMaterial?(g.color.value.copy(v.color),g.opacity.value=v.opacity):v.isShaderMaterial&&(v.uniformsNeedUpdate=!1)}}}function xg(l,e,t,i){let n={},s={},a=[];const o=t.isWebGL2?l.getParameter(35375):0;function m(R,T,M){const P=R.value;if(void 0===M[T]){if("number"==typeof P)M[T]=P;else{const L=Array.isArray(P)?P:[P],j=[];for(let S=0;S<L.length;S++)j.push(L[S].clone());M[T]=j}return!0}if("number"==typeof P){if(M[T]!==P)return M[T]=P,!0}else{const L=Array.isArray(M[T])?M[T]:[M[T]],j=Array.isArray(P)?P:[P];for(let S=0;S<L.length;S++){const A=L[S];if(!1===A.equals(j[S]))return A.copy(j[S]),!0}}return!1}function g(R){const T={boundary:0,storage:0};return"number"==typeof R?(T.boundary=4,T.storage=4):R.isVector2?(T.boundary=8,T.storage=8):R.isVector3||R.isColor?(T.boundary=16,T.storage=12):R.isVector4?(T.boundary=16,T.storage=16):R.isMatrix3?(T.boundary=48,T.storage=48):R.isMatrix4?(T.boundary=64,T.storage=64):R.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",R),T}function v(R){const T=R.target;T.removeEventListener("dispose",v);const M=a.indexOf(T.__bindingPointIndex);a.splice(M,1),l.deleteBuffer(n[T.id]),delete n[T.id],delete s[T.id]}return{bind:function c(R,T){i.uniformBlockBinding(R,T.program)},update:function h(R,T){let M=n[R.id];void 0===M&&(function _(R){const T=R.uniforms;let M=0;let L=0;for(let j=0,S=T.length;j<S;j++){const A=T[j],B={boundary:0,storage:0},U=Array.isArray(A.value)?A.value:[A.value];for(let ee=0,z=U.length;ee<z;ee++){const X=g(U[ee]);B.boundary+=X.boundary,B.storage+=X.storage}A.__data=new Float32Array(B.storage/Float32Array.BYTES_PER_ELEMENT),A.__offset=M,j>0&&(L=M%16,0!==L&&16-L-B.boundary<0&&(M+=16-L,A.__offset=M)),M+=B.storage}L=M%16,L>0&&(M+=16-L),R.__size=M,R.__cache={}}(R),M=function u(R){const T=function d(){for(let R=0;R<o;R++)if(-1===a.indexOf(R))return a.push(R),R;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();R.__bindingPointIndex=T;const M=l.createBuffer(),P=R.__size,L=R.usage;return l.bindBuffer(35345,M),l.bufferData(35345,P,L),l.bindBuffer(35345,null),l.bindBufferBase(35345,T,M),M}(R),n[R.id]=M,R.addEventListener("dispose",v)),i.updateUBOMapping(R,T.program);const L=e.render.frame;s[R.id]!==L&&(function f(R){const M=R.uniforms,P=R.__cache;l.bindBuffer(35345,n[R.id]);for(let L=0,j=M.length;L<j;L++){const S=M[L];if(!0===m(S,L,P)){const A=S.__offset,B=Array.isArray(S.value)?S.value:[S.value];let U=0;for(let ee=0;ee<B.length;ee++){const z=B[ee],G=g(z);"number"==typeof z?(S.__data[0]=z,l.bufferSubData(35345,A+U,S.__data)):z.isMatrix3?(S.__data[0]=z.elements[0],S.__data[1]=z.elements[1],S.__data[2]=z.elements[2],S.__data[3]=z.elements[0],S.__data[4]=z.elements[3],S.__data[5]=z.elements[4],S.__data[6]=z.elements[5],S.__data[7]=z.elements[0],S.__data[8]=z.elements[6],S.__data[9]=z.elements[7],S.__data[10]=z.elements[8],S.__data[11]=z.elements[0]):(z.toArray(S.__data,U),U+=G.storage/Float32Array.BYTES_PER_ELEMENT)}l.bufferSubData(35345,A,S.__data)}}l.bindBuffer(35345,null)}(R),s[R.id]=L)},dispose:function x(){for(const R in n)l.deleteBuffer(n[R]);a=[],n={},s={}}}}function bh(l={}){this.isWebGLRenderer=!0;const e=void 0!==l.canvas?l.canvas:function Mg(){const l=sr("canvas");return l.style.display="block",l}(),t=void 0!==l.context?l.context:null,i=void 0===l.depth||l.depth,n=void 0===l.stencil||l.stencil,s=void 0!==l.antialias&&l.antialias,a=void 0===l.premultipliedAlpha||l.premultipliedAlpha,o=void 0!==l.preserveDrawingBuffer&&l.preserveDrawingBuffer,c=void 0!==l.powerPreference?l.powerPreference:"default",h=void 0!==l.failIfMajorPerformanceCaveat&&l.failIfMajorPerformanceCaveat;let u;u=null!==t?t.getContextAttributes().alpha:void 0!==l.alpha&&l.alpha;let d=null,f=null;const m=[],_=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=an,this.physicallyCorrectLights=!1,this.toneMapping=di,this.toneMappingExposure=1;const g=this;let v=!1,x=0,R=0,T=null,M=-1,P=null;const L=new et,j=new et;let S=null,A=e.width,B=e.height,U=1,ee=null,z=null;const G=new et(0,0,A,B),X=new et(0,0,A,B);let ne=!1;const ae=new Ho;let K=!1,le=!1,re=null;const H=new ze,W=new ie,ue=new D,ce={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ge(){return null===T?U:1}let xe,Ie,ve,He,te,Q,fe,Re,me,ke,Fe,Ee,ht,nt,E,w,V,oe,he,_e,Oe,ye,J,De,Z=t;function Ge(C,k){for(let Y=0;Y<C.length;Y++){const $=e.getContext(C[Y],k);if(null!==$)return $}return null}try{const C={alpha:!0,depth:i,stencil:n,antialias:s,premultipliedAlpha:a,preserveDrawingBuffer:o,powerPreference:c,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Se}`),e.addEventListener("webglcontextlost",je,!1),e.addEventListener("webglcontextrestored",Le,!1),e.addEventListener("webglcontextcreationerror",Ke,!1),null===Z){const k=["webgl2","webgl","experimental-webgl"];if(!0===g.isWebGL1Renderer&&k.shift(),Z=Ge(k,C),null===Z)throw Ge(k)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===Z.getShaderPrecisionFormat&&(Z.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}function Be(){xe=new Ip(Z),Ie=new Lp(Z,xe,l),xe.init(Ie),ye=new gg(Z,xe,Ie),ve=new pg(Z,xe,Ie),He=new zp,te=new ig,Q=new mg(Z,xe,ve,te,Ie,ye,He),fe=new Ep(g),Re=new Bp(g),me=new Cf(Z,Ie),J=new Cp(Z,xe,me,Ie),ke=new Gp(Z,me,He,J),Fe=new Vp(Z,ke,me,He),he=new Up(Z,Ie,Q),w=new Ap(te),Ee=new tg(g,fe,Re,xe,Ie,J,w),ht=new Tg(g,te),nt=new rg,E=new hg(xe,Ie),oe=new Pp(g,fe,Re,ve,Fe,u,a),V=new dg(g,Fe,Ie),De=new xg(Z,He,Ie,ve),_e=new Dp(Z,xe,He,Ie),Oe=new Op(Z,xe,He,Ie),He.programs=Ee.programs,g.capabilities=Ie,g.extensions=xe,g.properties=te,g.renderLists=nt,g.shadowMap=V,g.state=ve,g.info=He}Be();const we=new bg(g,Z);function je(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),v=!0}function Le(){console.log("THREE.WebGLRenderer: Context Restored."),v=!1;const C=He.autoReset,k=V.enabled,Y=V.autoUpdate,O=V.needsUpdate,$=V.type;Be(),He.autoReset=C,V.enabled=k,V.autoUpdate=Y,V.needsUpdate=O,V.type=$}function Ke(C){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",C.statusMessage)}function ut(C){const k=C.target;k.removeEventListener("dispose",ut),function jt(C){(function I(C){const k=te.get(C).programs;void 0!==k&&(k.forEach(function(Y){Ee.releaseProgram(Y)}),C.isShaderMaterial&&Ee.releaseShaderCache(C))})(C),te.remove(C)}(k)}this.xr=we,this.getContext=function(){return Z},this.getContextAttributes=function(){return Z.getContextAttributes()},this.forceContextLoss=function(){const C=xe.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=xe.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return U},this.setPixelRatio=function(C){void 0!==C&&(U=C,this.setSize(A,B,!1))},this.getSize=function(C){return C.set(A,B)},this.setSize=function(C,k,Y){we.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(A=C,B=k,e.width=Math.floor(C*U),e.height=Math.floor(k*U),!1!==Y&&(e.style.width=C+"px",e.style.height=k+"px"),this.setViewport(0,0,C,k))},this.getDrawingBufferSize=function(C){return C.set(A*U,B*U).floor()},this.setDrawingBufferSize=function(C,k,Y){A=C,B=k,U=Y,e.width=Math.floor(C*Y),e.height=Math.floor(k*Y),this.setViewport(0,0,C,k)},this.getCurrentViewport=function(C){return C.copy(L)},this.getViewport=function(C){return C.copy(G)},this.setViewport=function(C,k,Y,O){C.isVector4?G.set(C.x,C.y,C.z,C.w):G.set(C,k,Y,O),ve.viewport(L.copy(G).multiplyScalar(U).floor())},this.getScissor=function(C){return C.copy(X)},this.setScissor=function(C,k,Y,O){C.isVector4?X.set(C.x,C.y,C.z,C.w):X.set(C,k,Y,O),ve.scissor(j.copy(X).multiplyScalar(U).floor())},this.getScissorTest=function(){return ne},this.setScissorTest=function(C){ve.setScissorTest(ne=C)},this.setOpaqueSort=function(C){ee=C},this.setTransparentSort=function(C){z=C},this.getClearColor=function(C){return C.copy(oe.getClearColor())},this.setClearColor=function(){oe.setClearColor.apply(oe,arguments)},this.getClearAlpha=function(){return oe.getClearAlpha()},this.setClearAlpha=function(){oe.setClearAlpha.apply(oe,arguments)},this.clear=function(C=!0,k=!0,Y=!0){let O=0;C&&(O|=16384),k&&(O|=256),Y&&(O|=1024),Z.clear(O)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",je,!1),e.removeEventListener("webglcontextrestored",Le,!1),e.removeEventListener("webglcontextcreationerror",Ke,!1),nt.dispose(),E.dispose(),te.dispose(),fe.dispose(),Re.dispose(),Fe.dispose(),J.dispose(),De.dispose(),Ee.dispose(),we.dispose(),we.removeEventListener("sessionstart",Te),we.removeEventListener("sessionend",Ce),re&&(re.dispose(),re=null),it.stop()},this.renderBufferDirect=function(C,k,Y,O,$,Ae){null===k&&(k=ce);const Ne=$.isMesh&&$.matrixWorld.determinant()<0,We=function m_(C,k,Y,O,$){!0!==k.isScene&&(k=ce),Q.resetTextureUnits();const Ae=k.fog,We=null===T?g.outputEncoding:!0===T.isXRRenderTarget?T.texture.encoding:an,Xe=(O.isMeshStandardMaterial?Re:fe).get(O.envMap||(O.isMeshStandardMaterial?k.environment:null)),Qe=!0===O.vertexColors&&!!Y.attributes.color&&4===Y.attributes.color.itemSize,Ye=!!O.normalMap&&!!Y.attributes.tangent,Ze=!!Y.morphAttributes.position,Pt=!!Y.morphAttributes.normal,ci=!!Y.morphAttributes.color,Qi=O.toneMapped?g.toneMapping:di,Wn=Y.morphAttributes.position||Y.morphAttributes.normal||Y.morphAttributes.color,Ct=void 0!==Wn?Wn.length:0,$e=te.get(O),Gl=f.state.lights;!0!==K||!0!==le&&C===P||w.setState(O,C,C===P&&O.id===M);let It=!1;O.version===$e.__version?($e.needsLights&&$e.lightsStateVersion!==Gl.state.version||$e.outputEncoding!==We||$.isInstancedMesh&&!1===$e.instancing||!$.isInstancedMesh&&!0===$e.instancing||$.isSkinnedMesh&&!1===$e.skinning||!$.isSkinnedMesh&&!0===$e.skinning||$e.envMap!==Xe||!0===O.fog&&$e.fog!==Ae||void 0!==$e.numClippingPlanes&&($e.numClippingPlanes!==w.numPlanes||$e.numIntersection!==w.numIntersection)||$e.vertexAlphas!==Qe||$e.vertexTangents!==Ye||$e.morphTargets!==Ze||$e.morphNormals!==Pt||$e.morphColors!==ci||$e.toneMapping!==Qi||!0===Ie.isWebGL2&&$e.morphTargetsCount!==Ct)&&(It=!0):(It=!0,$e.__version=O.version);let Xn=$e.currentProgram;!0===It&&(Xn=yi(O,k,$));let Nu=!1,Cs=!1,Ol=!1;const Kt=Xn.getUniforms(),qn=$e.uniforms;if(ve.useProgram(Xn.program)&&(Nu=!0,Cs=!0,Ol=!0),O.id!==M&&(M=O.id,Cs=!0),Nu||P!==C){if(Kt.setValue(Z,"projectionMatrix",C.projectionMatrix),Ie.logarithmicDepthBuffer&&Kt.setValue(Z,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),P!==C&&(P=C,Cs=!0,Ol=!0),O.isShaderMaterial||O.isMeshPhongMaterial||O.isMeshToonMaterial||O.isMeshStandardMaterial||O.envMap){const hi=Kt.map.cameraPosition;void 0!==hi&&hi.setValue(Z,ue.setFromMatrixPosition(C.matrixWorld))}(O.isMeshPhongMaterial||O.isMeshToonMaterial||O.isMeshLambertMaterial||O.isMeshBasicMaterial||O.isMeshStandardMaterial||O.isShaderMaterial)&&Kt.setValue(Z,"isOrthographic",!0===C.isOrthographicCamera),(O.isMeshPhongMaterial||O.isMeshToonMaterial||O.isMeshLambertMaterial||O.isMeshBasicMaterial||O.isMeshStandardMaterial||O.isShaderMaterial||O.isShadowMaterial||$.isSkinnedMesh)&&Kt.setValue(Z,"viewMatrix",C.matrixWorldInverse)}if($.isSkinnedMesh){Kt.setOptional(Z,$,"bindMatrix"),Kt.setOptional(Z,$,"bindMatrixInverse");const hi=$.skeleton;hi&&(Ie.floatVertexTextures?(null===hi.boneTexture&&hi.computeBoneTexture(),Kt.setValue(Z,"boneTexture",hi.boneTexture,Q),Kt.setValue(Z,"boneTextureSize",hi.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const zl=Y.morphAttributes;if((void 0!==zl.position||void 0!==zl.normal||void 0!==zl.color&&!0===Ie.isWebGL2)&&he.update($,Y,O,Xn),(Cs||$e.receiveShadow!==$.receiveShadow)&&($e.receiveShadow=$.receiveShadow,Kt.setValue(Z,"receiveShadow",$.receiveShadow)),O.isMeshGouraudMaterial&&null!==O.envMap&&(qn.envMap.value=Xe,qn.flipEnvMap.value=Xe.isCubeTexture&&!1===Xe.isRenderTargetTexture?-1:1),Cs&&(Kt.setValue(Z,"toneMappingExposure",g.toneMappingExposure),$e.needsLights&&function g_(C,k){C.ambientLightColor.needsUpdate=k,C.lightProbe.needsUpdate=k,C.directionalLights.needsUpdate=k,C.directionalLightShadows.needsUpdate=k,C.pointLights.needsUpdate=k,C.pointLightShadows.needsUpdate=k,C.spotLights.needsUpdate=k,C.spotLightShadows.needsUpdate=k,C.rectAreaLights.needsUpdate=k,C.hemisphereLights.needsUpdate=k}(qn,Ol),Ae&&!0===O.fog&&ht.refreshFogUniforms(qn,Ae),ht.refreshMaterialUniforms(qn,O,U,B,re),pa.upload(Z,$e.uniformsList,qn,Q)),O.isShaderMaterial&&!0===O.uniformsNeedUpdate&&(pa.upload(Z,$e.uniformsList,qn,Q),O.uniformsNeedUpdate=!1),O.isSpriteMaterial&&Kt.setValue(Z,"center",$.center),Kt.setValue(Z,"modelViewMatrix",$.modelViewMatrix),Kt.setValue(Z,"normalMatrix",$.normalMatrix),Kt.setValue(Z,"modelMatrix",$.matrixWorld),O.isShaderMaterial||O.isRawShaderMaterial){const hi=O.uniformsGroups;for(let kl=0,__=hi.length;kl<__;kl++)if(Ie.isWebGL2){const Uu=hi[kl];De.update(Uu,Xn),De.bind(Uu,Xn)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Xn}(C,k,Y,O,$);ve.setMaterial(O,Ne);let Xe=Y.index,Qe=1;!0===O.wireframe&&(Xe=ke.getWireframeAttribute(Y),Qe=2);const Ye=Y.drawRange,Ze=Y.attributes.position;let Pt=Ye.start*Qe,ci=(Ye.start+Ye.count)*Qe;null!==Ae&&(Pt=Math.max(Pt,Ae.start*Qe),ci=Math.min(ci,(Ae.start+Ae.count)*Qe)),null!==Xe?(Pt=Math.max(Pt,0),ci=Math.min(ci,Xe.count)):null!=Ze&&(Pt=Math.max(Pt,0),ci=Math.min(ci,Ze.count));const Qi=ci-Pt;if(Qi<0||Qi===1/0)return;J.setup($,O,We,Y,Xe);let Wn,Ct=_e;if(null!==Xe&&(Wn=me.get(Xe),Ct=Oe,Ct.setIndex(Wn)),$.isMesh)!0===O.wireframe?(ve.setLineWidth(O.wireframeLinewidth*ge()),Ct.setMode(1)):Ct.setMode(4);else if($.isLine){let $e=O.linewidth;void 0===$e&&($e=1),ve.setLineWidth($e*ge()),Ct.setMode($.isLineSegments?1:$.isLineLoop?2:3)}else $.isPoints?Ct.setMode(0):$.isSprite&&Ct.setMode(4);if($.isInstancedMesh)Ct.renderInstances(Pt,Qi,$.count);else if(Y.isInstancedBufferGeometry){const Gl=Math.min(Y.instanceCount,void 0!==Y._maxInstanceCount?Y._maxInstanceCount:1/0);Ct.renderInstances(Pt,Qi,Gl)}else Ct.render(Pt,Qi)},this.compile=function(C,k){function Y(O,$,Ae){!0===O.transparent&&O.side===Zn?(O.side=qt,O.needsUpdate=!0,yi(O,$,Ae),O.side=fi,O.needsUpdate=!0,yi(O,$,Ae),O.side=Zn):yi(O,$,Ae)}f=E.get(C),f.init(),_.push(f),C.traverseVisible(function(O){O.isLight&&O.layers.test(k.layers)&&(f.pushLight(O),O.castShadow&&f.pushShadow(O))}),f.setupLights(g.physicallyCorrectLights),C.traverse(function(O){const $=O.material;if($)if(Array.isArray($))for(let Ae=0;Ae<$.length;Ae++)Y($[Ae],C,O);else Y($,C,O)}),_.pop(),f=null};let q=null;function Te(){it.stop()}function Ce(){it.start()}const it=new Xc;function Bt(C,k,Y,O){if(!1===C.visible)return;if(C.layers.test(k.layers))if(C.isGroup)Y=C.renderOrder;else if(C.isLOD)!0===C.autoUpdate&&C.update(k);else if(C.isLight)f.pushLight(C),C.castShadow&&f.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||ae.intersectsSprite(C)){O&&ue.setFromMatrixPosition(C.matrixWorld).applyMatrix4(H);const Ne=Fe.update(C),We=C.material;We.visible&&d.push(C,Ne,We,Y,ue.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(C.isSkinnedMesh&&C.skeleton.frame!==He.render.frame&&(C.skeleton.update(),C.skeleton.frame=He.render.frame),!C.frustumCulled||ae.intersectsObject(C))){O&&ue.setFromMatrixPosition(C.matrixWorld).applyMatrix4(H);const Ne=Fe.update(C),We=C.material;if(Array.isArray(We)){const Xe=Ne.groups;for(let Qe=0,Ye=Xe.length;Qe<Ye;Qe++){const Ze=Xe[Qe],Pt=We[Ze.materialIndex];Pt&&Pt.visible&&d.push(C,Ne,Pt,Y,ue.z,Ze)}}else We.visible&&d.push(C,Ne,We,Y,ue.z,null)}const Ae=C.children;for(let Ne=0,We=Ae.length;Ne<We;Ne++)Bt(Ae[Ne],k,Y,O)}function Wt(C,k,Y,O){const $=C.opaque,Ae=C.transmissive,Ne=C.transparent;f.setupLightsView(Y),Ae.length>0&&function Hn(C,k,Y){const O=Ie.isWebGL2;null===re&&(re=new Hi(1,1,{generateMipmaps:!0,type:xe.has("EXT_color_buffer_half_float")?tr:nn,minFilter:Ni,samples:O&&!0===s?4:0})),g.getDrawingBufferSize(W),O?re.setSize(W.x,W.y):re.setSize(Jr(W.x),Jr(W.y));const $=g.getRenderTarget();g.setRenderTarget(re),g.clear();const Ae=g.toneMapping;g.toneMapping=di,ft(C,k,Y),g.toneMapping=Ae,Q.updateMultisampleRenderTarget(re),Q.updateRenderTargetMipmap(re),g.setRenderTarget($)}($,k,Y),O&&ve.viewport(L.copy(O)),$.length>0&&ft($,k,Y),Ae.length>0&&ft(Ae,k,Y),Ne.length>0&&ft(Ne,k,Y),ve.buffers.depth.setTest(!0),ve.buffers.depth.setMask(!0),ve.buffers.color.setMask(!0),ve.setPolygonOffset(!1)}function ft(C,k,Y){const O=!0===k.isScene?k.overrideMaterial:null;for(let $=0,Ae=C.length;$<Ae;$++){const Ne=C[$],We=Ne.object,Xe=Ne.geometry,Qe=null===O?Ne.material:O,Ye=Ne.group;We.layers.test(Y.layers)&&Ki(We,k,Y,Xe,Qe,Ye)}}function Ki(C,k,Y,O,$,Ae){C.onBeforeRender(g,k,Y,O,$,Ae),C.modelViewMatrix.multiplyMatrices(Y.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),$.onBeforeRender(g,k,Y,O,C,Ae),!0===$.transparent&&$.side===Zn?($.side=qt,$.needsUpdate=!0,g.renderBufferDirect(Y,k,O,$,C,Ae),$.side=fi,$.needsUpdate=!0,g.renderBufferDirect(Y,k,O,$,C,Ae),$.side=Zn):g.renderBufferDirect(Y,k,O,$,C,Ae),C.onAfterRender(g,k,Y,O,$,Ae)}function yi(C,k,Y){!0!==k.isScene&&(k=ce);const O=te.get(C),$=f.state.lights,Ne=$.state.version,We=Ee.getParameters(C,$.state,f.state.shadowsArray,k,Y),Xe=Ee.getProgramCacheKey(We);let Qe=O.programs;O.environment=C.isMeshStandardMaterial?k.environment:null,O.fog=k.fog,O.envMap=(C.isMeshStandardMaterial?Re:fe).get(C.envMap||O.environment),void 0===Qe&&(C.addEventListener("dispose",ut),Qe=new Map,O.programs=Qe);let Ye=Qe.get(Xe);if(void 0!==Ye){if(O.currentProgram===Ye&&O.lightsStateVersion===Ne)return ku(C,We),Ye}else We.uniforms=Ee.getUniforms(C),C.onBuild(Y,We,g),C.onBeforeCompile(We,g),Ye=Ee.acquireProgram(We,Xe),Qe.set(Xe,Ye),O.uniforms=We.uniforms;const Ze=O.uniforms;(!C.isShaderMaterial&&!C.isRawShaderMaterial||!0===C.clipping)&&(Ze.clippingPlanes=w.uniform),ku(C,We),O.needsLights=function v_(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&!0===C.lights}(C),O.lightsStateVersion=Ne,O.needsLights&&(Ze.ambientLightColor.value=$.state.ambient,Ze.lightProbe.value=$.state.probe,Ze.directionalLights.value=$.state.directional,Ze.directionalLightShadows.value=$.state.directionalShadow,Ze.spotLights.value=$.state.spot,Ze.spotLightShadows.value=$.state.spotShadow,Ze.rectAreaLights.value=$.state.rectArea,Ze.ltc_1.value=$.state.rectAreaLTC1,Ze.ltc_2.value=$.state.rectAreaLTC2,Ze.pointLights.value=$.state.point,Ze.pointLightShadows.value=$.state.pointShadow,Ze.hemisphereLights.value=$.state.hemi,Ze.directionalShadowMap.value=$.state.directionalShadowMap,Ze.directionalShadowMatrix.value=$.state.directionalShadowMatrix,Ze.spotShadowMap.value=$.state.spotShadowMap,Ze.spotLightMatrix.value=$.state.spotLightMatrix,Ze.spotLightMap.value=$.state.spotLightMap,Ze.pointShadowMap.value=$.state.pointShadowMap,Ze.pointShadowMatrix.value=$.state.pointShadowMatrix);const Pt=Ye.getUniforms(),ci=pa.seqWithValue(Pt.seq,Ze);return O.currentProgram=Ye,O.uniformsList=ci,Ye}function ku(C,k){const Y=te.get(C);Y.outputEncoding=k.outputEncoding,Y.instancing=k.instancing,Y.skinning=k.skinning,Y.morphTargets=k.morphTargets,Y.morphNormals=k.morphNormals,Y.morphColors=k.morphColors,Y.morphTargetsCount=k.morphTargetsCount,Y.numClippingPlanes=k.numClippingPlanes,Y.numIntersection=k.numClipIntersection,Y.vertexAlphas=k.vertexAlphas,Y.vertexTangents=k.vertexTangents,Y.toneMapping=k.toneMapping}it.setAnimationLoop(function se(C){q&&q(C)}),typeof self<"u"&&it.setContext(self),this.setAnimationLoop=function(C){q=C,we.setAnimationLoop(C),null===C?it.stop():it.start()},we.addEventListener("sessionstart",Te),we.addEventListener("sessionend",Ce),this.render=function(C,k){if(void 0===k||!0===k.isCamera){if(!0!==v){if(!0===C.matrixWorldAutoUpdate&&C.updateMatrixWorld(),null===k.parent&&!0===k.matrixWorldAutoUpdate&&k.updateMatrixWorld(),!0===we.enabled&&!0===we.isPresenting&&(!0===we.cameraAutoUpdate&&we.updateCamera(k),k=we.getCamera()),!0===C.isScene&&C.onBeforeRender(g,C,k,T),f=E.get(C,_.length),f.init(),_.push(f),H.multiplyMatrices(k.projectionMatrix,k.matrixWorldInverse),ae.setFromProjectionMatrix(H),le=this.localClippingEnabled,K=w.init(this.clippingPlanes,le,k),d=nt.get(C,m.length),d.init(),m.push(d),Bt(C,k,0,g.sortObjects),d.finish(),!0===g.sortObjects&&d.sort(ee,z),!0===K&&w.beginShadows(),V.render(f.state.shadowsArray,C,k),!0===K&&w.endShadows(),!0===this.info.autoReset&&this.info.reset(),oe.render(d,C),f.setupLights(g.physicallyCorrectLights),k.isArrayCamera){const O=k.cameras;for(let $=0,Ae=O.length;$<Ae;$++){const Ne=O[$];Wt(d,C,Ne,Ne.viewport)}}else Wt(d,C,k);null!==T&&(Q.updateMultisampleRenderTarget(T),Q.updateRenderTargetMipmap(T)),!0===C.isScene&&C.onAfterRender(g,C,k),J.resetDefaultState(),M=-1,P=null,_.pop(),f=_.length>0?_[_.length-1]:null,m.pop(),d=m.length>0?m[m.length-1]:null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.getActiveCubeFace=function(){return x},this.getActiveMipmapLevel=function(){return R},this.getRenderTarget=function(){return T},this.setRenderTargetTextures=function(C,k,Y){te.get(C.texture).__webglTexture=k,te.get(C.depthTexture).__webglTexture=Y;const O=te.get(C);O.__hasExternalTextures=!0,O.__hasExternalTextures&&(O.__autoAllocateDepthBuffer=void 0===Y,O.__autoAllocateDepthBuffer||!0===xe.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),O.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(C,k){const Y=te.get(C);Y.__webglFramebuffer=k,Y.__useDefaultFramebuffer=void 0===k},this.setRenderTarget=function(C,k=0,Y=0){T=C,x=k,R=Y;let O=!0,$=null,Ae=!1,Ne=!1;if(C){const Xe=te.get(C);void 0!==Xe.__useDefaultFramebuffer?(ve.bindFramebuffer(36160,null),O=!1):void 0===Xe.__webglFramebuffer?Q.setupRenderTarget(C):Xe.__hasExternalTextures&&Q.rebindTextures(C,te.get(C.texture).__webglTexture,te.get(C.depthTexture).__webglTexture);const Qe=C.texture;(Qe.isData3DTexture||Qe.isDataArrayTexture||Qe.isCompressedArrayTexture)&&(Ne=!0);const Ye=te.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?($=Ye[k],Ae=!0):$=Ie.isWebGL2&&C.samples>0&&!1===Q.useMultisampledRTT(C)?te.get(C).__webglMultisampledFramebuffer:Ye,L.copy(C.viewport),j.copy(C.scissor),S=C.scissorTest}else L.copy(G).multiplyScalar(U).floor(),j.copy(X).multiplyScalar(U).floor(),S=ne;if(ve.bindFramebuffer(36160,$)&&Ie.drawBuffers&&O&&ve.drawBuffers(C,$),ve.viewport(L),ve.scissor(j),ve.setScissorTest(S),Ae){const Xe=te.get(C.texture);Z.framebufferTexture2D(36160,36064,34069+k,Xe.__webglTexture,Y)}else if(Ne){const Xe=te.get(C.texture);Z.framebufferTextureLayer(36160,36064,Xe.__webglTexture,Y||0,k||0)}M=-1},this.readRenderTargetPixels=function(C,k,Y,O,$,Ae,Ne){if(!C||!C.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let We=te.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&void 0!==Ne&&(We=We[Ne]),We){ve.bindFramebuffer(36160,We);try{const Xe=C.texture,Qe=Xe.format,Ye=Xe.type;if(Qe!==Qt&&ye.convert(Qe)!==Z.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const Ze=Ye===tr&&(xe.has("EXT_color_buffer_half_float")||Ie.isWebGL2&&xe.has("EXT_color_buffer_float"));if(!(Ye===nn||ye.convert(Ye)===Z.getParameter(35738)||Ye===Ui&&(Ie.isWebGL2||xe.has("OES_texture_float")||xe.has("WEBGL_color_buffer_float"))||Ze))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");k>=0&&k<=C.width-O&&Y>=0&&Y<=C.height-$&&Z.readPixels(k,Y,O,$,ye.convert(Qe),ye.convert(Ye),Ae)}finally{const Xe=null!==T?te.get(T).__webglFramebuffer:null;ve.bindFramebuffer(36160,Xe)}}},this.copyFramebufferToTexture=function(C,k,Y=0){const O=Math.pow(2,-Y),$=Math.floor(k.image.width*O),Ae=Math.floor(k.image.height*O);Q.setTexture2D(k,0),Z.copyTexSubImage2D(3553,Y,0,0,C.x,C.y,$,Ae),ve.unbindTexture()},this.copyTextureToTexture=function(C,k,Y,O=0){const $=k.image.width,Ae=k.image.height,Ne=ye.convert(Y.format),We=ye.convert(Y.type);Q.setTexture2D(Y,0),Z.pixelStorei(37440,Y.flipY),Z.pixelStorei(37441,Y.premultiplyAlpha),Z.pixelStorei(3317,Y.unpackAlignment),k.isDataTexture?Z.texSubImage2D(3553,O,C.x,C.y,$,Ae,Ne,We,k.image.data):k.isCompressedTexture?Z.compressedTexSubImage2D(3553,O,C.x,C.y,k.mipmaps[0].width,k.mipmaps[0].height,Ne,k.mipmaps[0].data):Z.texSubImage2D(3553,O,C.x,C.y,Ne,We,k.image),0===O&&Y.generateMipmaps&&Z.generateMipmap(3553),ve.unbindTexture()},this.copyTextureToTexture3D=function(C,k,Y,O,$=0){if(g.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const Ae=C.max.x-C.min.x+1,Ne=C.max.y-C.min.y+1,We=C.max.z-C.min.z+1,Xe=ye.convert(O.format),Qe=ye.convert(O.type);let Ye;if(O.isData3DTexture)Q.setTexture3D(O,0),Ye=32879;else{if(!O.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");Q.setTexture2DArray(O,0),Ye=35866}Z.pixelStorei(37440,O.flipY),Z.pixelStorei(37441,O.premultiplyAlpha),Z.pixelStorei(3317,O.unpackAlignment);const Ze=Z.getParameter(3314),Pt=Z.getParameter(32878),ci=Z.getParameter(3316),Qi=Z.getParameter(3315),Wn=Z.getParameter(32877),Ct=Y.isCompressedTexture?Y.mipmaps[0]:Y.image;Z.pixelStorei(3314,Ct.width),Z.pixelStorei(32878,Ct.height),Z.pixelStorei(3316,C.min.x),Z.pixelStorei(3315,C.min.y),Z.pixelStorei(32877,C.min.z),Y.isDataTexture||Y.isData3DTexture?Z.texSubImage3D(Ye,$,k.x,k.y,k.z,Ae,Ne,We,Xe,Qe,Ct.data):Y.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Z.compressedTexSubImage3D(Ye,$,k.x,k.y,k.z,Ae,Ne,We,Xe,Ct.data)):Z.texSubImage3D(Ye,$,k.x,k.y,k.z,Ae,Ne,We,Xe,Qe,Ct),Z.pixelStorei(3314,Ze),Z.pixelStorei(32878,Pt),Z.pixelStorei(3316,ci),Z.pixelStorei(3315,Qi),Z.pixelStorei(32877,Wn),0===$&&O.generateMipmaps&&Z.generateMipmap(Ye),ve.unbindTexture()},this.initTexture=function(C){C.isCubeTexture?Q.setTextureCube(C,0):C.isData3DTexture?Q.setTexture3D(C,0):C.isDataArrayTexture||C.isCompressedArrayTexture?Q.setTexture2DArray(C,0):Q.setTexture2D(C,0),ve.unbindTexture()},this.resetState=function(){x=0,R=0,T=null,ve.reset(),J.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}(class Rg extends bh{}).prototype.isWebGL1Renderer=!0;class ma{constructor(e,t=1,i=1e3){this.isFog=!0,this.name="",this.color=new be(e),this.near=t,this.far=i}clone(){return new ma(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Th extends st{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(t.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class Qo{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=ei()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,s=this.stride;n<s;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=ei()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=ei()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Jt=new D;class Bn{constructor(e,t,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)Jt.fromBufferAttribute(this,t),Jt.applyMatrix4(e),this.setXYZ(t,Jt.x,Jt.y,Jt.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Jt.fromBufferAttribute(this,t),Jt.applyNormalMatrix(e),this.setXYZ(t,Jt.x,Jt.y,Jt.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Jt.fromBufferAttribute(this,t),Jt.transformDirection(e),this.setXYZ(t,Jt.x,Jt.y,Jt.z);return this}setX(e,t){return this.normalized&&(t=rt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=rt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=rt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=rt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Ai(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Ai(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Ai(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Ai(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=rt(t,this.array),i=rt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=rt(t,this.array),i=rt(i,this.array),n=rt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=rt(t,this.array),i=rt(i,this.array),n=rt(n,this.array),s=rt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=s,this}clone(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return new wt(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Bn(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class vs extends wt{constructor(e,t,i,n=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Fh=new ze,jh=new ze,ba=[],Lg=new ze,_s=new Ht;class Bh extends Ht{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new vs(new Float32Array(16*i),16),this.instanceColor=null,this.count=i,this.frustumCulled=!1;for(let n=0;n<i;n++)this.setMatrixAt(n,Lg)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){const i=this.matrixWorld,n=this.count;if(_s.geometry=this.geometry,_s.material=this.material,void 0!==_s.material)for(let s=0;s<n;s++){this.getMatrixAt(s,Fh),jh.multiplyMatrices(i,Fh),_s.matrixWorld=jh,_s.raycast(e,ba);for(let a=0,o=ba.length;a<o;a++){const c=ba[a];c.instanceId=s,c.object=this,t.push(c)}ba.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new vs(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class ri extends ji{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new be(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Ih=new D,Gh=new D,Oh=new ze,il=new mn,Ta=new mi;class wr extends st{constructor(e=new Ve,t=new ri){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,i=[0];for(let n=1,s=t.count;n<s;n++)Ih.fromBufferAttribute(t,n-1),Gh.fromBufferAttribute(t,n),i[n]=i[n-1],i[n]+=Ih.distanceTo(Gh);e.setAttribute("lineDistance",new Me(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,s=e.params.Line.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),Ta.copy(i.boundingSphere),Ta.applyMatrix4(n),Ta.radius+=s,!1===e.ray.intersectsSphere(Ta))return;Oh.copy(n).invert(),il.copy(e.ray).applyMatrix4(Oh);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),c=o*o,h=new D,u=new D,d=new D,f=new D,m=this.isLineSegments?2:1,_=i.index,v=i.attributes.position;if(null!==_)for(let T=Math.max(0,a.start),M=Math.min(_.count,a.start+a.count)-1;T<M;T+=m){const P=_.getX(T),L=_.getX(T+1);if(h.fromBufferAttribute(v,P),u.fromBufferAttribute(v,L),il.distanceSqToSegment(h,u,f,d)>c)continue;f.applyMatrix4(this.matrixWorld);const S=e.ray.origin.distanceTo(f);S<e.near||S>e.far||t.push({distance:S,point:d.clone().applyMatrix4(this.matrixWorld),index:T,face:null,faceIndex:null,object:this})}else for(let T=Math.max(0,a.start),M=Math.min(v.count,a.start+a.count)-1;T<M;T+=m){if(h.fromBufferAttribute(v,T),u.fromBufferAttribute(v,T+1),il.distanceSqToSegment(h,u,f,d)>c)continue;f.applyMatrix4(this.matrixWorld);const L=e.ray.origin.distanceTo(f);L<e.near||L>e.far||t.push({distance:L,point:d.clone().applyMatrix4(this.matrixWorld),index:T,face:null,faceIndex:null,object:this})}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=n.length;s<a;s++){const o=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}}const zh=new D,kh=new D;class Pr extends wr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,i=[];for(let n=0,s=t.count;n<s;n+=2)zh.fromBufferAttribute(t,n),kh.fromBufferAttribute(t,n+1),i[n]=0===n?0:i[n-1],i[n+1]=i[n]+zh.distanceTo(kh);e.setAttribute("lineDistance",new Me(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Nh extends ji{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new be(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Uh=new ze,nl=new mn,xa=new mi,Ma=new D;class Vh extends st{constructor(e=new Ve,t=new Nh){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,s=e.params.Points.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),xa.copy(i.boundingSphere),xa.applyMatrix4(n),xa.radius+=s,!1===e.ray.intersectsSphere(xa))return;Uh.copy(n).invert(),nl.copy(e.ray).applyMatrix4(Uh);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),c=o*o,h=i.index,d=i.attributes.position;if(null!==h)for(let _=Math.max(0,a.start),g=Math.min(h.count,a.start+a.count);_<g;_++){const v=h.getX(_);Ma.fromBufferAttribute(d,v),Hh(Ma,v,c,n,e,t,this)}else for(let _=Math.max(0,a.start),g=Math.min(d.count,a.start+a.count);_<g;_++)Ma.fromBufferAttribute(d,_),Hh(Ma,_,c,n,e,t,this)}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=n.length;s<a;s++){const o=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}}function Hh(l,e,t,i,n,s,a){const o=nl.distanceSqToPoint(l);if(o<t){const c=new D;nl.closestPointToPoint(l,c),c.applyMatrix4(i);const h=n.ray.origin.distanceTo(c);if(h<n.near||h>n.far)return;s.push({distance:h,distanceToRay:Math.sqrt(o),point:c,index:e,face:null,object:a})}}class Eg extends Ri{constructor(e,t,i){super({width:e,height:t}),this.isFramebufferTexture=!0,this.format=i,this.magFilter=mt,this.minFilter=mt,this.generateMipmaps=!1,this.needsUpdate=!0}}class Gi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let i,n=this.getPoint(0),s=0;t.push(0);for(let a=1;a<=e;a++)i=this.getPoint(a/e),s+=i.distanceTo(n),t.push(s),n=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const i=this.getLengths();let n=0;const s=i.length;let a;a=t||e*i[s-1];let h,o=0,c=s-1;for(;o<=c;)if(n=Math.floor(o+(c-o)/2),h=i[n]-a,h<0)o=n+1;else{if(!(h>0)){c=n;break}c=n-1}if(n=c,i[n]===a)return n/(s-1);const u=i[n];return(n+(a-u)/(i[n+1]-u))/(s-1)}getTangent(e,t){let n=e-1e-4,s=e+1e-4;n<0&&(n=0),s>1&&(s=1);const a=this.getPoint(n),o=this.getPoint(s),c=t||(a.isVector2?new ie:new D);return c.copy(o).sub(a).normalize(),c}getTangentAt(e,t){const i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t){const i=new D,n=[],s=[],a=[],o=new D,c=new ze;for(let m=0;m<=e;m++)n[m]=this.getTangentAt(m/e,new D);s[0]=new D,a[0]=new D;let h=Number.MAX_VALUE;const u=Math.abs(n[0].x),d=Math.abs(n[0].y),f=Math.abs(n[0].z);u<=h&&(h=u,i.set(1,0,0)),d<=h&&(h=d,i.set(0,1,0)),f<=h&&i.set(0,0,1),o.crossVectors(n[0],i).normalize(),s[0].crossVectors(n[0],o),a[0].crossVectors(n[0],s[0]);for(let m=1;m<=e;m++){if(s[m]=s[m-1].clone(),a[m]=a[m-1].clone(),o.crossVectors(n[m-1],n[m]),o.length()>Number.EPSILON){o.normalize();const _=Math.acos(gt(n[m-1].dot(n[m]),-1,1));s[m].applyMatrix4(c.makeRotationAxis(o,_))}a[m].crossVectors(n[m],s[m])}if(!0===t){let m=Math.acos(gt(s[0].dot(s[e]),-1,1));m/=e,n[0].dot(o.crossVectors(s[0],s[e]))>0&&(m=-m);for(let _=1;_<=e;_++)s[_].applyMatrix4(c.makeRotationAxis(n[_],m*_)),a[_].crossVectors(n[_],s[_])}return{tangents:n,normals:s,binormals:a}}clone(){return(new this.constructor).copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class rl extends Gi{constructor(e=0,t=0,i=1,n=1,s=0,a=2*Math.PI,o=!1,c=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=n,this.aStartAngle=s,this.aEndAngle=a,this.aClockwise=o,this.aRotation=c}getPoint(e,t){const i=t||new ie,n=2*Math.PI;let s=this.aEndAngle-this.aStartAngle;const a=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=n;for(;s>n;)s-=n;s<Number.EPSILON&&(s=a?0:n),!0===this.aClockwise&&!a&&(s===n?s=-n:s-=n);const o=this.aStartAngle+e*s;let c=this.aX+this.xRadius*Math.cos(o),h=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){const u=Math.cos(this.aRotation),d=Math.sin(this.aRotation),f=c-this.aX,m=h-this.aY;c=f*u-m*d+this.aX,h=f*d+m*u+this.aY}return i.set(c,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}function sl(){let l=0,e=0,t=0,i=0;function n(s,a,o,c){l=s,e=o,t=-3*s+3*a-2*o-c,i=2*s-2*a+o+c}return{initCatmullRom:function(s,a,o,c,h){n(a,o,h*(o-s),h*(c-a))},initNonuniformCatmullRom:function(s,a,o,c,h,u,d){let f=(a-s)/h-(o-s)/(h+u)+(o-a)/u,m=(o-a)/u-(c-a)/(u+d)+(c-o)/d;f*=u,m*=u,n(a,o,f,m)},calc:function(s){const a=s*s;return l+e*s+t*a+i*(a*s)}}}const Ra=new D,al=new sl,ol=new sl,ll=new sl;function Wh(l,e,t,i,n){const s=.5*(i-e),a=.5*(n-t),o=l*l;return(2*t-2*i+s+a)*(l*o)+(-3*t+3*i-2*s-a)*o+s*l+t}function ys(l,e,t,i){return function Ig(l,e){const t=1-l;return t*t*e}(l,e)+function Gg(l,e){return 2*(1-l)*l*e}(l,t)+function Og(l,e){return l*l*e}(l,i)}function bs(l,e,t,i,n){return function zg(l,e){const t=1-l;return t*t*t*e}(l,e)+function kg(l,e){const t=1-l;return 3*t*t*l*e}(l,t)+function Ng(l,e){return 3*(1-l)*l*l*e}(l,i)+function Ug(l,e){return l*l*l*e}(l,n)}class Xh extends Gi{constructor(e=new ie,t=new ie,i=new ie,n=new ie){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new ie){const i=t,n=this.v0,s=this.v1,a=this.v2,o=this.v3;return i.set(bs(e,n.x,s.x,a.x,o.x),bs(e,n.y,s.y,a.y,o.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class cl extends Gi{constructor(e=new ie,t=new ie){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ie){const i=t;return 1===e?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const i=t||new ie;return i.copy(this.v2).sub(this.v1).normalize(),i}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class qh extends Gi{constructor(e=new ie,t=new ie,i=new ie){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new ie){const i=t,n=this.v0,s=this.v1,a=this.v2;return i.set(ys(e,n.x,s.x,a.x),ys(e,n.y,s.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Zh extends Gi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ie){const i=t,n=this.points,s=(n.length-1)*e,a=Math.floor(s),o=s-a,c=n[0===a?a:a-1],h=n[a],u=n[a>n.length-2?n.length-1:a+1],d=n[a>n.length-3?n.length-1:a+2];return i.set(Wh(o,c.x,h.x,u.x,d.x),Wh(o,c.y,h.y,u.y,d.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++)this.points.push(e.points[t].clone());return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++)e.points.push(this.points[t].toArray());return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push((new ie).fromArray(n))}return this}}var hl=Object.freeze({__proto__:null,ArcCurve:class jg extends rl{constructor(e,t,i,n,s,a){super(e,t,i,i,n,s,a),this.isArcCurve=!0,this.type="ArcCurve"}},CatmullRomCurve3:class Bg extends Gi{constructor(e=[],t=!1,i="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=n}getPoint(e,t=new D){const i=t,n=this.points,s=n.length,a=(s-(this.closed?0:1))*e;let h,u,o=Math.floor(a),c=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/s)+1)*s:0===c&&o===s-1&&(o=s-2,c=1),this.closed||o>0?h=n[(o-1)%s]:(Ra.subVectors(n[0],n[1]).add(n[0]),h=Ra);const d=n[o%s],f=n[(o+1)%s];if(this.closed||o+2<s?u=n[(o+2)%s]:(Ra.subVectors(n[s-1],n[s-2]).add(n[s-1]),u=Ra),"centripetal"===this.curveType||"chordal"===this.curveType){const m="chordal"===this.curveType?.5:.25;let _=Math.pow(h.distanceToSquared(d),m),g=Math.pow(d.distanceToSquared(f),m),v=Math.pow(f.distanceToSquared(u),m);g<1e-4&&(g=1),_<1e-4&&(_=g),v<1e-4&&(v=g),al.initNonuniformCatmullRom(h.x,d.x,f.x,u.x,_,g,v),ol.initNonuniformCatmullRom(h.y,d.y,f.y,u.y,_,g,v),ll.initNonuniformCatmullRom(h.z,d.z,f.z,u.z,_,g,v)}else"catmullrom"===this.curveType&&(al.initCatmullRom(h.x,d.x,f.x,u.x,this.tension),ol.initCatmullRom(h.y,d.y,f.y,u.y,this.tension),ll.initCatmullRom(h.z,d.z,f.z,u.z,this.tension));return i.set(al.calc(c),ol.calc(c),ll.calc(c)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++)this.points.push(e.points[t].clone());return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++)e.points.push(this.points[t].toArray());return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push((new D).fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}},CubicBezierCurve:Xh,CubicBezierCurve3:class Vg extends Gi{constructor(e=new D,t=new D,i=new D,n=new D){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new D){const i=t,n=this.v0,s=this.v1,a=this.v2,o=this.v3;return i.set(bs(e,n.x,s.x,a.x,o.x),bs(e,n.y,s.y,a.y,o.y),bs(e,n.z,s.z,a.z,o.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}},EllipseCurve:rl,LineCurve:cl,LineCurve3:class Hg extends Gi{constructor(e=new D,t=new D){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new D){const i=t;return 1===e?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}},QuadraticBezierCurve:qh,QuadraticBezierCurve3:class Yh extends Gi{constructor(e=new D,t=new D,i=new D){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new D){const i=t,n=this.v0,s=this.v1,a=this.v2;return i.set(ys(e,n.x,s.x,a.x),ys(e,n.y,s.y,a.y),ys(e,n.z,s.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}},SplineCurve:Zh});class Wg extends Gi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new cl(t,e))}getPoint(e,t){const i=e*this.getLength(),n=this.getCurveLengths();let s=0;for(;s<n.length;){if(n[s]>=i){const a=n[s]-i,o=this.curves[s],c=o.getLength();return o.getPointAt(0===c?0:1-a/c,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let i=0,n=this.curves.length;i<n;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let i;for(let n=0,s=this.curves;n<s.length;n++){const a=s[n],c=a.getPoints(a.isEllipseCurve?2*e:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e);for(let h=0;h<c.length;h++){const u=c[h];i&&i.equals(u)||(t.push(u),i=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++)this.curves.push(e.curves[t].clone());return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++)e.curves.push(this.curves[t].toJSON());return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const n=e.curves[t];this.curves.push((new hl[n.type]).fromJSON(n))}return this}}class Sa extends Wg{constructor(e){super(),this.type="Path",this.currentPoint=new ie,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const i=new cl(this.currentPoint.clone(),new ie(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,n){const s=new qh(this.currentPoint.clone(),new ie(e,t),new ie(i,n));return this.curves.push(s),this.currentPoint.set(i,n),this}bezierCurveTo(e,t,i,n,s,a){const o=new Xh(this.currentPoint.clone(),new ie(e,t),new ie(i,n),new ie(s,a));return this.curves.push(o),this.currentPoint.set(s,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),i=new Zh(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,n,s,a){return this.absarc(e+this.currentPoint.x,t+this.currentPoint.y,i,n,s,a),this}absarc(e,t,i,n,s,a){return this.absellipse(e,t,i,i,n,s,a),this}ellipse(e,t,i,n,s,a,o,c){return this.absellipse(e+this.currentPoint.x,t+this.currentPoint.y,i,n,s,a,o,c),this}absellipse(e,t,i,n,s,a,o,c){const h=new rl(e,t,i,n,s,a,o,c);if(this.curves.length>0){const d=h.getPoint(0);d.equals(this.currentPoint)||this.lineTo(d.x,d.y)}this.curves.push(h);const u=h.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Cr extends Ve{constructor(e=1,t=1,i=1,n=32,s=1,a=!1,o=0,c=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:s,openEnded:a,thetaStart:o,thetaLength:c};const h=this;n=Math.floor(n),s=Math.floor(s);const u=[],d=[],f=[],m=[];let _=0;const g=[],v=i/2;let x=0;function T(M){const P=_,L=new ie,j=new D;let S=0;const A=!0===M?e:t,B=!0===M?1:-1;for(let ee=1;ee<=n;ee++)d.push(0,v*B,0),f.push(0,B,0),m.push(.5,.5),_++;const U=_;for(let ee=0;ee<=n;ee++){const G=ee/n*c+o,X=Math.cos(G),ne=Math.sin(G);j.x=A*ne,j.y=v*B,j.z=A*X,d.push(j.x,j.y,j.z),f.push(0,B,0),L.x=.5*X+.5,L.y=.5*ne*B+.5,m.push(L.x,L.y),_++}for(let ee=0;ee<n;ee++){const z=P+ee,G=U+ee;!0===M?u.push(G,G+1,z):u.push(G+1,G,z),S+=3}h.addGroup(x,S,!0===M?1:2),x+=S}(function R(){const M=new D,P=new D;let L=0;const j=(t-e)/i;for(let S=0;S<=s;S++){const A=[],B=S/s,U=B*(t-e)+e;for(let ee=0;ee<=n;ee++){const z=ee/n,G=z*c+o,X=Math.sin(G),ne=Math.cos(G);P.x=U*X,P.y=-B*i+v,P.z=U*ne,d.push(P.x,P.y,P.z),M.set(X,j,ne).normalize(),f.push(M.x,M.y,M.z),m.push(z,1-B),A.push(_++)}g.push(A)}for(let S=0;S<n;S++)for(let A=0;A<s;A++){const U=g[A+1][S],ee=g[A+1][S+1],z=g[A][S+1];u.push(g[A][S],U,z),u.push(U,ee,z),L+=6}h.addGroup(x,L,0),x+=L})(),!1===a&&(e>0&&T(!0),t>0&&T(!1)),this.setIndex(u),this.setAttribute("position",new Me(d,3)),this.setAttribute("normal",new Me(f,3)),this.setAttribute("uv",new Me(m,2))}static fromJSON(e){return new Cr(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Dr extends Sa{constructor(e){super(e),this.uuid=ei(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let i=0,n=this.holes.length;i<n;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++)this.holes.push(e.holes[t].clone());return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++)e.holes.push(this.holes[t].toJSON());return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const n=e.holes[t];this.holes.push((new Sa).fromJSON(n))}return this}}function $h(l,e,t,i,n){let s,a;if(n===function cv(l,e,t,i){let n=0;for(let s=e,a=t-i;s<t;s+=i)n+=(l[a]-l[s])*(l[s+1]+l[a+1]),a=s;return n}(l,e,t,i)>0)for(s=e;s<t;s+=i)a=Qh(s,l[s],l[s+1],a);else for(s=t-i;s>=e;s-=i)a=Qh(s,l[s],l[s+1],a);return a&&La(a,a.next)&&(Ms(a),a=a.next),a}function Gn(l,e){if(!l)return l;e||(e=l);let i,t=l;do{if(i=!1,t.steiner||!La(t,t.next)&&0!==pt(t.prev,t,t.next))t=t.next;else{if(Ms(t),t=e=t.prev,t===t.next)break;i=!0}}while(i||t!==e);return e}function Ts(l,e,t,i,n,s,a){if(!l)return;!a&&s&&function nv(l,e,t,i){let n=l;do{0===n.z&&(n.z=gl(n.x,n.y,e,t,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next}while(n!==l);n.prevZ.nextZ=null,n.prevZ=null,function rv(l){let e,t,i,n,s,a,o,c,h=1;do{for(t=l,l=null,s=null,a=0;t;){for(a++,i=t,o=0,e=0;e<h&&(o++,i=i.nextZ,i);e++);for(c=h;o>0||c>0&&i;)0!==o&&(0===c||!i||t.z<=i.z)?(n=t,t=t.nextZ,o--):(n=i,i=i.nextZ,c--),s?s.nextZ=n:l=n,n.prevZ=s,s=n;t=i}s.nextZ=null,h*=2}while(a>1)}(n)}(l,i,n,s);let c,h,o=l;for(;l.prev!==l.next;)if(c=l.prev,h=l.next,s?Zg(l,i,n,s):Yg(l))e.push(c.i/t|0),e.push(l.i/t|0),e.push(h.i/t|0),Ms(l),l=h.next,o=h.next;else if((l=h)===o){a?1===a?Ts(l=$g(Gn(l),e,t),e,t,i,n,s,2):2===a&&Jg(l,e,t,i,n,s):Ts(Gn(l),e,t,i,n,s,1);break}}function Yg(l){const e=l.prev,t=l,i=l.next;if(pt(e,t,i)>=0)return!1;const n=e.x,s=t.x,a=i.x,o=e.y,c=t.y,h=i.y,u=n<s?n<a?n:a:s<a?s:a,d=o<c?o<h?o:h:c<h?c:h,f=n>s?n>a?n:a:s>a?s:a,m=o>c?o>h?o:h:c>h?c:h;let _=i.next;for(;_!==e;){if(_.x>=u&&_.x<=f&&_.y>=d&&_.y<=m&&Lr(n,o,s,c,a,h,_.x,_.y)&&pt(_.prev,_,_.next)>=0)return!1;_=_.next}return!0}function Zg(l,e,t,i){const n=l.prev,s=l,a=l.next;if(pt(n,s,a)>=0)return!1;const o=n.x,c=s.x,h=a.x,u=n.y,d=s.y,f=a.y,m=o<c?o<h?o:h:c<h?c:h,_=u<d?u<f?u:f:d<f?d:f,g=o>c?o>h?o:h:c>h?c:h,v=u>d?u>f?u:f:d>f?d:f,x=gl(m,_,e,t,i),R=gl(g,v,e,t,i);let T=l.prevZ,M=l.nextZ;for(;T&&T.z>=x&&M&&M.z<=R;){if(T.x>=m&&T.x<=g&&T.y>=_&&T.y<=v&&T!==n&&T!==a&&Lr(o,u,c,d,h,f,T.x,T.y)&&pt(T.prev,T,T.next)>=0||(T=T.prevZ,M.x>=m&&M.x<=g&&M.y>=_&&M.y<=v&&M!==n&&M!==a&&Lr(o,u,c,d,h,f,M.x,M.y)&&pt(M.prev,M,M.next)>=0))return!1;M=M.nextZ}for(;T&&T.z>=x;){if(T.x>=m&&T.x<=g&&T.y>=_&&T.y<=v&&T!==n&&T!==a&&Lr(o,u,c,d,h,f,T.x,T.y)&&pt(T.prev,T,T.next)>=0)return!1;T=T.prevZ}for(;M&&M.z<=R;){if(M.x>=m&&M.x<=g&&M.y>=_&&M.y<=v&&M!==n&&M!==a&&Lr(o,u,c,d,h,f,M.x,M.y)&&pt(M.prev,M,M.next)>=0)return!1;M=M.nextZ}return!0}function $g(l,e,t){let i=l;do{const n=i.prev,s=i.next.next;!La(n,s)&&Jh(n,i,i.next,s)&&xs(n,s)&&xs(s,n)&&(e.push(n.i/t|0),e.push(i.i/t|0),e.push(s.i/t|0),Ms(i),Ms(i.next),i=l=s),i=i.next}while(i!==l);return Gn(i)}function Jg(l,e,t,i,n,s){let a=l;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&av(a,o)){let c=Kh(a,o);return a=Gn(a,a.next),c=Gn(c,c.next),Ts(a,e,t,i,n,s,0),void Ts(c,e,t,i,n,s,0)}o=o.next}a=a.next}while(a!==l)}function Qg(l,e){return l.x-e.x}function ev(l,e){const t=function tv(l,e){let n,t=e,i=-1/0;const s=l.x,a=l.y;do{if(a<=t.y&&a>=t.next.y&&t.next.y!==t.y){const f=t.x+(a-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(f<=s&&f>i&&(i=f,n=t.x<t.next.x?t:t.next,f===s))return n}t=t.next}while(t!==e);if(!n)return null;const o=n,c=n.x,h=n.y;let d,u=1/0;t=n;do{s>=t.x&&t.x>=c&&s!==t.x&&Lr(a<h?s:i,a,c,h,a<h?i:s,a,t.x,t.y)&&(d=Math.abs(a-t.y)/(s-t.x),xs(t,l)&&(d<u||d===u&&(t.x>n.x||t.x===n.x&&iv(n,t)))&&(n=t,u=d)),t=t.next}while(t!==o);return n}(l,e);if(!t)return e;const i=Kh(t,l);return Gn(i,i.next),Gn(t,t.next)}function iv(l,e){return pt(l.prev,l,e.prev)<0&&pt(e.next,l,l.next)<0}function gl(l,e,t,i,n){return(l=1431655765&((l=858993459&((l=252645135&((l=16711935&((l=(l-t)*n|0)|l<<8))|l<<4))|l<<2))|l<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-i)*n|0)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function sv(l){let e=l,t=l;do{(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next}while(e!==l);return t}function Lr(l,e,t,i,n,s,a,o){return(n-a)*(e-o)>=(l-a)*(s-o)&&(l-a)*(i-o)>=(t-a)*(e-o)&&(t-a)*(s-o)>=(n-a)*(i-o)}function av(l,e){return l.next.i!==e.i&&l.prev.i!==e.i&&!function ov(l,e){let t=l;do{if(t.i!==l.i&&t.next.i!==l.i&&t.i!==e.i&&t.next.i!==e.i&&Jh(t,t.next,l,e))return!0;t=t.next}while(t!==l);return!1}(l,e)&&(xs(l,e)&&xs(e,l)&&function lv(l,e){let t=l,i=!1;const n=(l.x+e.x)/2,s=(l.y+e.y)/2;do{t.y>s!=t.next.y>s&&t.next.y!==t.y&&n<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next}while(t!==l);return i}(l,e)&&(pt(l.prev,l,e.prev)||pt(l,e.prev,e))||La(l,e)&&pt(l.prev,l,l.next)>0&&pt(e.prev,e,e.next)>0)}function pt(l,e,t){return(e.y-l.y)*(t.x-e.x)-(e.x-l.x)*(t.y-e.y)}function La(l,e){return l.x===e.x&&l.y===e.y}function Jh(l,e,t,i){const n=Ea(pt(l,e,t)),s=Ea(pt(l,e,i)),a=Ea(pt(t,i,l)),o=Ea(pt(t,i,e));return!!(n!==s&&a!==o||0===n&&Aa(l,t,e)||0===s&&Aa(l,i,e)||0===a&&Aa(t,l,i)||0===o&&Aa(t,e,i))}function Aa(l,e,t){return e.x<=Math.max(l.x,t.x)&&e.x>=Math.min(l.x,t.x)&&e.y<=Math.max(l.y,t.y)&&e.y>=Math.min(l.y,t.y)}function Ea(l){return l>0?1:l<0?-1:0}function xs(l,e){return pt(l.prev,l,l.next)<0?pt(l,e,l.next)>=0&&pt(l,l.prev,e)>=0:pt(l,e,l.prev)<0||pt(l,l.next,e)<0}function Kh(l,e){const t=new vl(l.i,l.x,l.y),i=new vl(e.i,e.x,e.y),n=l.next,s=e.prev;return l.next=e,e.prev=l,t.next=n,n.prev=t,i.next=t,t.prev=i,s.next=i,i.prev=s,i}function Qh(l,e,t,i){const n=new vl(l,e,t);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function Ms(l){l.next.prev=l.prev,l.prev.next=l.next,l.prevZ&&(l.prevZ.nextZ=l.nextZ),l.nextZ&&(l.nextZ.prevZ=l.prevZ)}function vl(l,e,t){this.i=l,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}class Yi{static area(e){const t=e.length;let i=0;for(let n=t-1,s=0;s<t;n=s++)i+=e[n].x*e[s].y-e[s].x*e[n].y;return.5*i}static isClockWise(e){return Yi.area(e)<0}static triangulateShape(e,t){const i=[],n=[],s=[];eu(e),tu(i,e);let a=e.length;t.forEach(eu);for(let c=0;c<t.length;c++)n.push(a),a+=t[c].length,tu(i,t[c]);const o=function(l,e,t=2){const i=e&&e.length,n=i?e[0]*t:l.length;let s=$h(l,0,n,t,!0);const a=[];if(!s||s.next===s.prev)return a;let o,c,h,u,d,f,m;if(i&&(s=function Kg(l,e,t,i){const n=[];let s,a,o,c,h;for(s=0,a=e.length;s<a;s++)o=e[s]*i,c=s<a-1?e[s+1]*i:l.length,h=$h(l,o,c,i,!1),h===h.next&&(h.steiner=!0),n.push(sv(h));for(n.sort(Qg),s=0;s<n.length;s++)t=ev(n[s],t);return t}(l,e,s,t)),l.length>80*t){o=h=l[0],c=u=l[1];for(let _=t;_<n;_+=t)d=l[_],f=l[_+1],d<o&&(o=d),f<c&&(c=f),d>h&&(h=d),f>u&&(u=f);m=Math.max(h-o,u-c),m=0!==m?32767/m:0}return Ts(s,a,t,o,c,m,0),a}(i,n);for(let c=0;c<o.length;c+=3)s.push(o.slice(c,c+3));return s}}function eu(l){const e=l.length;e>2&&l[e-1].equals(l[0])&&l.pop()}function tu(l,e){for(let t=0;t<e.length;t++)l.push(e[t].x),l.push(e[t].y)}class Fa extends Ve{constructor(e=new Dr([new ie(.5,.5),new ie(-.5,.5),new ie(-.5,-.5),new ie(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,n=[],s=[];for(let o=0,c=e.length;o<c;o++)a(e[o]);function a(o){const c=[],h=void 0!==t.curveSegments?t.curveSegments:12,u=void 0!==t.steps?t.steps:1,d=void 0!==t.depth?t.depth:1;let f=void 0===t.bevelEnabled||t.bevelEnabled,m=void 0!==t.bevelThickness?t.bevelThickness:.2,_=void 0!==t.bevelSize?t.bevelSize:m-.1,g=void 0!==t.bevelOffset?t.bevelOffset:0,v=void 0!==t.bevelSegments?t.bevelSegments:3;const x=t.extrudePath,R=void 0!==t.UVGenerator?t.UVGenerator:hv;let T,P,L,j,S,M=!1;x&&(T=x.getSpacedPoints(u),M=!0,f=!1,P=x.computeFrenetFrames(u,!1),L=new D,j=new D,S=new D),f||(v=0,m=0,_=0,g=0);const A=o.extractPoints(h);let B=A.shape;const U=A.holes;if(!Yi.isClockWise(B)){B=B.reverse();for(let te=0,Q=U.length;te<Q;te++){const fe=U[te];Yi.isClockWise(fe)&&(U[te]=fe.reverse())}}const z=Yi.triangulateShape(B,U),G=B;for(let te=0,Q=U.length;te<Q;te++)B=B.concat(U[te]);function X(te,Q,fe){return Q||console.error("THREE.ExtrudeGeometry: vec does not exist"),Q.clone().multiplyScalar(fe).add(te)}const ne=B.length,ae=z.length;function K(te,Q,fe){let Re,me,ke;const Fe=te.x-Q.x,Ee=te.y-Q.y,ht=fe.x-te.x,nt=fe.y-te.y,E=Fe*Fe+Ee*Ee;if(Math.abs(Fe*nt-Ee*ht)>Number.EPSILON){const V=Math.sqrt(E),oe=Math.sqrt(ht*ht+nt*nt),he=Q.x-Ee/V,_e=Q.y+Fe/V,J=((fe.x-nt/oe-he)*nt-(fe.y+ht/oe-_e)*ht)/(Fe*nt-Ee*ht);Re=he+Fe*J-te.x,me=_e+Ee*J-te.y;const De=Re*Re+me*me;if(De<=2)return new ie(Re,me);ke=Math.sqrt(De/2)}else{let V=!1;Fe>Number.EPSILON?ht>Number.EPSILON&&(V=!0):Fe<-Number.EPSILON?ht<-Number.EPSILON&&(V=!0):Math.sign(Ee)===Math.sign(nt)&&(V=!0),V?(Re=-Ee,me=Fe,ke=Math.sqrt(E)):(Re=Fe,me=Ee,ke=Math.sqrt(E/2))}return new ie(Re/ke,me/ke)}const le=[];for(let te=0,Q=G.length,fe=Q-1,Re=te+1;te<Q;te++,fe++,Re++)fe===Q&&(fe=0),Re===Q&&(Re=0),le[te]=K(G[te],G[fe],G[Re]);const re=[];let H,W=le.concat();for(let te=0,Q=U.length;te<Q;te++){const fe=U[te];H=[];for(let Re=0,me=fe.length,ke=me-1,Fe=Re+1;Re<me;Re++,ke++,Fe++)ke===me&&(ke=0),Fe===me&&(Fe=0),H[Re]=K(fe[Re],fe[ke],fe[Fe]);re.push(H),W=W.concat(H)}for(let te=0;te<v;te++){const Q=te/v,fe=m*Math.cos(Q*Math.PI/2),Re=_*Math.sin(Q*Math.PI/2)+g;for(let me=0,ke=G.length;me<ke;me++){const Fe=X(G[me],le[me],Re);Ge(Fe.x,Fe.y,-fe)}for(let me=0,ke=U.length;me<ke;me++){const Fe=U[me];H=re[me];for(let Ee=0,ht=Fe.length;Ee<ht;Ee++){const nt=X(Fe[Ee],H[Ee],Re);Ge(nt.x,nt.y,-fe)}}}const ue=_+g;for(let te=0;te<ne;te++){const Q=f?X(B[te],W[te],ue):B[te];M?(j.copy(P.normals[0]).multiplyScalar(Q.x),L.copy(P.binormals[0]).multiplyScalar(Q.y),S.copy(T[0]).add(j).add(L),Ge(S.x,S.y,S.z)):Ge(Q.x,Q.y,0)}for(let te=1;te<=u;te++)for(let Q=0;Q<ne;Q++){const fe=f?X(B[Q],W[Q],ue):B[Q];M?(j.copy(P.normals[te]).multiplyScalar(fe.x),L.copy(P.binormals[te]).multiplyScalar(fe.y),S.copy(T[te]).add(j).add(L),Ge(S.x,S.y,S.z)):Ge(fe.x,fe.y,d/u*te)}for(let te=v-1;te>=0;te--){const Q=te/v,fe=m*Math.cos(Q*Math.PI/2),Re=_*Math.sin(Q*Math.PI/2)+g;for(let me=0,ke=G.length;me<ke;me++){const Fe=X(G[me],le[me],Re);Ge(Fe.x,Fe.y,d+fe)}for(let me=0,ke=U.length;me<ke;me++){const Fe=U[me];H=re[me];for(let Ee=0,ht=Fe.length;Ee<ht;Ee++){const nt=X(Fe[Ee],H[Ee],Re);M?Ge(nt.x,nt.y+T[u-1].y,T[u-1].x+fe):Ge(nt.x,nt.y,d+fe)}}}function Z(te,Q){let fe=te.length;for(;--fe>=0;){const Re=fe;let me=fe-1;me<0&&(me=te.length-1);for(let ke=0,Fe=u+2*v;ke<Fe;ke++){const Ee=ne*ke,ht=ne*(ke+1);Ie(Q+Re+Ee,Q+me+Ee,Q+me+ht,Q+Re+ht)}}}function Ge(te,Q,fe){c.push(te),c.push(Q),c.push(fe)}function xe(te,Q,fe){ve(te),ve(Q),ve(fe);const Re=n.length/3,me=R.generateTopUV(i,n,Re-3,Re-2,Re-1);He(me[0]),He(me[1]),He(me[2])}function Ie(te,Q,fe,Re){ve(te),ve(Q),ve(Re),ve(Q),ve(fe),ve(Re);const me=n.length/3,ke=R.generateSideWallUV(i,n,me-6,me-3,me-2,me-1);He(ke[0]),He(ke[1]),He(ke[3]),He(ke[1]),He(ke[2]),He(ke[3])}function ve(te){n.push(c[3*te+0]),n.push(c[3*te+1]),n.push(c[3*te+2])}function He(te){s.push(te.x),s.push(te.y)}(function ce(){const te=n.length/3;if(f){let Q=0,fe=ne*Q;for(let Re=0;Re<ae;Re++){const me=z[Re];xe(me[2]+fe,me[1]+fe,me[0]+fe)}Q=u+2*v,fe=ne*Q;for(let Re=0;Re<ae;Re++){const me=z[Re];xe(me[0]+fe,me[1]+fe,me[2]+fe)}}else{for(let Q=0;Q<ae;Q++){const fe=z[Q];xe(fe[2],fe[1],fe[0])}for(let Q=0;Q<ae;Q++){const fe=z[Q];xe(fe[0]+ne*u,fe[1]+ne*u,fe[2]+ne*u)}}i.addGroup(te,n.length/3-te,0)})(),function ge(){const te=n.length/3;let Q=0;Z(G,Q),Q+=G.length;for(let fe=0,Re=U.length;fe<Re;fe++){const me=U[fe];Z(me,Q),Q+=me.length}i.addGroup(te,n.length/3-te,1)}()}this.setAttribute("position",new Me(n,3)),this.setAttribute("uv",new Me(s,2)),this.computeVertexNormals()}toJSON(){const e=super.toJSON();return function uv(l,e,t){if(t.shapes=[],Array.isArray(l))for(let i=0,n=l.length;i<n;i++)t.shapes.push(l[i].uuid);else t.shapes.push(l.uuid);return t.options=Object.assign({},e),void 0!==e.extrudePath&&(t.options.extrudePath=e.extrudePath.toJSON()),t}(this.parameters.shapes,this.parameters.options,e)}static fromJSON(e,t){const i=[];for(let s=0,a=e.shapes.length;s<a;s++)i.push(t[e.shapes[s]]);const n=e.options.extrudePath;return void 0!==n&&(e.options.extrudePath=(new hl[n.type]).fromJSON(n)),new Fa(i,e.options)}}const hv={generateTopUV:function(l,e,t,i,n){const o=e[3*i],c=e[3*i+1],h=e[3*n],u=e[3*n+1];return[new ie(e[3*t],e[3*t+1]),new ie(o,c),new ie(h,u)]},generateSideWallUV:function(l,e,t,i,n,s){const a=e[3*t],o=e[3*t+1],c=e[3*t+2],h=e[3*i],u=e[3*i+1],d=e[3*i+2],f=e[3*n],m=e[3*n+1],_=e[3*n+2],g=e[3*s],v=e[3*s+1],x=e[3*s+2];return Math.abs(o-u)<Math.abs(a-h)?[new ie(a,1-c),new ie(h,1-d),new ie(f,1-_),new ie(g,1-x)]:[new ie(o,1-c),new ie(u,1-d),new ie(m,1-_),new ie(v,1-x)]}};class Rs extends Ve{constructor(e=1,t=32,i=16,n=0,s=2*Math.PI,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:s,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const c=Math.min(a+o,Math.PI);let h=0;const u=[],d=new D,f=new D,m=[],_=[],g=[],v=[];for(let x=0;x<=i;x++){const R=[],T=x/i;let M=0;0==x&&0==a?M=.5/t:x==i&&c==Math.PI&&(M=-.5/t);for(let P=0;P<=t;P++){const L=P/t;d.x=-e*Math.cos(n+L*s)*Math.sin(a+T*o),d.y=e*Math.cos(a+T*o),d.z=e*Math.sin(n+L*s)*Math.sin(a+T*o),_.push(d.x,d.y,d.z),f.copy(d).normalize(),g.push(f.x,f.y,f.z),v.push(L+M,1-T),R.push(h++)}u.push(R)}for(let x=0;x<i;x++)for(let R=0;R<t;R++){const M=u[x][R],P=u[x+1][R],L=u[x+1][R+1];(0!==x||a>0)&&m.push(u[x][R+1],M,L),(x!==i-1||c<Math.PI)&&m.push(M,P,L)}this.setIndex(m),this.setAttribute("position",new Me(_,3)),this.setAttribute("normal",new Me(g,3)),this.setAttribute("uv",new Me(v,2))}static fromJSON(e){return new Rs(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class ru extends Bi{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class su extends ji{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new be(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class au extends ji{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new be(16777215),this.specular=new be(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=zr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ou extends ri{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function _i(l,e,t){return Sl(l)?new l.constructor(l.subarray(e,void 0!==t?t:l.length)):l.slice(e,t)}function On(l,e,t){return!l||!t&&l.constructor===e?l:"number"==typeof e.BYTES_PER_ELEMENT?new e(l):Array.prototype.slice.call(l)}function Sl(l){return ArrayBuffer.isView(l)&&!(l instanceof DataView)}class Ba{constructor(e,t,i,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let i=this._cachedIndex,n=t[i],s=t[i-1];e:{t:{let a;i:{n:if(!(e<n)){for(let o=i+2;;){if(void 0===n){if(e<s)break n;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===o)break;if(s=n,n=t[++i],e<n)break t}a=t.length;break i}if(e>=s)break e;{const o=t[1];e<o&&(i=2,s=o);for(let c=i-2;;){if(void 0===s)return this._cachedIndex=0,this.copySampleValue_(0);if(i===c)break;if(n=s,s=t[--i-1],e>=s)break t}a=i,i=0}}for(;i<a;){const o=i+a>>>1;e<t[o]?a=o:i=o+1}if(n=t[i],s=t[i-1],void 0===s)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===n)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,s,n)}return this.interpolate_(i,s,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,s=e*n;for(let a=0;a!==n;++a)t[a]=i[s+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class xv extends Ba{constructor(e,t,i,n){super(e,t,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(e,t,i){const n=this.parameterPositions;let s=e-2,a=e+1,o=n[s],c=n[a];if(void 0===o)switch(this.getSettings_().endingStart){case 2401:s=e,o=2*t-i;break;case 2402:s=n.length-2,o=t+n[s]-n[s+1];break;default:s=e,o=i}if(void 0===c)switch(this.getSettings_().endingEnd){case 2401:a=e,c=2*i-t;break;case 2402:a=1,c=i+n[1]-n[0];break;default:a=e-1,c=t}const h=.5*(i-t),u=this.valueSize;this._weightPrev=h/(t-o),this._weightNext=h/(c-i),this._offsetPrev=s*u,this._offsetNext=a*u}interpolate_(e,t,i,n){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=e*o,h=c-o,u=this._offsetPrev,d=this._offsetNext,f=this._weightPrev,m=this._weightNext,_=(i-t)/(n-t),g=_*_,v=g*_,x=-f*v+2*f*g-f*_,R=(1+f)*v+(-1.5-2*f)*g+(-.5+f)*_+1,T=(-1-m)*v+(1.5+m)*g+.5*_,M=m*v-m*g;for(let P=0;P!==o;++P)s[P]=x*a[u+P]+R*a[h+P]+T*a[c+P]+M*a[d+P];return s}}class cu extends Ba{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=e*o,h=c-o,u=(i-t)/(n-t),d=1-u;for(let f=0;f!==o;++f)s[f]=a[h+f]*d+a[c+f]*u;return s}}class Mv extends Ba{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class Oi{constructor(e,t,i,n){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=On(t,this.TimeBufferType),this.values=On(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:On(e.times,Array),values:On(e.values,Array)};const n=e.getInterpolation();n!==e.DefaultInterpolation&&(i.interpolation=n)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new Mv(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new cu(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new xv(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case 2300:t=this.InterpolantFactoryMethodDiscrete;break;case 2301:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(i);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]*=e}return this}trim(e,t){const i=this.times,n=i.length;let s=0,a=n-1;for(;s!==n&&i[s]<e;)++s;for(;-1!==a&&i[a]>t;)--a;if(++a,0!==s||a!==n){s>=a&&(a=Math.max(a,1),s=a-1);const o=this.getValueSize();this.times=_i(i,s,a),this.values=_i(this.values,s*o,a*o)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,n=this.values,s=i.length;0===s&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let o=0;o!==s;o++){const c=i[o];if("number"==typeof c&&isNaN(c)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,c),e=!1;break}if(null!==a&&a>c){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,c,a),e=!1;break}a=c}if(void 0!==n&&Sl(n))for(let o=0,c=n.length;o!==c;++o){const h=n[o];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,h),e=!1;break}}return e}optimize(){const e=_i(this.times),t=_i(this.values),i=this.getValueSize(),n=2302===this.getInterpolation(),s=e.length-1;let a=1;for(let o=1;o<s;++o){let c=!1;const h=e[o];if(h!==e[o+1]&&(1!==o||h!==e[0]))if(n)c=!0;else{const d=o*i,f=d-i,m=d+i;for(let _=0;_!==i;++_){const g=t[d+_];if(g!==t[f+_]||g!==t[m+_]){c=!0;break}}}if(c){if(o!==a){e[a]=e[o];const d=o*i,f=a*i;for(let m=0;m!==i;++m)t[f+m]=t[d+m]}++a}}if(s>0){e[a]=e[s];for(let o=s*i,c=a*i,h=0;h!==i;++h)t[c+h]=t[o+h];++a}return a!==e.length?(this.times=_i(e,0,a),this.values=_i(t,0,a*i)):(this.times=e,this.values=t),this}clone(){const e=_i(this.times,0),t=_i(this.values,0),n=new(0,this.constructor)(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}Oi.prototype.TimeBufferType=Float32Array,Oi.prototype.ValueBufferType=Float32Array,Oi.prototype.DefaultInterpolation=2301;class Ar extends Oi{}Ar.prototype.ValueTypeName="bool",Ar.prototype.ValueBufferType=Array,Ar.prototype.DefaultInterpolation=2300,Ar.prototype.InterpolantFactoryMethodLinear=void 0,Ar.prototype.InterpolantFactoryMethodSmooth=void 0;(class hu extends Oi{}).prototype.ValueTypeName="color";(class Ia extends Oi{}).prototype.ValueTypeName="number";class Rv extends Ba{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=(i-t)/(n-t);let h=e*o;for(let u=h+o;h!==u;h+=4)Zt.slerpFlat(s,0,a,h-o,a,h,c);return s}}class Ss extends Oi{InterpolantFactoryMethodLinear(e){return new Rv(this.times,this.values,this.getValueSize(),e)}}Ss.prototype.ValueTypeName="quaternion",Ss.prototype.DefaultInterpolation=2301,Ss.prototype.InterpolantFactoryMethodSmooth=void 0;class Er extends Oi{}Er.prototype.ValueTypeName="string",Er.prototype.ValueBufferType=Array,Er.prototype.DefaultInterpolation=2300,Er.prototype.InterpolantFactoryMethodLinear=void 0,Er.prototype.InterpolantFactoryMethodSmooth=void 0;(class Ga extends Oi{}).prototype.ValueTypeName="vector";const Fr={enabled:!1,files:{},add:function(l,e){!1!==this.enabled&&(this.files[l]=e)},get:function(l){if(!1!==this.enabled)return this.files[l]},remove:function(l){delete this.files[l]},clear:function(){this.files={}}};class uu{constructor(e,t,i){const n=this;let c,s=!1,a=0,o=0;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(u){o++,!1===s&&void 0!==n.onStart&&n.onStart(u,a,o),s=!0},this.itemEnd=function(u){a++,void 0!==n.onProgress&&n.onProgress(u,a,o),a===o&&(s=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(u){void 0!==n.onError&&n.onError(u)},this.resolveURL=function(u){return c?c(u):u},this.setURLModifier=function(u){return c=u,this},this.addHandler=function(u,d){return h.push(u,d),this},this.removeHandler=function(u){const d=h.indexOf(u);return-1!==d&&h.splice(d,2),this},this.getHandler=function(u){for(let d=0,f=h.length;d<f;d+=2){const m=h[d],_=h[d+1];if(m.global&&(m.lastIndex=0),m.test(u))return _}return null}}}const Pv=new uu;class za{constructor(e){this.manager=void 0!==e?e:Pv,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const i=this;return new Promise(function(n,s){i.load(e,n,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Zi={};class Cv extends Error{constructor(e,t){super(e),this.response=t}}class $i extends za{constructor(e){super(e)}load(e,t,i,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=Fr.get(e);if(void 0!==s)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(void 0!==Zi[e])return void Zi[e].push({onLoad:t,onProgress:i,onError:n});Zi[e]=[],Zi[e].push({onLoad:t,onProgress:i,onError:n});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,c=this.responseType;fetch(a).then(h=>{if(200===h.status||0===h.status){if(0===h.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||void 0===h.body||void 0===h.body.getReader)return h;const u=Zi[e],d=h.body.getReader(),f=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),m=f?parseInt(f):0,_=0!==m;let g=0;const v=new ReadableStream({start(x){!function R(){d.read().then(({done:T,value:M})=>{if(T)x.close();else{g+=M.byteLength;const P=new ProgressEvent("progress",{lengthComputable:_,loaded:g,total:m});for(let L=0,j=u.length;L<j;L++){const S=u[L];S.onProgress&&S.onProgress(P)}x.enqueue(M),R()}})}()}});return new Response(v)}throw new Cv(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(c){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(u=>(new DOMParser).parseFromString(u,o));case"json":return h.json();default:if(void 0===o)return h.text();{const d=/charset="?([^;"\s]*)"?/i.exec(o),f=d&&d[1]?d[1].toLowerCase():void 0,m=new TextDecoder(f);return h.arrayBuffer().then(_=>m.decode(_))}}}).then(h=>{Fr.add(e,h);const u=Zi[e];delete Zi[e];for(let d=0,f=u.length;d<f;d++){const m=u[d];m.onLoad&&m.onLoad(h)}}).catch(h=>{const u=Zi[e];if(void 0===u)throw this.manager.itemError(e),h;delete Zi[e];for(let d=0,f=u.length;d<f;d++){const m=u[d];m.onError&&m.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class ka extends za{constructor(e){super(e)}load(e,t,i,n){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=Fr.get(e);if(void 0!==a)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const o=sr("img");function c(){u(),Fr.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(d){u(),n&&n(d),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){o.removeEventListener("load",c,!1),o.removeEventListener("error",h,!1)}return o.addEventListener("load",c,!1),o.addEventListener("error",h,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),s.manager.itemStart(e),o.src=e,o}}class Dv extends za{constructor(e){super(e)}load(e,t,i,n){const s=new Ri,a=new ka(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){s.image=o,s.needsUpdate=!0,void 0!==t&&t(s)},i,n),s}}class ws extends st{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new be(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}const Cl=new ze,fu=new D,du=new D;class Dl{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ie(512,512),this.map=null,this.mapPass=null,this.matrix=new ze,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ho,this._frameExtents=new ie(1,1),this._viewportCount=1,this._viewports=[new et(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;fu.setFromMatrixPosition(e.matrixWorld),t.position.copy(fu),du.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(du),t.updateMatrixWorld(),Cl.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Cl),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(Cl)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Av extends Dl{constructor(){super(new zt(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,i=2*nr*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(i!==t.fov||n!==t.aspect||s!==t.far)&&(t.fov=i,t.aspect=n,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class pu extends ws{constructor(e,t,i=0,n=Math.PI/3,s=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(st.DefaultUp),this.updateMatrix(),this.target=new st,this.distance=i,this.angle=n,this.penumbra=s,this.decay=a,this.map=null,this.shadow=new Av}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const mu=new ze,Ps=new D,Ll=new D;class Ev extends Dl{constructor(){super(new zt(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ie(4,2),this._viewportCount=6,this._viewports=[new et(2,1,1,1),new et(0,1,1,1),new et(3,1,1,1),new et(1,1,1,1),new et(3,0,1,1),new et(1,0,1,1)],this._cubeDirections=[new D(1,0,0),new D(-1,0,0),new D(0,0,1),new D(0,0,-1),new D(0,1,0),new D(0,-1,0)],this._cubeUps=[new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,0,1),new D(0,0,-1)]}updateMatrices(e,t=0){const i=this.camera,n=this.matrix,s=e.distance||i.far;s!==i.far&&(i.far=s,i.updateProjectionMatrix()),Ps.setFromMatrixPosition(e.matrixWorld),i.position.copy(Ps),Ll.copy(i.position),Ll.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(Ll),i.updateMatrixWorld(),n.makeTranslation(-Ps.x,-Ps.y,-Ps.z),mu.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(mu)}}class gu extends ws{constructor(e,t,i=0,n=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new Ev}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Fv extends Dl{constructor(){super(new ua(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class vu extends ws{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(st.DefaultUp),this.updateMatrix(),this.target=new st,this.shadow=new Fv}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class _u extends ws{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Su{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=wu(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=wu();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function wu(){return(typeof performance>"u"?Date:performance).now()}const El="\\[\\]\\.:\\/",Vv=new RegExp("["+El+"]","g"),Fl="[^"+El+"]",Hv="[^"+El.replace("\\.","")+"]",Zv=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",Fl)+/(WCOD+)?/.source.replace("WCOD",Hv)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Fl)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Fl)+"$"),$v=["material","materials","bones","map"];class Jv{constructor(e,t,i){const n=i||ct.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();const n=this._bindings[this._targetGroup.nCachedObjects_];void 0!==n&&n.getValue(e,t)}setValue(e,t){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,s=i.length;n!==s;++n)i[n].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}}let ct=(()=>{class l{constructor(t,i,n){this.path=i,this.parsedPath=n||l.parseTrackName(i),this.node=l.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,i,n){return t&&t.isAnimationObjectGroup?new l.Composite(t,i,n):new l(t,i,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(Vv,"")}static parseTrackName(t){const i=Zv.exec(t);if(null===i)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:i[2],objectName:i[3],objectIndex:i[4],propertyName:i[5],propertyIndex:i[6]},s=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==s&&-1!==s){const a=n.nodeName.substring(s+1);-1!==$v.indexOf(a)&&(n.nodeName=n.nodeName.substring(0,s),n.objectName=a)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,i){if(void 0===i||""===i||"."===i||-1===i||i===t.name||i===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(i);if(void 0!==n)return n}if(t.children){const n=function(a){for(let o=0;o<a.length;o++){const c=a[o];if(c.name===i||c.uuid===i)return c;const h=n(c.children);if(h)return h}return null},s=n(t.children);if(s)return s}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,i){t[i]=this.targetObject[this.propertyName]}_getValue_array(t,i){const n=this.resolvedProperty;for(let s=0,a=n.length;s!==a;++s)t[i++]=n[s]}_getValue_arrayElement(t,i){t[i]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,i){this.resolvedProperty.toArray(t,i)}_setValue_direct(t,i){this.targetObject[this.propertyName]=t[i]}_setValue_direct_setNeedsUpdate(t,i){this.targetObject[this.propertyName]=t[i],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,i){this.targetObject[this.propertyName]=t[i],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,i){const n=this.resolvedProperty;for(let s=0,a=n.length;s!==a;++s)n[s]=t[i++]}_setValue_array_setNeedsUpdate(t,i){const n=this.resolvedProperty;for(let s=0,a=n.length;s!==a;++s)n[s]=t[i++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,i){const n=this.resolvedProperty;for(let s=0,a=n.length;s!==a;++s)n[s]=t[i++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,i){this.resolvedProperty[this.propertyIndex]=t[i]}_setValue_arrayElement_setNeedsUpdate(t,i){this.resolvedProperty[this.propertyIndex]=t[i],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,i){this.resolvedProperty[this.propertyIndex]=t[i],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,i){this.resolvedProperty.fromArray(t,i)}_setValue_fromArray_setNeedsUpdate(t,i){this.resolvedProperty.fromArray(t,i),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,i){this.resolvedProperty.fromArray(t,i),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,i){this.bind(),this.getValue(t,i)}_setValue_unbound(t,i){this.bind(),this.setValue(t,i)}bind(){let t=this.node;const i=this.parsedPath,n=i.objectName,s=i.propertyName;let a=i.propertyIndex;if(t||(t=l.findNode(this.rootNode,i.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let u=i.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let d=0;d<t.length;d++)if(t[d].name===u){u=d;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);t=t.material.map;break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==u){if(void 0===t[u])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[u]}}const o=t[s];if(void 0===o)return void console.error("THREE.PropertyBinding: Trying to update property for track: "+i.nodeName+"."+s+" but it wasn't found.",t);let c=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?c=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(c=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(void 0!==a){if("morphTargetInfluences"===s){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[a]&&(a=t.morphTargetDictionary[a])}h=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=a}else void 0!==o.fromArray&&void 0!==o.toArray?(h=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(h=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=s;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}return l.Composite=Jv,l})();ct.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},ct.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},ct.prototype.GetterByBindingType=[ct.prototype._getValue_direct,ct.prototype._getValue_array,ct.prototype._getValue_arrayElement,ct.prototype._getValue_toArray],ct.prototype.SetterByBindingTypeAndVersioning=[[ct.prototype._setValue_direct,ct.prototype._setValue_direct_setNeedsUpdate,ct.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[ct.prototype._setValue_array,ct.prototype._setValue_array_setNeedsUpdate,ct.prototype._setValue_array_setMatrixWorldNeedsUpdate],[ct.prototype._setValue_arrayElement,ct.prototype._setValue_arrayElement_setNeedsUpdate,ct.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[ct.prototype._setValue_fromArray,ct.prototype._setValue_fromArray_setNeedsUpdate,ct.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],new Float32Array(1);class t_{constructor(e,t,i=0,n=1/0){this.ray=new mn(e,t),this.near=i,this.far=n,this.camera=null,this.layers=new p,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,i=[]){return jl(e,this,i,t),i.sort(Lu),i}intersectObjects(e,t=!0,i=[]){for(let n=0,s=e.length;n<s;n++)jl(e[n],this,i,t);return i.sort(Lu),i}}function Lu(l,e){return l.distance-e.distance}function jl(l,e,t,i){if(l.layers.test(e.layers)&&l.raycast(e,t),!0===i){const n=l.children;for(let s=0,a=n.length;s<a;s++)jl(n[s],e,t,!0)}}class i_{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(gt(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}const Au=new ie;class n_{constructor(e=new ie(1/0,1/0),t=new ie(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=Au.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Au.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Fu=new D;class r_ extends st{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const i=new Ve,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,o=1,c=32;a<c;a++,o++){const h=a/c*Math.PI*2,u=o/c*Math.PI*2;n.push(Math.cos(h),Math.sin(h),1,Math.cos(u),Math.sin(u),1)}i.setAttribute("position",new Me(n,3));const s=new ri({fog:!1,toneMapped:!1});this.cone=new Pr(i,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Fu.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Fu),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}class s_ extends Ht{constructor(e,t,i){super(new Rs(t,4,2),new vn({wireframe:!0,fog:!1,toneMapped:!1})),this.light=e,this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}class o_ extends Pr{constructor(e=10,t=10,i=4473924,n=8947848){i=new be(i),n=new be(n);const s=t/2,a=e/t,o=e/2,c=[],h=[];for(let f=0,m=0,_=-o;f<=t;f++,_+=a){c.push(-o,0,_,o,0,_),c.push(_,0,-o,_,0,o);const g=f===s?i:n;g.toArray(h,m),m+=3,g.toArray(h,m),m+=3,g.toArray(h,m),m+=3,g.toArray(h,m),m+=3}const u=new Ve;u.setAttribute("position",new Me(c,3)),u.setAttribute("color",new Me(h,3)),super(u,new ri({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Gu=new D,Ha=new D,Ou=new D;class l_ extends st{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="DirectionalLightHelper",void 0===t&&(t=1);let n=new Ve;n.setAttribute("position",new Me([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new ri({fog:!1,toneMapped:!1});this.lightPlane=new wr(n,s),this.add(this.lightPlane),n=new Ve,n.setAttribute("position",new Me([0,0,0,0,0,1],3)),this.targetLine=new wr(n,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Gu.setFromMatrixPosition(this.light.matrixWorld),Ha.setFromMatrixPosition(this.light.target.matrixWorld),Ou.subVectors(Ha,Gu),this.lightPlane.lookAt(Ha),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Ha),this.targetLine.scale.z=Ou.length()}}const Wa=new D,vt=new oa;class c_ extends Pr{constructor(e){const t=new Ve,i=new ri({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],s=[],a={};function o(_,g){c(_),c(g)}function c(_){n.push(0,0,0),s.push(0,0,0),void 0===a[_]&&(a[_]=[]),a[_].push(n.length/3-1)}o("n1","n2"),o("n2","n4"),o("n4","n3"),o("n3","n1"),o("f1","f2"),o("f2","f4"),o("f4","f3"),o("f3","f1"),o("n1","f1"),o("n2","f2"),o("n3","f3"),o("n4","f4"),o("p","n1"),o("p","n2"),o("p","n3"),o("p","n4"),o("u1","u2"),o("u2","u3"),o("u3","u1"),o("c","t"),o("p","c"),o("cn1","cn2"),o("cn3","cn4"),o("cf1","cf2"),o("cf3","cf4"),t.setAttribute("position",new Me(n,3)),t.setAttribute("color",new Me(s,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const h=new be(16755200),u=new be(16711680),d=new be(43775),f=new be(16777215),m=new be(3355443);this.setColors(h,u,d,f,m)}setColors(e,t,i,n,s){const o=this.geometry.getAttribute("color");o.setXYZ(0,e.r,e.g,e.b),o.setXYZ(1,e.r,e.g,e.b),o.setXYZ(2,e.r,e.g,e.b),o.setXYZ(3,e.r,e.g,e.b),o.setXYZ(4,e.r,e.g,e.b),o.setXYZ(5,e.r,e.g,e.b),o.setXYZ(6,e.r,e.g,e.b),o.setXYZ(7,e.r,e.g,e.b),o.setXYZ(8,e.r,e.g,e.b),o.setXYZ(9,e.r,e.g,e.b),o.setXYZ(10,e.r,e.g,e.b),o.setXYZ(11,e.r,e.g,e.b),o.setXYZ(12,e.r,e.g,e.b),o.setXYZ(13,e.r,e.g,e.b),o.setXYZ(14,e.r,e.g,e.b),o.setXYZ(15,e.r,e.g,e.b),o.setXYZ(16,e.r,e.g,e.b),o.setXYZ(17,e.r,e.g,e.b),o.setXYZ(18,e.r,e.g,e.b),o.setXYZ(19,e.r,e.g,e.b),o.setXYZ(20,e.r,e.g,e.b),o.setXYZ(21,e.r,e.g,e.b),o.setXYZ(22,e.r,e.g,e.b),o.setXYZ(23,e.r,e.g,e.b),o.setXYZ(24,t.r,t.g,t.b),o.setXYZ(25,t.r,t.g,t.b),o.setXYZ(26,t.r,t.g,t.b),o.setXYZ(27,t.r,t.g,t.b),o.setXYZ(28,t.r,t.g,t.b),o.setXYZ(29,t.r,t.g,t.b),o.setXYZ(30,t.r,t.g,t.b),o.setXYZ(31,t.r,t.g,t.b),o.setXYZ(32,i.r,i.g,i.b),o.setXYZ(33,i.r,i.g,i.b),o.setXYZ(34,i.r,i.g,i.b),o.setXYZ(35,i.r,i.g,i.b),o.setXYZ(36,i.r,i.g,i.b),o.setXYZ(37,i.r,i.g,i.b),o.setXYZ(38,n.r,n.g,n.b),o.setXYZ(39,n.r,n.g,n.b),o.setXYZ(40,s.r,s.g,s.b),o.setXYZ(41,s.r,s.g,s.b),o.setXYZ(42,s.r,s.g,s.b),o.setXYZ(43,s.r,s.g,s.b),o.setXYZ(44,s.r,s.g,s.b),o.setXYZ(45,s.r,s.g,s.b),o.setXYZ(46,s.r,s.g,s.b),o.setXYZ(47,s.r,s.g,s.b),o.setXYZ(48,s.r,s.g,s.b),o.setXYZ(49,s.r,s.g,s.b),o.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap;vt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Tt("c",t,e,vt,0,0,-1),Tt("t",t,e,vt,0,0,1),Tt("n1",t,e,vt,-1,-1,-1),Tt("n2",t,e,vt,1,-1,-1),Tt("n3",t,e,vt,-1,1,-1),Tt("n4",t,e,vt,1,1,-1),Tt("f1",t,e,vt,-1,-1,1),Tt("f2",t,e,vt,1,-1,1),Tt("f3",t,e,vt,-1,1,1),Tt("f4",t,e,vt,1,1,1),Tt("u1",t,e,vt,.7,1.1,-1),Tt("u2",t,e,vt,-.7,1.1,-1),Tt("u3",t,e,vt,0,2,-1),Tt("cf1",t,e,vt,-1,0,1),Tt("cf2",t,e,vt,1,0,1),Tt("cf3",t,e,vt,0,-1,1),Tt("cf4",t,e,vt,0,1,1),Tt("cn1",t,e,vt,-1,0,-1),Tt("cn2",t,e,vt,1,0,-1),Tt("cn3",t,e,vt,0,-1,-1),Tt("cn4",t,e,vt,0,1,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Tt(l,e,t,i,n,s,a){Wa.set(n,s,a).unproject(i);const o=e[l];if(void 0!==o){const c=t.getAttribute("position");for(let h=0,u=o.length;h<u;h++)c.setXYZ(o[h],Wa.x,Wa.y,Wa.z)}}class h_ extends Pr{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=new Ve;n.setAttribute("position",new Me(t,3)),n.setAttribute("color",new Me([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(n,new ri({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(e,t,i){const n=new be,s=this.geometry.attributes.color.array;return n.set(e),n.toArray(s,0),n.toArray(s,3),n.set(t),n.toArray(s,6),n.toArray(s,9),n.set(i),n.toArray(s,12),n.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class u_{constructor(){this.type="ShapePath",this.color=new be,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Sa,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,i,n){return this.currentPath.quadraticCurveTo(e,t,i,n),this}bezierCurveTo(e,t,i,n,s,a){return this.currentPath.bezierCurveTo(e,t,i,n,s,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function i(x,R){const T=R.length;let M=!1;for(let P=T-1,L=0;L<T;P=L++){let j=R[P],S=R[L],A=S.x-j.x,B=S.y-j.y;if(Math.abs(B)>Number.EPSILON){if(B<0&&(j=R[L],A=-A,S=R[P],B=-B),x.y<j.y||x.y>S.y)continue;if(x.y===j.y){if(x.x===j.x)return!0}else{const U=B*(x.x-j.x)-A*(x.y-j.y);if(0===U)return!0;if(U<0)continue;M=!M}}else{if(x.y!==j.y)continue;if(S.x<=x.x&&x.x<=j.x||j.x<=x.x&&x.x<=S.x)return!0}}return M}const n=Yi.isClockWise,s=this.subPaths;if(0===s.length)return[];let a,o,c;const h=[];if(1===s.length)return o=s[0],c=new Dr,c.curves=o.curves,h.push(c),h;let u=!n(s[0].getPoints());u=e?!u:u;const d=[],f=[];let g,v,m=[],_=0;f[_]=void 0,m[_]=[];for(let x=0,R=s.length;x<R;x++)o=s[x],g=o.getPoints(),a=n(g),a=e?!a:a,a?(!u&&f[_]&&_++,f[_]={s:new Dr,p:g},f[_].s.curves=o.curves,u&&_++,m[_]=[]):m[_].push({h:o,p:g[0]});if(!f[0])return function t(x){const R=[];for(let T=0,M=x.length;T<M;T++){const P=x[T],L=new Dr;L.curves=P.curves,R.push(L)}return R}(s);if(f.length>1){let x=!1,R=0;for(let T=0,M=f.length;T<M;T++)d[T]=[];for(let T=0,M=f.length;T<M;T++){const P=m[T];for(let L=0;L<P.length;L++){const j=P[L];let S=!0;for(let A=0;A<f.length;A++)i(j.p,f[A].p)&&(T!==A&&R++,S?(S=!1,d[A].push(j)):x=!0);S&&d[T].push(j)}}R>0&&!1===x&&(m=d)}for(let x=0,R=f.length;x<R;x++){c=f[x].s,h.push(c),v=m[x];for(let T=0,M=v.length;T<M;T++)c.holes.push(v[T].h)}return h}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Se}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Se)},5861:(jr,bi,at)=>{function F(si,Et,Di,xt,ui,_t,kt){try{var Gt=si[_t](kt),Xt=Gt.value}catch(zi){return void Di(zi)}Gt.done?Et(Xt):Promise.resolve(Xt).then(xt,ui)}function Se(si){return function(){var Et=this,Di=arguments;return new Promise(function(xt,ui){var _t=si.apply(Et,Di);function kt(Xt){F(_t,xt,ui,kt,Gt,"next",Xt)}function Gt(Xt){F(_t,xt,ui,kt,Gt,"throw",Xt)}kt(void 0)})}}at.d(bi,{Z:()=>Se})}}]);